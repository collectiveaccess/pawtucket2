# *** use ONLY lowercase letters in lists: input will be forced to lowercase for comparison ***

# Keywords containing spaces : CA parser use the space as a separator to treat the date entered and
# CANNOT treat expression containing a space as a single one as "av. J.-C." in french.
wordsWithSpaces = [ap JC,ap J-C,ap. J-C,ap. J.-C.,après JC,après J-C,après J.-C.,apr. J.-C.,apr. J-C,apr J-C,av JC,av J-C,av. J-C,av. J.-C.,avant JC,avant J-C,avant J.-C.]

# Words containing spaces replacement : complete with the chosen replacement. You MUST use the replacement
# in each value defined in this file, not the original string. Do not use punctuation in the replacement string.
wordsWithSpacesReplacements = [apjc,apjc,apjc,apjc,apjc,apjc,apjc,apjc,apjc,apjc,avjc,avjc,avjc,avjc,avjc,avjc]

# List month names; used whenever name of month needs to be displayed
monthList = [janvier, février, mars, avril, mai, juin, juillet, août, septembre, octobre, novembre, décembre]

# *** the following list of months is for display and *SHOULD* be capitalized where appropriate
monthListDisplay = [Janvier, Février, Mars, Avril, Mai, Juin, Juillet, Août, Septembre, Octobre, Novembre, Décembre]

# Hash table mapping acceptable month names to the display names defined in 'monthList'
# http://fr.wikipedia.org/wiki/Mois
# code à trois caratères et abreviations courantes
monthTable = {
	jan = janvier, janv. = janvier,
	fév = février, févr. = février, fev = février,
	mar = mars, mars = mars,
	avr = avril, avr. = avril,
	mai = mai,
	jun = juin, juin = juin,
	jul = juillet, juill. = juillet,
	aoû = août, aou = août,
	sep = septembre, sept. = septembre,
	oct = octobre, oct. = octobre,
	nov = novembre, nov. = novembre,
	dec = décembre, dec. = décembre, déc = décembre
}

# List of day names, starting with Sunday
dayListDisplay = [Dimanche, Lundi, Mardi, Mercredi, Jeudi, Vendredi, Samedi]

#rangePreConjunctions = [from, between]
rangePreConjunctions = [du,entre,de]

#rangeConjunctions = [to, -, and, .., through]
rangeConjunctions = [–, -, ..., au, et, à]

dateTimeConjunctions = [à,@]

dateDelimiters = [/,-,.]
timeDelimiters = [:,h,min]

timeAMMeridian = am
timePMMeridian = pm

meridianTable = {
	a.m. = am,
	p.m. = pm
}

dateCircaIndicator = [vers, environ, autour de, <>, <approximatif>, circa, c, c., ca, ca., cca.]
dateProbablyIndicator = [probablement]
dateUncertaintyIndicator = [~]
#dateUncertaintyYearIndicator = [y]
dateUncertaintyYearIndicator = [a]
#dateUncertaintyDayIndicator = [d]
dateUncertaintyDayIndicator = [j]

# What to use to indicate a geological date ("millions of years ago")
dateMYA = [Ma]

# What to use to indicate radiocarbon dates ("before present")
dateBP = [bp]

dateADIndicator = EC
dateBCIndicator = av. J.-C.
ADBCTable = {
	ad = ap. J.-C.,
	a.d. = ap. J.-C.,
	AD = ap. J.-C.,
	bc = av. J.-C.,
	b.c. = av. J.-C.,
	BC = av. J.-C.,
	c.e. = ap. J.-C.,
	b.c.e. = av. J.-C.,
	ce = ap. J.-C.,
	bce = av. J.-C.,
	avjc = av. J.-C.,
	apjc = ap. J.-C.
}

#nowDate = [now]
nowDate = [maintenant]
#todayDate = [today]
todayDate = [aujourd'hui]
#yesterdayDate = [yesterday]
yesterdayDate = [hier]
#tomorrowDate = [tomorrow]
tomorrowDate = [demain]
undatedDate = [undated, unknown]

#presentDate = [present, ?, ??, ???, ????]
presentDate = [présent, ?, ??, ???, ????]
#beforeQualifier = [before]
beforeQualifier = [avant]
earlyQualifier = [early]
midQualifier = [mid, middle]
lateQualifier = [late]
#diedQualifier = [d., d, died]
diedQualifier = [m., m, mort]
#afterQualifier = [after]
afterQualifier = [après]
#bornQualifier = [b., b, born]
# ??? "né le", "née le"  
bornQualifier = [n., n, né]

# Text to indicate century (as in "20th century")
centuryIndicator = [S., s., siècle, siecle, century, cent]

# Text to indicate decade (as in "1920s")
decadeIndicator = [s]

# list of numeric suffixes, starting with the one for zero
# (eg. 0th, 1st, 2nd, 3rd would be a list like so: [th, st, nd, rd])
#ordinalSuffixes = [th, st, nd, rd]
# ??? à revoir
ordinalSuffixes = [e, er, e, e]
#ordinalSuffixDefault = th
ordinalSuffixDefault = e

# in delimited dates (ex. 12/10/2009) is the first number a month or a day?
# set to "0" for European style dates (day comes first); "1" for American-style dates (month comes first)
#monthComesFirstInDelimitedDate = 1
monthComesFirstInDelimitedDate = 0

# character(s) to append to day in full (not delimited) date
# eg. in the date "1. February 2009", "." is the daySuffix
# Note: you can put arbitrary text here - only punctuation
daySuffix = 

# Definite articles
#definiteArticles = [the]
definiteArticles = [le]

# Indefinite articles
#indefiniteArticles = [a, an]
# ??? une 
indefiniteArticles = [un, au]

# Seasons
winterSeason = [hiver]
springSeason = [printemps]
summerSeason = [été]
autumnSeason = [automne]
