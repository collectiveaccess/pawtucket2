# *** use ONLY lowercase letters in lists: input will be forced to lowercase for comparison ***

# List month names; used whenever name of month needs to be displayed
monthList = [styczeń, luty, marzec, kwiecień, maj, czerwiec, lipiec, sierpień, wrzesień, październik, listopad, grudzień ]

# *** the following list of months is for display and *SHOULD* be capitalized where appropriate
monthListDisplay = [ Styczeń, Luty, Marzec, Kwiecień, Maj, Czerwiec, Lipiec, Sierpień, Wrzesień, Październik, Listopad, Grudzień]

# Hash table mapping acceptable month names to the display names defined in 'monthList'
monthTable = { 
	sty = styczeń, sty. = styczeń, i= styczeń,
	lut = luty, lut. = luty, ii = luty,
	mar = marzec, mar. = marzec, iii = marzec,
	kwi = kwiecień, kwi. = kwiecień, iv = kwiecień, 
	maj = maj, v = maj, 
	cze = czerwiec, cze. = czerwiec, vi = czerwiec, 
	lip = lipiec, lip. = lipiec, vii = lipiec, 
	sie = sierpień, sie. = sierpień, viii = sierpień, 
	wrz = wrzesień, wrz. = wrzesień, ix = wrzesień, 
	paz = październik, paz. = październik, x = październik, 
	lis = listopad, lis. = listopad, xi = listopad, 
	gru = grudzień, gru. = grudzień, xii = grudzień}

# List of day names, starting with Sunday
dayListDisplay = [ Niedziela, Poniedziałek, Wtorek, Środa, Czwartek, Piątek, Sobota ]

rangePreConjunctions = [ od, między ]
rangeConjunctions = [–, -, do, a, ..]

dateTimeConjunctions = [ o, @ ]

dateDelimiters = [ /, . ]
timeDelimiters = [ : ]

timeAMMeridian = am
timePMMeridian = pm

meridianTable = {
	a.m. = am,
	p.m. = pm
}

dateCircaIndicator = [ około, ok. ]
dateProbablyIndicator = [probably, possibly]
dateUncertaintyIndicator = [ ~ ]
dateUncertaintyYearIndicator = [ r ]
dateUncertaintyDayIndicator = [ d ]

# What to use to indicate a geological date ("millions of years ago")
dateMYA = [ mlt ]

# What to use to indicate radiocarbon dates ("before present")
dateBP = [bp]

dateADIndicator = ad
dateBCIndicator = pne
ADBCTable = {
	a.d. = ad,
	p.n.e. = pne
}

nowDate = [teraz]
todayDate = [dzisiaj]
yesterdayDate = [wczoraj]
tomorrowDate = [jutro]
undatedDate = [undated, unknown]

presentDate = [ obecnie, ?, ??, ???, ???? ]
beforeQualifier = [ przed, poprzedza, wcześniej niż ]
earlyQualifier = [early]
midQualifier = [mid, middle]
lateQualifier = [late]
diedQualifier = [ zm., zmarły, zmarła]
afterQualifier = [ po, później niż, następuje po]
bornQualifier = [ ur., urodzony, urodzona]

# Text to indicate century (as in "20th century")
centuryIndicator = [ wiek, w.]

# Text to indicate decdae (as in "1920s")
decadeIndicator = [ -sty, -ste]

# list of numeric suffixes, starting with the one for zero
# (eg. 0th, 1st, 2nd, 3rd would be a list like so: [th, st, nd, rd])
ordinalSuffixes = [ -wy, -szy, -gi, -ci, -ty]
ordinalSuffixDefault = -ty

# in delimited dates (ex. 12/10/2009) is the first number a month or a day?
# set to "0" for European style dates (day comes first); "1" for American-style dates (month comes first)
monthComesFirstInDelimitedDate = 0

# character(s) to append to day in full (not delimited) date
# eg. in the date "1. February 2009", "." is the daySuffix
# Note: you can put arbitrary text here - only punctuation
daySuffix = 

# Definite articles
definiteArticles = []

# Indefinite articles
indefiniteArticles = []

# Seasons
winterSeason = [zima]
springSeason = [wiosna]
summerSeason = [lato]
autumnSeason = [jesień]
