#                          _                       __
#                         | |                     / _|
#  ___  ___  __ _ _ __ ___| |__    ___ ___  _ __ | |_
# / __|/ _ \/ _` | '__/ __| '_ \  / __/ _ \| '_ \|  _|
# \__ \  __/ (_| | | | (__| | | || (_| (_) | | | | |
# |___/\___|\__,_|_|  \___|_| |_(_)___\___/|_| |_|_|
#
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Pawtucket 2.0
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Search configuration file
#
# Info @ http://docs.collectiveaccess.org/wiki/Pawtucket2:Configuration
# -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

# number of seconds to keep cached searches around
# set to 0 to disable caching
cache_timeout = 86400

# Maximum number of records to buffer indexing for before
# writing out to search engine. Generally, larger numbers provide better
# performance up to a point, at the expense of memory footprint. Larger 
# values may cause issues with some engines. If you are experiencing errors while 
# indexing, excessive memory use or lost indexing trying reducing the value of 
# this setting and then reindex.
#
max_indexing_buffer_size = 500000

# -------------------
# SqlSearch Plugin Configuration
# -------------------

# Set to 0 if you don't want search input stemmed (ie. suffixes removed) prior to search
# The plugin uses the English Snoball stemmer (http://snowball.tartarus.org/) and can give
# poor results with non-English content. If you are cataloguing non-English material you
# will probably want to turn this off.
search_sql_search_do_stemming = 1


# -------------------
# ElasticSearch Plugin Configuration
# -------------------

# Set to 2 version version 2.x, 5 for version 5.x
elasticsearch_version = 5

# enter the elastic search base url here (without any index names)
search_elasticsearch_base_url = http://localhost:9200/

# This is the name of the ElasticSearch index used by CollectiveAccess.
# You probably don't need to change this unless you're using a single 
# ElasticSearch setup for multiple CollectiveAccess instances and/or
# other applications.
search_elasticsearch_index_name = collectiveaccess

# Indexing buffer size setting specifically for ElasticSearch
elasticsearch_indexing_buffer_size = 250

# -------------------
# General search and indexing behavior (all plugins)
# -------------------
# Suffixes to add to searches if they conform to a listed regular expression
search_suffixes = {
#	[\d]+\.[0-9A-Za-z\.]* = *
}

# Regex character class used when indexing; values matched will be used as token delimiters
# (in other words, the search expression will be broken into words wherever the matched characters are)
indexing_tokenizer_regex = ^\pL\pN\pNd/_#\@\&\-

# Regex character class used when searching; values matched will be used as token delimiters
# (this is the same thing as indexing_tokenizer_regex except that it's used when searching rather than indexing)
search_tokenizer_regex = ^\pL\pN\pNd/_#\@\&\-

# List of regular expressions that if matched cause search input to be treated "as-is" - searched without processing
# This is useful for preventing tokenization of accession numbers and other values that rely upon punctuation being
# kept intact.
asis_regexes = [
	"^[\\d]+[\\.\\-][A-Za-z0-9\\.\\-]+$",
	"[^\\.]+\\.[A-Za-z0-9]{3}$"
]

# List of regular expressions that if matched cause search input to be treated as an idno. This is useful
# for forcing text searches on apparent idno's to limit themselves to the literal idno field. It also allows
# ElasticSearch to support idno text searches with idno's that contain dashes. Without binding to a specific 
# field Elastic will treat the dashes as special characters and fail to match dash literals.
#
# You may define as many regular expression as needed here to match idno patterns. Each regular expression will be
# evaluated in term until a match is found. First level keys are table names, with an associated list of regexes. 
#
idno_regexes = [
	ca_objects = [
		"[\d]{4}\\.[\d]{1,5}\\.[\d]{0,5}"
	]
]

# List of regular expressions used to rewrite search expressions before execution. First level
# keys are table names, with an associated list of regexes. Each regex key is a descriptive name with an
# associated two element list. The first element is a regular expression, the second is the replacement pattern. Back references
# are supported.
#
rewrite_regexes = {
	ca_objects = {
		#remove_wildcards = [
		#	"/\\*", ""
		#]
	}
}

# By default all in-memory sorting is performed using the PHP SORT_NATURAL mode (see http://php.net/manual/en/function.sort.php)
# This is usually what is wanted, but for some languages (Eg. Spanish) it can return odd results and it may be desirable to disable it
dont_use_natural_sort = 0

# Index "before x" and "after x" date expressions as if they were circa dates
treat_before_dates_as_circa = 0
treat_after_dates_as_circa = 0

# To improve performance sorting of search results is performed in-memory for results up to a certain size.
# Larger results are sorted using the database. The threshold at which in-memory sorting
# is no longer performed can be controlled here. The setting is the maximum size of a result size to
# be sorted in memory. 
max_hits_for_in_memory_search = 1000000
