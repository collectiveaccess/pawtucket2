cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		sortControlType = dropdown,
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Type = ca_objects.type_id,
			Identifier = ca_objects.idno
		},
		sortDirection = {
			"Title" = asc,
			"Type" = asc,
			"Identifier" = asc
		},
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		options = {
			imageResultTextTemplate = "<small>^ca_objects.idno, ^ca_objects.type_id</small><br/>^ca_objects.preferred_labels.name",
			listResultTextTemplate = "<small>^ca_objects.idno, ^ca_objects.type_id</small><br/>^ca_objects.preferred_labels.name",
		}		
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =


ca_objects = {
	name = _("Objects"),
	facets = {
		source_facet = {
			type = fieldList,
			field = source_id,
			
			group_mode = none,

			label_singular = _(Collection),
			label_plural = _(Collections),
			#description = _("Fine Art Collection, Reference Collection Archives Collection")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = decades,
			
			group_mode = none,
			sort = desc,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = years,
			requires = decade_facet,
			sort = desc,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [ind],
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename],
			natural_sort = 0,
			
			indefinite_article = an,
			label_singular = _("Person"),
			label_plural = _("People"),
			#description = _("This index includes individual artists, binders, printers, illustrators and/or anyone associated with a particular work in the Center's collection.")
		},
		organization_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [org],
			
			groupings = {
				label = _(Name), 
				relationship_types = _(Creative role)
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename],
			natural_sort = 0,
			
			indefinite_article = an,
			label_singular = _(Organization),
			label_plural = _(Organizations),
			#description = _("This index includes the names of private press or commercial printing companies, trade and arts associations, museum, academic and/or non-profit institutions associated with a particular work in the Center's collection.")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			natural_sort = 0,
			
			label_singular = _(Subject),
			label_plural = _(Subjects),
			#description = _("This index includes authorized book arts-related subject headings from the Library of Congress and the Getty Art and Architecture Thesaurus (ex. printing-specimens, bookbinding, offset lithography, copy art, artists' books etc.).")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			
			sort = asc,

			label_singular = _(Object type),
			label_plural = _(Object types),
			#description = _("This index includes categories, format or particular construction techniques that characterize a particular work (ex. boxed sets, flip books, broadsides, chapbooks, prints, pamphlet binding, etc.).")
		},
		place_facet = {
			type = authority,
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			group_mode = alphabetical,

			label_singular = _(Place),
			label_plural = _(Places),
			#description = _("This index includes any geographic origin of a work in the Center's collections.")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,
			requires = x,

			label_singular = _("collection"),
			label_plural = _("collections"),
		}
	}
}