

# Allow download of representation on object detail page?
# accepted values include: anyone, logged_in, logged_in_privileged
allow_ca_objects_representation_download = none

# attribute of description text to use in share function - emailing record
share_ca_objects_description_attribute = none


#
# Details supported in this theme
#
detailTypes = {
	artwork = {
		displayName = _(Artwork),
		table = ca_objects,
		restrictToTypes = [image],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
			representationViewerPrimaryOnly = 0,
			representationViewerDontShowPlaceholder = 0,
			representationViewerCaptionTemplate = <if rule='^ca_object_representations.preferred_labels.name !~ /BLANK/'><div class='detailMediaCaption'>^ca_object_representations.preferred_labels.name</div></if>,
			map_attribute = ca_objects.georeference,
			map_width = 100%,
			map_height = 200,			
			# -- what appears in map balloon
			#mapContentTemplate = ^ca_objects.georeference,
			
			# Customize export download file names; can be set to a display template or static text
			#pdfExportTitle = ^ca_objects.preferred_labels.name,
			
			# annotations
			
			# display annotations? Valid values are: viewer (in viewer), div (in external div with class #detailAnnotations), none (no display) [Default is none]
			displayAnnotations = div,
			# template used to format annotation in list; evaluated relative to the annotation
			displayAnnotationTemplate = ^ca_representation_annotations.preferred_labels.name (^ca_representation_annotations.duration%asTimecode=hms)
		},
		# --- aliases to this detail page - these map to browses that return this type of detail, only need to be defined if the key of this array differs from the browses that find this record type
		#aliases = []
	},
	interview = {
		displayName = _(Interview),
		table = ca_objects,
		restrictToTypes = [interview],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
			representationViewerPrimaryOnly = 0,
			representationViewerDontShowPlaceholder = 0,
			#representationViewerCaptionTemplate = <if rule='^ca_object_representations.preferred_labels.name !~ /BLANK/'><div class='detailMediaCaption'>^ca_object_representations.preferred_labels.name</div></if>,
			map_attribute = ca_objects.georeference,
			map_width = 100%,
			map_height = 200,			
			# -- what appears in map balloon
			#mapContentTemplate = ^ca_objects.georeference,
			
			# Customize export download file names; can be set to a display template or static text
			#pdfExportTitle = ^ca_objects.preferred_labels.name,
			
			# annotations
			
			# display annotations? Valid values are: viewer (in viewer), div (in external div with class #detailAnnotations), none (no display) [Default is none]
			displayAnnotations = div,
			# template used to format annotation in list; evaluated relative to the annotation
			displayAnnotationTemplate = ^ca_representation_annotations.preferred_labels.name (^ca_representation_annotations.duration%asTimecode=hms)
		},
		# --- aliases to this detail page - these map to browses that return this type of detail, only need to be defined if the key of this array differs from the browses that find this record type
		#aliases = []
	},
	object = {
		displayName = _(Object),
		table = ca_objects,
		restrictToTypes = [document, physical_object],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
			representationViewerPrimaryOnly = 0,
			representationViewerDontShowPlaceholder = 0,
			#representationViewerCaptionTemplate = <div class='small'>^ca_object_representations.preferred_labels.name</div>,
			map_attribute = ca_objects.georeference,
			map_width = 100%,
			map_height = 200,			
			# -- what appears in map balloon
			#mapContentTemplate = ^ca_objects.georeference,
			
			# Customize export download file names; can be set to a display template or static text
			#pdfExportTitle = ^ca_objects.preferred_labels.name,
			
			# annotations
			
			# display annotations? Valid values are: viewer (in viewer), div (in external div with class #detailAnnotations), none (no display) [Default is none]
			displayAnnotations = div,
			# template used to format annotation in list; evaluated relative to the annotation
			displayAnnotationTemplate = ^ca_representation_annotations.preferred_labels.name (^ca_representation_annotations.duration%asTimecode=hms)
		},
		# --- aliases to this detail page - these map to browses that return this type of detail, only need to be defined if the key of this array differs from the browses that find this record type
		#aliases = []
	},
	artist = {
		displayName = _(Artist),
		table = ca_entities,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
			map_attribute = ca_places.georeference,
			map_width = 350,
			map_height = 200,
			representationViewerCaptionTemplate = <if rule='^ca_object_representations.preferred_labels.name !~ /BLANK/'><div class='detailMediaCaption'>^ca_object_representations.preferred_labels.name</div></if>,
			
		}
	},
	occurrences = {
		displayName = _(Works),
		table = ca_occurrences,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
		}
	},
	places = {
		displayName = _(Places),
		table = ca_places,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
		}
	},
	collections = {
		displayName = _(Collections),
		table = ca_collections,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
			pdfExportTitle = label # --- exported pdf has label of record, leave blank to default to export_results
		}
	},
	annotations = {
		displayName = _(Annotations),
		table = ca_representation_annotations,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			enableShare = 0,
		}
	}
}