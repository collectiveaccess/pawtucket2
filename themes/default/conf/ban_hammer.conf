enabled = 1
mode = absolute
threshold = 0.9

# Log bans to a ban-specific log file?
logging = 0

plugins.UserAgent = {
	# Duration of ban (in seconds)
	ttl = 86400,
	
	# List of user agents to ban
    banned_useragents = ["Amazonbot", "ClaudeBot", "GPTBot"],
    
    # Ban user agent on dynamically loaded list?
    use_useragent_list = 0,
    
    # URL for user agent ban list. List is JSON in the format defined at https://github.com/monperrus/crawler-user-agents
    useragent_list_url = "https://raw.githubusercontent.com/monperrus/crawler-user-agents/refs/heads/master/crawler-user-agents.json",
    
    # Time in seconds between refreshed of user agent ban list
    useragent_list_ttl = 21600,
    
    # List of user agent patterns to always pass (eg. exclude from useragent list)
    exclude_useragents = [],
    
    # Force reload of user agent list regardless of ttl
    useragent_list_force_reload = 0
}

plugins.RequestFrequency = {
	# Duration of ban (in seconds)
	ttl = 86400,
	
    # Maximum number of page loads per second allows before we ban
    frequency_threshold = 20,
    
    # Ban weight to return (1.0 = absolutely ban)
    ban_probability = 1.0,
}


plugins.ExportFrequency = {
	# Duration of ban (in seconds)
	ttl = 86400,
	
    # Maximum number of exports per second allows before we ban
    frequency_threshold = 5,
    
    # Maximum number of exports in a session before we ban
    # (set to zero for no limit)
    allowed_exports_per_session = 10,
    
    # Ban weight to return (1.0 = absolutely ban)
    ban_probability = 1.0,
}

plugins.IPAddress = {
	# Duration of ban (in seconds)
	ttl = 86400,
	
    # List of ip addresses to ban
    # You may use wildcards to match ranges
    # Eg. 10.55.*.*
    banned_ip_addresses = [
        127.0.0.10
    ]
    
    # Use external banned ip address list?
    use_ip_ban_feed = 1,
    
    # URL of banned ip address list
    # Format is that used in https://raw.githubusercontent.com/stamparm/ipsum/master/ipsum.txt
    # This is a tab-delimited file with two columns: IP address and number of times IP shows up the
    # ban lists used to create the aggregated list. This count can be taken as a measure of certainty about
    # the ip address - if it shows up in many lists it's more likely to be a problem.
	ip_ban_feed_url = "https://raw.githubusercontent.com/stamparm/ipsum/master/ipsum.txt",
	
	# Time in seconds between refreshed of ip ban list
	ip_ban_feed_ttl = 86800,
	
	# Force reload of banned ip list regardless of ttl
	ip_ban_feed_force_reload = 0,
	
	# Minimum value of the ip "count." Addresses with counts below this value will be ignored.
	ip_ban_occurrence_threshold = 2,
	
}
