{"mappings":";;;;;;;;;;;A;;;;;;;;;;ACaA;;oGAEA,CAEA,MAAMgB,sCAAgB,GAAG,aAAzB,AAAA;AAGA,MAAM,CAACC,8CAAD,EAA2BjB,yCAA3B,CAAA,GAAqDS,yBAAkB,CAACO,sCAAD,CAA7E,AAAA;AASA,MAAM,CAACE,yCAAD,EAAsBC,2CAAtB,CAAA,GACJF,8CAAwB,CAA0BD,sCAA1B,CAD1B,AAAA;AAYA,MAAMf,yCAAW,GAAA,aAAGM,CAAAA,iBAAA,CAClB,CAACc,KAAD,EAAuCC,YAAvC,GAAwD;IACtD,MAAM,E,oBACJC,kBADI,CAAA,EAEJC,IAAI,EAAEC,QAFF,CAAA,E,aAGJC,WAHI,CAAA,E,UAIJC,QAJI,CAAA,E,cAKJC,YALI,CAAA,EAMJ,GAAGC,gBAAH,EANI,GAOFR,KAPJ,AAAM;IASN,MAAM,CAACG,IAAI,GAAG,KAAR,EAAeM,OAAf,CAAA,GAA0BpB,2BAAoB,CAAC;QACnDqB,IAAI,EAAEN,QAD6C;QAEnDO,WAAW,EAAEN,WAFsC;QAGnDO,QAAQ,EAAEL,YAAVK;KAHkD,CAApD,AAAqD;IAMrD,OAAA,aACE,CAAA,oBAAA,CAAC,yCAAD,EADF;QAEI,KAAK,EAAEV,kBADT;QAEE,QAAQ,EAAEI,QAFZ;QAGE,SAAS,EAAEZ,YAAK,EAHlB;QAIE,IAAI,EAAES,IAJR;QAKE,YAAY,EAAEjB,kBAAA,CAAkB,IAAMuB,OAAO,CAAEK,CAAAA,QAAD,GAAc,CAACA,QAAhB;YAAA,CAA/B;QAAA,EAA0D;YAACL,OAAD;SAA1D,CAAd;KALF,EAAA,aAOE,CAAA,oBAAA,CAAC,gBAAD,CAAW,GAAX,EAPF,oCAAA,CAAA;QAQI,YAAA,EAAYM,8BAAQ,CAACZ,IAAD,CADtB;QAEE,eAAA,EAAeG,QAAQ,GAAG,EAAH,GAAQU,SAA/B;KAFF,EAGMR,gBAHN,EAAA;QAIE,GAAG,EAAEP,YAAL;KAJF,CAAA,CAPF,CADF,CAQI;CAzBY,CAApB,AAiCG;AAGH,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yCAAA,EAAA;IAAA,WAAA,EAAA,sCAAA;CAAA,CAAA,CAAA;AAEA;;oGAEA,CAEA,MAAMgB,kCAAY,GAAG,oBAArB,AAAA;AAMA,MAAMpC,yCAAkB,GAAA,aAAGK,CAAAA,iBAAA,CACzB,CAACc,KAAD,EAA8CC,YAA9C,GAA+D;IAC7D,MAAM,E,oBAAEC,kBAAF,CAAA,EAAsB,GAAGgB,YAAH,EAAtB,GAA0ClB,KAAhD,AAAM;IACN,MAAMmB,OAAO,GAAGrB,2CAAqB,CAACmB,kCAAD,EAAef,kBAAf,CAArC,AAAA;IACA,OAAA,aACE,CAAA,oBAAA,CAAC,gBAAD,CAAW,MAAX,EADF,oCAAA,CAAA;QAEI,IAAI,EAAC,QADP;QAEE,eAAA,EAAeiB,OAAO,CAACC,SAFzB;QAGE,eAAA,EAAeD,OAAO,CAAChB,IAAR,IAAgB,KAHjC;QAIE,YAAA,EAAYY,8BAAQ,CAACI,OAAO,CAAChB,IAAT,CAJtB;QAKE,eAAA,EAAegB,OAAO,CAACb,QAAR,GAAmB,EAAnB,GAAwBU,SALzC;QAME,QAAQ,EAAEG,OAAO,CAACb,QAAlB;KANF,EAOMY,YAPN,EAAA;QAQE,GAAG,EAAEjB,YARP;QASE,OAAO,EAAEd,2BAAoB,CAACa,KAAK,CAACqB,OAAP,EAAgBF,OAAO,CAACG,YAAxB,CAA7B;KATF,CAAA,CADF,CACE;CALqB,CAA3B,AAiBG;AAGH,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yCAAA,EAAA;IAAA,WAAA,EAAA,kCAAA;CAAA,CAAA,CAAA;AAEA;;oGAEA,CAEA,MAAMC,kCAAY,GAAG,oBAArB,AAAA;AAWA,MAAMzC,yCAAkB,GAAA,aAAGI,CAAAA,iBAAA,CACzB,CAACc,KAAD,EAA8CC,YAA9C,GAA+D;IAC7D,MAAM,E,YAAEuB,UAAF,CAAA,EAAc,GAAGC,YAAH,EAAd,GAAkCzB,KAAxC,AAAM;IACN,MAAMmB,OAAO,GAAGrB,2CAAqB,CAACyB,kCAAD,EAAevB,KAAK,CAACE,kBAArB,CAArC,AAAA;IACA,OAAA,aACE,CAAA,oBAAA,CAAC,eAAD,EADF;QACY,OAAO,EAAEsB,UAAU,IAAIL,OAAO,CAAChB,IAA/B;KAAV,EACG,CAAC,E,SAAEuB,OAAAA,CAAAA,EAAH,GAAA,aACC,CAAA,oBAAA,CAAC,4CAAD,EAAA,oCAAA,CAAA,EAAA,EAA4BD,YAA5B,EADA;YAC0C,GAAG,EAAExB,YAA/C;YAA6D,OAAO,EAAEyB,OAAT;SAA7D,CAAA,CAFJ;IAAA,CADF,CAGM;CAPiB,CAA3B,AAWG;AAGH,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yCAAA,EAAA;IAAA,WAAA,EAAA,kCAAA;CAAA,CAAA,CAAA;AAEA,oGAAA,CAOA,MAAMC,4CAAsB,GAAA,aAAGzC,CAAAA,iBAAA,CAG7B,CAACc,KAAD,EAAkDC,YAAlD,GAAmE;IACnE,MAAM,E,oBAAEC,kBAAF,CAAA,E,SAAsBwB,OAAtB,CAAA,E,UAA+BE,QAA/B,CAAA,EAAyC,GAAGH,YAAH,EAAzC,GAA6DzB,KAAnE,AAAM;IACN,MAAMmB,OAAO,GAAGrB,2CAAqB,CAACyB,kCAAD,EAAerB,kBAAf,CAArC,AAAA;IACA,MAAM,CAAC2B,SAAD,EAAYC,YAAZ,CAAA,GAA4B5C,eAAA,CAAewC,OAAf,CAAlC,AAAA;IACA,MAAMM,GAAG,GAAG9C,aAAA,CAA4C,IAA5C,CAAZ,AAAA;IACA,MAAMgD,YAAY,GAAG3C,sBAAe,CAACU,YAAD,EAAe+B,GAAf,CAApC,AAAA;IACA,MAAMG,SAAS,GAAGjD,aAAA,CAAiC,CAAjC,CAAlB,AAAA;IACA,MAAMkD,MAAM,GAAGD,SAAS,CAACE,OAAzB,AAAA;IACA,MAAMC,QAAQ,GAAGpD,aAAA,CAAiC,CAAjC,CAAjB,AAAA;IACA,MAAMqD,KAAK,GAAGD,QAAQ,CAACD,OAAvB,AATmE,EAUnE,qEADA;IAEA,wEAAA;IACA,MAAMG,MAAM,GAAGrB,OAAO,CAAChB,IAAR,IAAgB0B,SAA/B,AAAA;IACA,MAAMY,4BAA4B,GAAGvD,aAAA,CAAasD,MAAb,CAArC,AAAA;IACA,MAAME,iBAAiB,GAAGxD,aAAA,EAA1B,AAAA;IAEAA,gBAAA,CAAgB,IAAM;QACpB,MAAM0D,GAAG,GAAGC,qBAAqB,CAAC,IAAOJ,4BAA4B,CAACJ,OAA7B,GAAuC,KAA/C;QAAA,CAAjC,AAAA;QACA,OAAO,IAAMS,oBAAoB,CAACF,GAAD,CAAjC;QAAA,CAAA;KAFF,EAGG,EAHH,CAGC,CAAA;IAEDtD,sBAAe,CAAC,IAAM;QACpB,MAAMyD,IAAI,GAAGf,GAAG,CAACK,OAAjB,AAAA;QACA,IAAIU,IAAJ,EAAU;YACRL,iBAAiB,CAACL,OAAlB,GAA4BK,iBAAiB,CAACL,OAAlB,IAA6B;gBACvDW,kBAAkB,EAAED,IAAI,CAACE,KAAL,CAAWD,kBADwB;gBAEvDE,aAAa,EAAEH,IAAI,CAACE,KAAL,CAAWC,aAA1BA;aAFF,CADQ,CAKR,iFAJyD;YAKzDH,IAAI,CAACE,KAAL,CAAWD,kBAAX,GAAgC,IAAhC,CAAAD;YACAA,IAAI,CAACE,KAAL,CAAWC,aAAX,GAA2B,MAA3B,CAPQ,CASR,4CAFAH;YAGA,MAAMI,IAAI,GAAGJ,IAAI,CAACK,qBAAL,EAAb,AAAA;YACAjB,SAAS,CAACE,OAAV,GAAoBc,IAAI,CAACf,MAAzB,CAAAD;YACAG,QAAQ,CAACD,OAAT,GAAmBc,IAAI,CAACZ,KAAxB,CAZQ,CAcR,gGAFAD;YAGA,IAAI,CAACG,4BAA4B,CAACJ,OAAlC,EAA2C;gBACzCU,IAAI,CAACE,KAAL,CAAWD,kBAAX,GAAgCN,iBAAiB,CAACL,OAAlB,CAA0BW,kBAA1D,CAAAD;gBACAA,IAAI,CAACE,KAAL,CAAWC,aAAX,GAA2BR,iBAAiB,CAACL,OAAlB,CAA0Ba,aAArD,CAAAH;aACD;YAEDjB,YAAY,CAACJ,OAAD,CAAZ,CAAAI;SACD;IACD;;;;;OAKJ,EA7BiB,EA8BZ;QAACX,OAAO,CAAChB,IAAT;QAAeuB,OAAf;KA9BY,CAAf,CA8BC;IAED,OAAA,aACE,CAAA,oBAAA,CAAC,gBAAD,CAAW,GAAX,EADF,oCAAA,CAAA;QAEI,YAAA,EAAYX,8BAAQ,CAACI,OAAO,CAAChB,IAAT,CADtB;QAEE,eAAA,EAAegB,OAAO,CAACb,QAAR,GAAmB,EAAnB,GAAwBU,SAFzC;QAGE,EAAE,EAAEG,OAAO,CAACC,SAHd;QAIE,MAAM,EAAE,CAACoB,MAAT;KAJF,EAKMf,YALN,EAAA;QAME,GAAG,EAAES,YANP;QAOE,KAAK,EAAE;YACL,CAAE,CAAA,kCAAA,CAAF,CAAA,EAA+CE,MAAM,GAAI,CAAA,EAAEA,MAAO,CAAA,EAAA,CAAb,GAAmBpB,SADnE;YAEL,CAAE,CAAA,iCAAA,CAAF,CAAA,EAA8CuB,KAAK,GAAI,CAAA,EAAEA,KAAM,CAAA,EAAA,CAAZ,GAAkBvB,SAFhE;YAGL,GAAGhB,KAAK,CAACiD,KAAT;SAHK;KAPT,CAAA,EAaGT,MAAM,IAAIZ,QAbb,CADF,CACE;CAzD2B,CAA/B,AAyEC;AAED,oGAAA,CAEA,SAASb,8BAAT,CAAkBZ,IAAlB,EAAkC;IAChC,OAAOA,IAAI,GAAG,MAAH,GAAY,QAAvB,CAAA;CACD;AAED,MAAMpB,yCAAI,GAAGH,yCAAb,AAAA;AACA,MAAMI,yCAAO,GAAGH,yCAAhB,AAAA;AACA,MAAMI,yCAAO,GAAGH,yCAAhB,AAAA;;ADxOA","sources":["packages/react/collapsible/src/index.ts","packages/react/collapsible/src/Collapsible.tsx"],"sourcesContent":["export {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n} from './Collapsible';\nexport type {\n  CollapsibleProps,\n  CollapsibleTriggerProps,\n  CollapsibleContentProps,\n} from './Collapsible';\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { useId } from '@radix-ui/react-id';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Collapsible\n * -----------------------------------------------------------------------------------------------*/\n\nconst COLLAPSIBLE_NAME = 'Collapsible';\n\ntype ScopedProps<P> = P & { __scopeCollapsible?: Scope };\nconst [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\n\ntype CollapsibleContextValue = {\n  contentId: string;\n  disabled?: boolean;\n  open: boolean;\n  onOpenToggle(): void;\n};\n\nconst [CollapsibleProvider, useCollapsibleContext] =\n  createCollapsibleContext<CollapsibleContextValue>(COLLAPSIBLE_NAME);\n\ntype CollapsibleElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface CollapsibleProps extends PrimitiveDivProps {\n  defaultOpen?: boolean;\n  open?: boolean;\n  disabled?: boolean;\n  onOpenChange?(open: boolean): void;\n}\n\nconst Collapsible = React.forwardRef<CollapsibleElement, CollapsibleProps>(\n  (props: ScopedProps<CollapsibleProps>, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n\n    return (\n      <CollapsibleProvider\n        scope={__scopeCollapsible}\n        disabled={disabled}\n        contentId={useId()}\n        open={open}\n        onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      >\n        <Primitive.div\n          data-state={getState(open)}\n          data-disabled={disabled ? '' : undefined}\n          {...collapsibleProps}\n          ref={forwardedRef}\n        />\n      </CollapsibleProvider>\n    );\n  }\n);\n\nCollapsible.displayName = COLLAPSIBLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'CollapsibleTrigger';\n\ntype CollapsibleTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface CollapsibleTriggerProps extends PrimitiveButtonProps {}\n\nconst CollapsibleTrigger = React.forwardRef<CollapsibleTriggerElement, CollapsibleTriggerProps>(\n  (props: ScopedProps<CollapsibleTriggerProps>, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-controls={context.contentId}\n        aria-expanded={context.open || false}\n        data-state={getState(context.open)}\n        data-disabled={context.disabled ? '' : undefined}\n        disabled={context.disabled}\n        {...triggerProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nCollapsibleTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * CollapsibleContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'CollapsibleContent';\n\ntype CollapsibleContentElement = CollapsibleContentImplElement;\ninterface CollapsibleContentProps extends Omit<CollapsibleContentImplProps, 'present'> {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst CollapsibleContent = React.forwardRef<CollapsibleContentElement, CollapsibleContentProps>(\n  (props: ScopedProps<CollapsibleContentProps>, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return (\n      <Presence present={forceMount || context.open}>\n        {({ present }) => (\n          <CollapsibleContentImpl {...contentProps} ref={forwardedRef} present={present} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nCollapsibleContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype CollapsibleContentImplElement = React.ElementRef<typeof Primitive.div>;\ninterface CollapsibleContentImplProps extends PrimitiveDivProps {\n  present: boolean;\n}\n\nconst CollapsibleContentImpl = React.forwardRef<\n  CollapsibleContentImplElement,\n  CollapsibleContentImplProps\n>((props: ScopedProps<CollapsibleContentImplProps>, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef<CollapsibleContentImplElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef<number | undefined>(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef<number | undefined>(0);\n  const width = widthRef.current;\n  // when opening we want it to immediately open to retrieve dimensions\n  // when closing we delay `present` to retrieve dimensions before closing\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef<Record<string, string>>();\n\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => (isMountAnimationPreventedRef.current = false));\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName,\n      };\n      // block any animations/transitions so the element renders at its full dimensions\n      node.style.transitionDuration = '0s';\n      node.style.animationName = 'none';\n\n      // get width and height from full dimensions\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n\n      // kick off any animations/transitions that were originally set up if it isn't the initial mount\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n\n      setIsPresent(present);\n    }\n    /**\n     * depends on `context.open` because it will change to `false`\n     * when a close is triggered but `present` will be `false` on\n     * animation end (so when close finishes). This allows us to\n     * retrieve the dimensions *before* closing.\n     */\n  }, [context.open, present]);\n\n  return (\n    <Primitive.div\n      data-state={getState(context.open)}\n      data-disabled={context.disabled ? '' : undefined}\n      id={context.contentId}\n      hidden={!isOpen}\n      {...contentProps}\n      ref={composedRefs}\n      style={{\n        [`--radix-collapsible-content-height` as any]: height ? `${height}px` : undefined,\n        [`--radix-collapsible-content-width` as any]: width ? `${width}px` : undefined,\n        ...props.style,\n      }}\n    >\n      {isOpen && children}\n    </Primitive.div>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open?: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst Root = Collapsible;\nconst Trigger = CollapsibleTrigger;\nconst Content = CollapsibleContent;\n\nexport {\n  createCollapsibleScope,\n  //\n  Collapsible,\n  CollapsibleTrigger,\n  CollapsibleContent,\n  //\n  Root,\n  Trigger,\n  Content,\n};\nexport type { CollapsibleProps, CollapsibleTriggerProps, CollapsibleContentProps };\n"],"names":["createCollapsibleScope","Collapsible","CollapsibleTrigger","CollapsibleContent","Root","Trigger","Content","React","composeEventHandlers","createContextScope","useControllableState","useLayoutEffect","useComposedRefs","Primitive","Presence","useId","COLLAPSIBLE_NAME","createCollapsibleContext","CollapsibleProvider","useCollapsibleContext","forwardRef","props","forwardedRef","__scopeCollapsible","open","openProp","defaultOpen","disabled","onOpenChange","collapsibleProps","setOpen","prop","defaultProp","onChange","useCallback","prevOpen","getState","undefined","TRIGGER_NAME","triggerProps","context","contentId","onClick","onOpenToggle","CONTENT_NAME","forceMount","contentProps","present","CollapsibleContentImpl","children","isPresent","setIsPresent","useState","ref","useRef","composedRefs","heightRef","height","current","widthRef","width","isOpen","isMountAnimationPreventedRef","originalStylesRef","useEffect","rAF","requestAnimationFrame","cancelAnimationFrame","node","transitionDuration","style","animationName","rect","getBoundingClientRect"],"version":3,"file":"index.mjs.map"}