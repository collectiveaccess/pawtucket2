{"version":3,"file":"index.mjs","sources":["../../../src/presentation-3/empty-types.ts","../../../src/shared/ensure-array.ts","../../../src/presentation-3/traverse.ts","../../../src/presentation-2/traverse.ts","../../../src/shared/image-api-profiles.ts","../../../src/presentation-2/upgrader.ts","../../../src/presentation-3/normalize.ts","../../../src/presentation-3/serialize.ts","../../../src/presentation-3/serialize-presentation-2.ts","../../../src/presentation-3/serialize-presentation-3.ts"],"sourcesContent":["import {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  CollectionNormalized,\n  ManifestNormalized,\n  RangeNormalized,\n  ResourceProviderNormalized,\n} from '@iiif/presentation-3';\n\nexport const EMPTY = [];\n// Prevent accidental mutation\nObject.freeze(EMPTY);\n\nexport const emptyAnnotation: AnnotationNormalized = {\n  id: 'https://iiif-parser/annotation',\n  type: 'Annotation',\n  behavior: EMPTY,\n  label: null,\n  thumbnail: EMPTY,\n  summary: null,\n  requiredStatement: null,\n  metadata: EMPTY,\n  seeAlso: EMPTY,\n  homepage: EMPTY,\n  logo: EMPTY,\n  rendering: EMPTY,\n  service: EMPTY,\n  accessibility: EMPTY,\n  audience: EMPTY,\n  body: EMPTY,\n  bodyValue: null,\n  canonical: null,\n  created: null,\n  creator: EMPTY,\n  generated: null,\n  generator: EMPTY,\n  modified: null,\n  motivation: EMPTY,\n  rights: EMPTY,\n  stylesheet: null,\n  target: EMPTY,\n  timeMode: undefined, // @todo bug? should be null.\n  via: EMPTY,\n  partOf: EMPTY,\n};\n\nexport const emptyAnnotationPage: AnnotationPageNormalized = {\n  id: 'https://iiif-parser/annotation-page',\n  type: 'AnnotationPage',\n  behavior: EMPTY,\n  motivation: null,\n  label: null,\n  thumbnail: EMPTY,\n  summary: null,\n  requiredStatement: null,\n  metadata: EMPTY,\n  rights: null,\n  provider: EMPTY,\n  items: EMPTY,\n  seeAlso: EMPTY,\n  homepage: EMPTY,\n  logo: EMPTY,\n  rendering: EMPTY,\n  service: EMPTY,\n};\n\nexport const emptyCanvas: CanvasNormalized = {\n  id: 'https://iiif-parser/empty-canvas',\n  type: 'Canvas',\n  label: null,\n  behavior: EMPTY,\n  motivation: null,\n  thumbnail: EMPTY,\n  posterCanvas: null,\n  accompanyingCanvas: null,\n  placeholderCanvas: null,\n  summary: null,\n  requiredStatement: null,\n  metadata: EMPTY,\n  rights: null,\n  navDate: null,\n  provider: EMPTY,\n  items: EMPTY,\n  annotations: EMPTY,\n  seeAlso: EMPTY,\n  homepage: EMPTY,\n  logo: EMPTY,\n  partOf: EMPTY,\n  rendering: EMPTY,\n  service: EMPTY,\n  duration: 0,\n  height: 0,\n  width: 0,\n};\n\nexport const emptyCollection: CollectionNormalized = {\n  id: 'https://iiif-parser/empty-collection',\n  type: 'Collection',\n  label: null,\n  viewingDirection: 'left-to-right',\n  behavior: EMPTY,\n  motivation: null,\n  thumbnail: EMPTY,\n  posterCanvas: null,\n  accompanyingCanvas: null,\n  placeholderCanvas: null,\n  summary: null,\n  requiredStatement: null,\n  metadata: EMPTY,\n  rights: null,\n  navDate: null,\n  provider: EMPTY,\n  items: EMPTY,\n  annotations: EMPTY,\n  seeAlso: EMPTY,\n  homepage: EMPTY,\n  logo: EMPTY,\n  partOf: EMPTY,\n  rendering: EMPTY,\n  service: EMPTY,\n  services: EMPTY,\n};\n\nexport const emptyManifest: ManifestNormalized = {\n  id: 'https://iiif-parser/empty-manifest',\n  type: 'Manifest',\n  annotations: EMPTY,\n  behavior: EMPTY,\n  homepage: EMPTY,\n  items: EMPTY,\n  label: null,\n  logo: EMPTY,\n  metadata: EMPTY,\n  motivation: null,\n  navDate: null,\n  provider: EMPTY,\n  partOf: EMPTY,\n  posterCanvas: null,\n  accompanyingCanvas: null,\n  placeholderCanvas: null,\n  rendering: EMPTY,\n  requiredStatement: null,\n  rights: null,\n  seeAlso: EMPTY,\n  service: EMPTY,\n  services: EMPTY,\n  start: null,\n  structures: EMPTY,\n  summary: null,\n  thumbnail: EMPTY,\n  viewingDirection: 'left-to-right',\n};\n\nexport const emptyRange: RangeNormalized = {\n  id: 'https://iiif-parser/empty-canvas',\n  type: 'Range',\n  label: null,\n  behavior: EMPTY,\n  motivation: null,\n  thumbnail: EMPTY,\n  posterCanvas: null,\n  accompanyingCanvas: null,\n  placeholderCanvas: null,\n  summary: null,\n  requiredStatement: null,\n  metadata: EMPTY,\n  rights: null,\n  navDate: null,\n  provider: EMPTY,\n  items: EMPTY,\n  annotations: EMPTY,\n  seeAlso: EMPTY,\n  homepage: EMPTY,\n  logo: EMPTY,\n  partOf: EMPTY,\n  rendering: EMPTY,\n  service: EMPTY,\n  start: null,\n  supplementary: null,\n  viewingDirection: 'left-to-right',\n};\n\nexport const emptyAgent: ResourceProviderNormalized = {\n  id: 'https://iiif-parser/empty-agent',\n  type: 'Agent',\n  label: {},\n  logo: EMPTY,\n  seeAlso: EMPTY,\n  homepage: EMPTY,\n};\n","export function ensureArray<T>(maybeArray: T | T[]): T[] {\n  if (Array.isArray(maybeArray)) {\n    return maybeArray;\n  }\n  return [maybeArray];\n}\n","import {\n  Agent,\n  Annotation,\n  AnnotationCollection,\n  AnnotationPage,\n  Canvas,\n  ChoiceBody,\n  ChoiceTarget,\n  Collection,\n  ContentResource,\n  DescriptiveProperties,\n  IIIFExternalWebResource,\n  LinkingProperties,\n  Manifest,\n  Range,\n  RangeItems,\n  Required,\n  Service,\n  ResourceProvider,\n} from '@iiif/presentation-3';\nimport { ensureArray } from '../shared/ensure-array';\n\nexport const types = [\n  'Collection',\n  'Manifest',\n  'Canvas',\n  'AnnotationPage',\n  'AnnotationCollection',\n  'Annotation',\n  'ContentResource',\n  'Range',\n  'Service',\n  'Selector',\n  'Agent',\n];\n\nexport type Traversal<T> = (jsonLd: T) => Partial<T> | any;\n\nexport type TraversalMap = {\n  collection?: Array<Traversal<Collection>>;\n  manifest?: Array<Traversal<Manifest>>;\n  canvas?: Array<Traversal<Canvas>>;\n  annotationCollection?: Array<Traversal<AnnotationCollection>>;\n  annotationPage?: Array<Traversal<AnnotationPage>>;\n  annotation?: Array<Traversal<Annotation>>;\n  contentResource?: Array<Traversal<ContentResource>>;\n  choice?: Array<Traversal<ChoiceTarget | ChoiceBody>>;\n  range?: Array<Traversal<Range>>;\n  service?: Array<Traversal<Service>>;\n  agent?: Array<Traversal<ResourceProvider>>;\n};\n\nexport type TraverseOptions = {\n  allowUndefinedReturn: boolean;\n};\n\nexport function identifyResource(resource: any): string {\n  if (typeof resource === 'undefined' || resource === null) {\n    throw new Error('Null or undefined is not a valid entity.');\n  }\n  if (Array.isArray(resource)) {\n    throw new Error('Array is not a valid entity');\n  }\n  if (typeof resource !== 'object') {\n    throw new Error(`${typeof resource} is not a valid entity`);\n  }\n\n  if (typeof resource!.type === 'string') {\n    const hasType = types.indexOf(resource.type);\n    if (hasType !== -1) {\n      return types[hasType];\n    }\n  }\n\n  if (resource!.profile) {\n    return 'Service';\n  }\n\n  throw new Error('Resource type is not known');\n}\n\nexport class Traverse {\n  private traversals: Required<TraversalMap>;\n\n  private options: TraverseOptions;\n\n  constructor(traversals: TraversalMap, options: Partial<TraverseOptions> = {}) {\n    this.traversals = {\n      collection: [],\n      manifest: [],\n      canvas: [],\n      annotationCollection: [],\n      annotationPage: [],\n      annotation: [],\n      contentResource: [],\n      choice: [],\n      range: [],\n      service: [],\n      agent: [],\n      ...traversals,\n    };\n    this.options = {\n      allowUndefinedReturn: false,\n      ...options,\n    };\n  }\n\n  static all(traversal: (resource: any) => any) {\n    return new Traverse({\n      collection: [traversal],\n      manifest: [traversal],\n      canvas: [traversal],\n      annotationCollection: [traversal],\n      annotationPage: [traversal],\n      annotation: [traversal],\n      contentResource: [traversal],\n      choice: [traversal],\n      range: [traversal],\n      service: [traversal],\n    });\n  }\n\n  traverseDescriptive<T extends Partial<DescriptiveProperties>>(resource: T) {\n    if (resource.thumbnail) {\n      resource.thumbnail = resource.thumbnail.map((thumbnail) =>\n        this.traverseType(thumbnail, this.traversals.contentResource)\n      );\n    }\n    if (resource.provider) {\n      resource.provider = resource.provider.map((agent) => this.traverseAgent(agent));\n    }\n    return resource;\n  }\n\n  traverseLinking<T extends Partial<LinkingProperties>>(resource: T) {\n    if (resource.seeAlso) {\n      resource.seeAlso = resource.seeAlso.map((content) => this.traverseType(content, this.traversals.contentResource));\n    }\n    if (resource.service) {\n      resource.service = ensureArray(resource.service).map((service) =>\n        this.traverseType(service, this.traversals.service)\n      );\n    }\n    if (resource.services) {\n      resource.services = resource.services.map((service) => this.traverseType(service, this.traversals.service));\n    }\n    if (resource.logo) {\n      resource.logo = resource.logo.map((content) => this.traverseType(content, this.traversals.contentResource));\n    }\n    if (resource.homepage) {\n      resource.homepage = resource.homepage.map((homepage) =>\n        this.traverseType(homepage, this.traversals.contentResource)\n      );\n    }\n    if (resource.partOf) {\n      // Array<ContentResource | Canvas | AnnotationCollection>\n      (resource as any).partOf = resource.partOf.map((partOf) => {\n        if (typeof partOf === 'string' || !partOf.type) {\n          return this.traverseType(partOf as ContentResource, this.traversals.contentResource);\n        }\n        if (partOf.type === 'Canvas') {\n          return this.traverseType(partOf as Canvas, this.traversals.canvas);\n        }\n        if (partOf.type === 'AnnotationCollection') {\n          return this.traverseType(partOf as AnnotationCollection, this.traversals.annotationCollection);\n        }\n        if (partOf.type === 'Collection') {\n          return this.traverseType(partOf as Collection, this.traversals.collection);\n        }\n        return this.traverseType(partOf as ContentResource, this.traversals.contentResource);\n      });\n    }\n    if (resource.start) {\n      resource.start = resource.start ? this.traverseType(resource.start, this.traversals.canvas) : null;\n    }\n    if (resource.rendering) {\n      resource.rendering = resource.rendering.map((content) =>\n        this.traverseType(content, this.traversals.contentResource)\n      );\n    }\n    if (resource.supplementary) {\n      resource.supplementary = resource.supplementary.map((content) =>\n        this.traverseType(content, this.traversals.contentResource)\n      );\n    }\n\n    return resource;\n  }\n\n  traverseCollectionItems(collection: Collection): Collection {\n    if (collection.items) {\n      collection.items.map((collectionOrManifest: Manifest | Collection) => {\n        if (collectionOrManifest.type === 'Collection') {\n          return this.traverseCollection(collectionOrManifest as Collection);\n        }\n        return this.traverseManifest(collectionOrManifest as Manifest);\n      });\n    }\n\n    return collection;\n  }\n\n  traverseCollection(collection: Collection): Collection {\n    return this.traverseType<Collection>(\n      this.traverseDescriptive(\n        this.traverseInlineAnnotationPages(\n          this.traverseLinking(this.traversePosterCanvas(this.traverseCollectionItems(collection)))\n        )\n      ),\n      this.traversals.collection\n    );\n  }\n\n  traverseManifestItems(manifest: Manifest): Manifest {\n    if (manifest.items) {\n      manifest.items = manifest.items.map((canvas) => this.traverseCanvas(canvas));\n    }\n    return manifest;\n  }\n\n  traverseManifestStructures(manifest: Manifest): Manifest {\n    if (manifest.structures) {\n      manifest.structures = manifest.structures.map((range) => this.traverseRange(range));\n    }\n    return manifest;\n  }\n\n  traverseManifest(manifest: Manifest): Manifest {\n    return this.traverseType<Manifest>(\n      this.traverseInlineAnnotationPages(\n        this.traverseManifestStructures(\n          this.traversePosterCanvas(\n            this.traverseDescriptive(this.traverseLinking(this.traverseManifestItems(manifest)))\n          )\n        )\n      ),\n      this.traversals.manifest\n    );\n  }\n\n  traverseCanvasItems(canvas: Canvas): Canvas {\n    canvas.items = (canvas.items || []).map((annotationPage: AnnotationPage): AnnotationPage => {\n      return this.traverseAnnotationPage(annotationPage);\n    });\n\n    return canvas;\n  }\n\n  traverseInlineAnnotationPages<T extends Manifest | Canvas | Range | string>(resource: T): T {\n    if (typeof resource === 'string' || !resource) {\n      return resource;\n    }\n    if (resource.annotations) {\n      resource.annotations = resource.annotations.map((annotationPage: AnnotationPage): AnnotationPage => {\n        return this.traverseAnnotationPage(annotationPage);\n      });\n    }\n\n    return resource;\n  }\n\n  traverseCanvas(canvas: Canvas): Canvas {\n    return this.traverseType<Canvas>(\n      this.traverseInlineAnnotationPages(\n        this.traversePosterCanvas(this.traverseDescriptive(this.traverseLinking(this.traverseCanvasItems(canvas))))\n      ),\n      this.traversals.canvas\n    );\n  }\n\n  traverseAnnotationPageItems(annotationPage: AnnotationPage): AnnotationPage {\n    if (annotationPage.items) {\n      annotationPage.items = annotationPage.items.map((annotation: Annotation): Annotation => {\n        return this.traverseAnnotation(annotation);\n      });\n    }\n    return annotationPage;\n  }\n\n  traverseAnnotationPage(annotationPageJson: AnnotationPage): AnnotationPage {\n    return this.traverseType<AnnotationPage>(\n      this.traverseDescriptive(this.traverseLinking(this.traverseAnnotationPageItems(annotationPageJson) as any)),\n      this.traversals.annotationPage\n    );\n  }\n\n  // Disabling these.\n\n  traverseAnnotationBody(annotation: Annotation): Annotation {\n    if (Array.isArray(annotation.body)) {\n      annotation.body = annotation.body.map((annotationBody: any): ContentResource => {\n        return this.traverseContentResource(annotationBody);\n      });\n    } else if (annotation.body) {\n      annotation.body = this.traverseContentResource(annotation.body as ContentResource);\n    }\n\n    return annotation;\n  }\n\n  /*\n  traverseAnnotationTarget(annotation: Annotation): Annotation {\n    if (Array.isArray(annotation.target)) {\n      annotation.target = annotation.target.map(\n        (annotationBody: ContentResource): ContentResource => {\n          return this.traverseContentResource(annotationBody);\n        }\n      );\n    } else if (annotation.target) {\n      annotation.target = this.traverseContentResource(annotation.target);\n    }\n\n    return annotation;\n  }\n  */\n\n  traversePosterCanvas<T extends Collection | Manifest | Canvas | Range>(json: T): T {\n    // @deprecated\n    if (json.posterCanvas) {\n      json.posterCanvas = this.traverseCanvas(json.posterCanvas);\n    }\n\n    if (json.placeholderCanvas) {\n      json.placeholderCanvas = this.traverseCanvas(json.placeholderCanvas);\n    }\n\n    if (json.accompanyingCanvas) {\n      json.accompanyingCanvas = this.traverseCanvas(json.accompanyingCanvas);\n    }\n\n    return json;\n  }\n\n  // @todo traverseAnnotationSelector\n  traverseAnnotation(annotationJson: Annotation): Annotation {\n    return this.traverseType<Annotation>(\n      // Disabled these for now.\n      // this.traverseAnnotationTarget(this.traverseLinking(this.traverseAnnotationBody(annotationJson))),\n      this.traverseLinking(this.traverseAnnotationBody(annotationJson)),\n      this.traversals.annotation\n    );\n  }\n\n  traverseContentResourceLinking(contentResourceJson: ContentResource): ContentResource {\n    if (typeof contentResourceJson === 'string' || !contentResourceJson) {\n      return contentResourceJson;\n    }\n    if (contentResourceJson && (contentResourceJson as IIIFExternalWebResource)!.service) {\n      (contentResourceJson as IIIFExternalWebResource).service = ensureArray(\n        (contentResourceJson as IIIFExternalWebResource).service || []\n      ).map((service) => this.traverseType(service, this.traversals.service));\n    }\n\n    return contentResourceJson;\n  }\n\n  traverseContentResource(contentResourceJson: ContentResource): ContentResource {\n    if ((contentResourceJson as any).type === 'Choice') {\n      (contentResourceJson as any).items = (contentResourceJson as any).items.map((choiceItem: ContentResource) => {\n        return this.traverseContentResource(choiceItem);\n      });\n    }\n\n    return this.traverseType<ContentResource>(\n      // This needs an `any` because of the scope of W3C annotation bodies (covered by ContentResource).\n      // ContentResources are permitted to have a `.annotations` property, so we can pass it as any  for this\n      // case.\n      this.traverseInlineAnnotationPages(this.traverseContentResourceLinking(contentResourceJson) as any),\n      this.traversals.contentResource\n    );\n  }\n\n  traverseRangeRanges(range: Range): Range {\n    if (range.items) {\n      range.items = range.items.map((rangeOrManifest: RangeItems) => {\n        if (typeof rangeOrManifest === 'string') {\n          return this.traverseCanvas({ id: rangeOrManifest, type: 'Canvas' });\n        }\n        if (rangeOrManifest.type === 'Manifest') {\n          return this.traverseManifest(rangeOrManifest as Manifest);\n        }\n        return this.traverseRange(rangeOrManifest as Range);\n      });\n    }\n\n    return range;\n  }\n\n  traverseRange(range: Range): Range {\n    return this.traverseType<Range>(\n      this.traversePosterCanvas(this.traverseDescriptive(this.traverseLinking(this.traverseRangeRanges(range)))),\n      this.traversals.range\n    );\n  }\n\n  traverseAgent(agent: ResourceProvider) {\n    return this.traverseType<ResourceProvider>(\n      this.traverseDescriptive(this.traverseLinking(agent)),\n      this.traversals.agent\n    );\n  }\n\n  traverseType<T>(object: T, traversals: Array<Traversal<T>>): T {\n    return traversals.reduce((acc: T, traversal: Traversal<T>): T => {\n      const returnValue = traversal(acc);\n      if (typeof returnValue === 'undefined' && !this.options.allowUndefinedReturn) {\n        return acc;\n      }\n      return returnValue;\n    }, object);\n  }\n\n  traverseService(service: Service): Service {\n    return this.traverseType<Service>(service, this.traversals.service);\n  }\n\n  traverseUnknown(resource: any) {\n    const type = identifyResource(resource);\n\n    switch (type) {\n      case 'Collection':\n        return this.traverseCollection(resource as Collection);\n      case 'Manifest':\n        return this.traverseManifest(resource as Manifest);\n      case 'Canvas':\n        return this.traverseCanvas(resource as Canvas);\n      case 'AnnotationPage':\n        return this.traverseAnnotationPage(resource as AnnotationPage);\n      case 'Annotation':\n        return this.traverseAnnotation(resource as Annotation);\n      case 'ContentResource':\n        return this.traverseContentResource(resource as ContentResource);\n      case 'Range':\n        return this.traverseRange(resource as Range);\n      case 'Service':\n        return this.traverseService(resource as Service);\n      case 'Agent':\n        return this.traverseAgent(resource as ResourceProvider);\n      default:\n        throw new Error(`Unknown or unsupported resource type of ${type}`);\n    }\n  }\n}\n","import {\n  Annotation,\n  AnnotationList,\n  Canvas,\n  ChoiceEmbeddedContent,\n  Collection,\n  CommonContentResource,\n  ContentResource,\n  DescriptiveProperties,\n  Layer,\n  LinkingProperties,\n  Manifest,\n  OneOrMany,\n  Range,\n  RightsProperties,\n  Sequence,\n  Service,\n  TraversableEntityTypes,\n  Traversal,\n  TraversalMap,\n} from '@iiif/presentation-2';\n\nexport const types: TraversableEntityTypes[] = [\n  'sc:Collection',\n  'sc:Manifest',\n  'sc:Canvas',\n  'sc:AnnotationList',\n  'oa:Annotation',\n  'sc:Range',\n  'sc:Layer',\n  'sc:Sequence',\n  'oa:Choice',\n  // Opaque.\n  'Service',\n  'ContentResource',\n];\n\nexport type TraverseOptions = {\n  convertPropsToArray: boolean;\n  mergeMemberProperties: boolean;\n  allowUndefinedReturn: boolean;\n};\n\nexport function identifyResource(resource: any): TraversableEntityTypes {\n  if (typeof resource === 'undefined' || resource === null) {\n    throw new Error('Null or undefined is not a valid entity.');\n  }\n  if (Array.isArray(resource)) {\n    throw new Error('Array is not a valid entity');\n  }\n  if (typeof resource !== 'object') {\n    throw new Error(`${typeof resource} is not a valid entity`);\n  }\n\n  if (typeof resource['@type'] === 'string') {\n    const hasType = types.indexOf(resource['@type'] as any);\n    if (hasType !== -1) {\n      return types[hasType];\n    }\n  }\n\n  if (resource.profile) {\n    return 'Service';\n  }\n\n  if (resource.format) {\n    return 'ContentResource';\n  }\n\n  // Big o'l fallback.\n  if (resource['@type']) {\n    return 'ContentResource';\n  }\n\n  throw new Error('Resource type is not known');\n}\n\nexport class Traverse<\n  T extends {\n    Collection: any;\n    Manifest: any;\n    Canvas: any;\n    AnnotationList: any;\n    Sequence: any;\n    Annotation: any;\n    ContentResource: any;\n    Choice: any;\n    Range: any;\n    Service: any;\n    Layer: any;\n  } = {\n    Collection: Collection;\n    Manifest: Manifest;\n    Canvas: Canvas;\n    AnnotationList: AnnotationList;\n    Sequence: Sequence;\n    Annotation: Annotation;\n    ContentResource: CommonContentResource;\n    Choice: ChoiceEmbeddedContent;\n    Range: Range;\n    Service: Service;\n    Layer: Layer;\n  }\n> {\n  private traversals: Required<TraversalMap>;\n  private options: TraverseOptions;\n\n  constructor(traversals: Partial<TraversalMap>, options: Partial<TraverseOptions> = {}) {\n    this.traversals = {\n      collection: [],\n      manifest: [],\n      canvas: [],\n      annotationList: [],\n      sequence: [],\n      annotation: [],\n      contentResource: [],\n      choice: [],\n      range: [],\n      service: [],\n      layer: [],\n      ...traversals,\n    };\n    this.options = {\n      convertPropsToArray: true,\n      mergeMemberProperties: true,\n      allowUndefinedReturn: false,\n      ...options,\n    };\n  }\n\n  static all(traversal: (resource: any) => any) {\n    return new Traverse({\n      collection: [traversal],\n      manifest: [traversal],\n      canvas: [traversal],\n      annotationList: [traversal],\n      sequence: [traversal],\n      annotation: [traversal],\n      contentResource: [traversal],\n      choice: [traversal],\n      range: [traversal],\n      service: [traversal],\n      layer: [traversal],\n    });\n  }\n\n  traverseCollection(collection: Collection): T['Collection'] {\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(this.traverseCollectionItems(collection))),\n      this.traversals.collection\n    );\n  }\n\n  traverseCollectionItems(collection: Collection): Collection {\n    if (this.options.mergeMemberProperties) {\n      const members = [\n        ...(collection.manifests || []).map((manifest) => {\n          if (typeof manifest === 'string') {\n            return { '@id': manifest, '@type': 'sc:Manifest' };\n          }\n          return manifest;\n        }),\n        ...(collection.collections || []).map((subCollection) => {\n          if (typeof subCollection === 'string') {\n            return { '@id': subCollection, '@type': 'sc:Collection' };\n          }\n          return subCollection;\n        }),\n        ...(collection.members || []),\n      ];\n\n      delete collection.collections;\n      delete collection.manifests;\n      collection.members = members;\n    }\n\n    if (collection.manifests) {\n      collection.manifests = collection.manifests.map((manifest) =>\n        this.traverseManifest(\n          typeof manifest === 'string'\n            ? ({ '@id': manifest, '@type': 'sc:Manifest' } as Manifest)\n            : (manifest as Manifest)\n        )\n      );\n    }\n\n    if (collection.collections) {\n      collection.collections = collection.collections.map((subCollection) =>\n        this.traverseCollection(\n          typeof subCollection === 'string'\n            ? ({ '@id': subCollection, '@type': 'sc:Collection' } as Collection)\n            : (subCollection as Collection)\n        )\n      );\n    }\n\n    if (collection.members) {\n      collection.members = collection.members.map((member) => {\n        if (typeof member === 'string') {\n          return member;\n        }\n        return this.traverseUnknown(member);\n      });\n    }\n\n    return collection;\n  }\n\n  traverseManifest(manifest: Manifest): T['Manifest'] {\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(this.traverseManifestItems(manifest))),\n      this.traversals.manifest\n    );\n  }\n\n  traverseManifestItems(manifest: Manifest): Manifest {\n    if (manifest.sequences) {\n      manifest.sequences = manifest.sequences.map((sequence) => this.traverseSequence(sequence));\n    }\n    if (manifest.structures) {\n      manifest.structures = manifest.structures.map((structure) => this.traverseRange(structure));\n    }\n    return manifest;\n  }\n\n  traverseSequence(sequence: Sequence): T['Sequence'] {\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(this.traverseSequenceItems(sequence))),\n      this.traversals.sequence\n    );\n  }\n\n  traverseSequenceItems(sequence: Sequence): Sequence {\n    if (sequence.canvases) {\n      sequence.canvases = sequence.canvases.map((canvas) => this.traverseCanvas(canvas));\n    }\n    return sequence;\n  }\n\n  traverseCanvas(canvas: Canvas): T['Canvas'] {\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(this.traverseCanvasItems(canvas))),\n      this.traversals.canvas\n    );\n  }\n\n  traverseCanvasItems(canvas: Canvas): Canvas {\n    if (canvas.images) {\n      canvas.images = canvas.images.map((image) => this.traverseAnnotation(image));\n    }\n    if (canvas.otherContent) {\n      canvas.otherContent = canvas.otherContent.map((annotationList) => this.traverseAnnotationList(annotationList));\n    }\n    return canvas;\n  }\n\n  traverseRange(range: Range): T['Range'] {\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(this.traverseRangeItems(range))),\n      this.traversals.range\n    );\n  }\n\n  traverseRangeItems(range: Range): Range {\n    if (this.options.mergeMemberProperties) {\n      const members = [\n        ...(range.ranges || []).map((innerRange: any) => {\n          if (typeof innerRange === 'string') {\n            return { '@id': innerRange, '@type': 'sc:Range' };\n          }\n          return innerRange;\n        }),\n        ...(range.canvases || []).map((canvas: any) => {\n          if (typeof canvas === 'string') {\n            return { '@id': canvas, '@type': 'sc:Canvas' };\n          }\n          return canvas;\n        }),\n        ...(range.members || []),\n      ];\n\n      delete range.ranges;\n      delete range.canvases;\n      range.members = members.length ? members.map((member) => this.traverseUnknown(member)) : undefined;\n    }\n    return range;\n  }\n\n  traverseAnnotationList(annotationList: AnnotationList): T['AnnotationList'] {\n    const list =\n      typeof annotationList === 'string'\n        ? ({ '@id': annotationList, '@type': 'sc:AnnotationList' } as any)\n        : annotationList;\n\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseAnnotationListItems(list)),\n      this.traversals.annotationList\n    );\n  }\n\n  traverseAnnotationListItems(annotationList: AnnotationList): AnnotationList {\n    if (annotationList.resources) {\n      annotationList.resources = annotationList.resources.map((annotation) => this.traverseAnnotation(annotation));\n    }\n\n    return annotationList;\n  }\n\n  traverseAnnotation(annotation: Annotation): T['Annotation'] {\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(this.traverseAnnotationItems(annotation))),\n      this.traversals.annotation\n    );\n  }\n\n  traverseAnnotationItems(annotation: Annotation): Annotation {\n    if (annotation.resource) {\n      if (Array.isArray(annotation.resource)) {\n        annotation.resource = annotation.resource.map((res) =>\n          this.traverseContentResource(res as CommonContentResource)\n        );\n      } else {\n        annotation.resource = this.traverseContentResource(annotation.resource as CommonContentResource);\n      }\n    }\n\n    if (annotation.on) {\n      // selector - just traverse the annotations.\n      // annotation.on = this.traverseSelector(annotation.on);\n    }\n\n    return annotation;\n  }\n\n  traverseLayer(layer: Layer): T['Layer'] {\n    return this.traverseType(this.traverseLinking(this.traverseLayerItems(layer)), this.traversals.layer);\n  }\n\n  traverseLayerItems(layer: Layer): Layer {\n    if (layer.otherContent) {\n      layer.otherContent = layer.otherContent.map((annotationList) => this.traverseAnnotationList(annotationList));\n    }\n    return layer;\n  }\n\n  traverseChoice(choice: ChoiceEmbeddedContent): T['Choice'] {\n    return this.traverseType(this.traverseChoiceItems(choice), this.traversals.choice);\n  }\n\n  traverseChoiceItems(choice: ChoiceEmbeddedContent) {\n    if (choice.default && choice.default !== 'rdf:nil') {\n      choice.default = this.traverseContentResource(choice.default);\n    }\n    if (choice.item && choice.item !== 'rdf:nil') {\n      choice.item = choice.item.map((item) => this.traverseContentResource(item));\n    }\n\n    return choice;\n  }\n\n  traverseService(service: Service): T['Service'] {\n    return this.traverseType(this.traverseLinking(service as any), this.traversals.service);\n  }\n\n  traverseContentResource(contentResource: CommonContentResource): T['ContentResource'] {\n    if (contentResource['@type'] === 'oa:Choice') {\n      return this.traverseChoice(contentResource as any);\n    }\n\n    return this.traverseType(\n      this.traverseDescriptive(this.traverseLinking(contentResource as any)),\n      this.traversals.contentResource\n    );\n  }\n\n  traverseUnknown(item: any) {\n    if (!item['@type'] || typeof item === 'string') {\n      // Unknown item.\n      return item;\n    }\n    switch (identifyResource(item)) {\n      case 'sc:Collection':\n        return this.traverseCollection(item);\n      case 'sc:Manifest':\n        return this.traverseManifest(item);\n      case 'sc:Canvas':\n        return this.traverseCanvas(item);\n      case 'sc:Sequence':\n        return this.traverseSequence(item);\n      case 'sc:Range':\n        return this.traverseRange(item);\n      case 'oa:Annotation':\n        return this.traverseAnnotation(item);\n      case 'sc:AnnotationList':\n        return this.traverseAnnotationList(item);\n      case 'sc:Layer':\n        return this.traverseLayer(item);\n      case 'Service':\n        return this.traverseService(item);\n      case 'oa:Choice':\n        return this.traverseChoice(item);\n      case 'ContentResource':\n        return this.traverseContentResource(item);\n    }\n\n    if (item.profile) {\n      return this.traverseService(item);\n    }\n\n    return item;\n  }\n\n  traverseImageResource(contentResource: OneOrMany<string | ContentResource>) {\n    const wasArray = Array.isArray(contentResource);\n    const resourceList = Array.isArray(contentResource) ? contentResource : [contentResource];\n    const newResourceList: any[] = [];\n\n    for (const singleResource of resourceList) {\n      if (typeof singleResource === 'string') {\n        newResourceList.push(\n          this.traverseContentResource({\n            '@id': singleResource,\n            '@type': 'dctypes:Image',\n          })\n        );\n      } else {\n        newResourceList.push(this.traverseContentResource(singleResource as any));\n      }\n    }\n\n    if (!wasArray && !this.options.convertPropsToArray) {\n      return newResourceList[0];\n    }\n\n    return newResourceList;\n  }\n\n  traverseDescriptive<T extends Partial<DescriptiveProperties & RightsProperties>>(resource: T) {\n    if (resource.thumbnail) {\n      resource.thumbnail = this.traverseImageResource(resource.thumbnail);\n    }\n\n    if (resource.logo) {\n      resource.logo = this.traverseImageResource(resource.logo);\n    }\n\n    return resource;\n  }\n\n  traverseOneOrMoreServices(allServices: OneOrMany<any>) {\n    const wasArray = Array.isArray(allServices);\n    const services = Array.isArray(allServices) ? allServices : [allServices];\n    const newServices = [];\n    for (const service of services) {\n      newServices.push(this.traverseService(service));\n    }\n\n    if (!wasArray && !this.options.convertPropsToArray) {\n      return newServices[0];\n    }\n\n    return newServices;\n  }\n\n  traverseLinking<T extends Partial<LinkingProperties>>(resource: T) {\n    if (resource.related) {\n      resource.related = this.traverseOneOrManyType(resource.related, this.traversals.contentResource);\n    }\n    if (resource.rendering) {\n      resource.rendering = this.traverseOneOrManyType(resource.rendering, this.traversals.contentResource);\n    }\n    if (resource.service) {\n      resource.service = this.traverseOneOrMoreServices(resource.service);\n    }\n    if (resource.seeAlso) {\n      resource.seeAlso = this.traverseOneOrManyType(resource.seeAlso, this.traversals.contentResource);\n    }\n    if (resource.within) {\n      if (typeof resource.within === 'string') {\n        // I don't know. skip?\n      } else {\n        resource.within = this.traverseOneOrManyType(\n          resource.within as CommonContentResource,\n          this.traversals.contentResource\n        );\n      }\n    }\n    if (resource.startCanvas) {\n      if (typeof resource.startCanvas === 'string') {\n        resource.startCanvas = this.traverseType(\n          { '@id': resource.startCanvas, '@type': 'sc:Canvas' } as Canvas,\n          this.traversals.canvas\n        );\n      } else if (resource.startCanvas) {\n        this.traverseType(resource.startCanvas as any, this.traversals.canvas);\n      }\n    }\n    if (resource.contentLayer) {\n      if (typeof resource.contentLayer === 'string') {\n        resource.contentLayer = this.traverseLayer({\n          '@id': resource.contentLayer,\n          '@type': 'sc:Layer',\n        });\n      } else {\n        resource.contentLayer = this.traverseLayer(resource.contentLayer);\n      }\n    }\n    return resource;\n  }\n\n  traverseOneOrManyType<T, Return = T>(object: T | T[], traversals: Array<Traversal<T>>): Return {\n    if (!Array.isArray(object)) {\n      if (this.options.convertPropsToArray) {\n        object = [object] as T[];\n      } else {\n        return this.traverseType(object, traversals);\n      }\n    }\n    return object.map((singleObj) => this.traverseType(singleObj, traversals)) as any;\n  }\n\n  traverseType<T, Return = T>(object: T, traversals: Array<Traversal<T>>): Return {\n    return traversals.reduce((acc: T, traversal: Traversal<T>): T => {\n      const returnValue = traversal(acc);\n      if (typeof returnValue === 'undefined' && !this.options.allowUndefinedReturn) {\n        return acc;\n      }\n      return returnValue;\n    }, object) as any;\n  }\n}\n","export const STANFORD_IIIF_IMAGE_COMPLIANCE_0 = 'http://library.stanford.edu/iiif/image-api/compliance.html#level0';\nexport const STANFORD_IIIF_IMAGE_COMPLIANCE_1 = 'http://library.stanford.edu/iiif/image-api/compliance.html#level1';\nexport const STANFORD_IIIF_IMAGE_COMPLIANCE_2 = 'http://library.stanford.edu/iiif/image-api/compliance.html#level2';\nexport const STANFORD_IIIF_IMAGE_CONFORMANCE_0 = 'http://library.stanford.edu/iiif/image-api/conformance.html#level0';\nexport const STANFORD_IIIF_IMAGE_CONFORMANCE_1 = 'http://library.stanford.edu/iiif/image-api/conformance.html#level1';\nexport const STANFORD_IIIF_IMAGE_CONFORMANCE_2 = 'http://library.stanford.edu/iiif/image-api/conformance.html#level2';\nexport const STANFORD_IIIF_1_IMAGE_COMPLIANCE_0 =\n  'http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0';\nexport const STANFORD_IIIF_1_IMAGE_COMPLIANCE_1 =\n  'http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1';\nexport const STANFORD_IIIF_1_IMAGE_COMPLIANCE_2 =\n  'http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2';\nexport const STANFORD_IIIF_1_IMAGE_CONFORMANCE_0 =\n  'http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0';\nexport const STANFORD_IIIF_1_IMAGE_CONFORMANCE_1 =\n  'http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1';\nexport const STANFORD_IIIF_1_IMAGE_CONFORMANCE_2 =\n  'http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2';\nexport const IIIF_1_IMAGE_LEVEL_0 = 'http://iiif.io/api/image/1/level0.json';\nexport const IIIF_1_IMAGE_LEVEL_0_PROFILE = 'http://iiif.io/api/image/1/profiles/level0.json';\nexport const IIIF_1_IMAGE_LEVEL_1 = 'http://iiif.io/api/image/1/level1.json';\nexport const IIIF_1_IMAGE_LEVEL_1_PROFILE = 'http://iiif.io/api/image/1/profiles/level1.json';\nexport const IIIF_1_IMAGE_LEVEL_2 = 'http://iiif.io/api/image/1/level2.json';\nexport const IIIF_1_IMAGE_LEVEL_2_PROFILE = 'http://iiif.io/api/image/1/profiles/level2.json';\nexport const IIIF_2_IMAGE_LEVEL_0 = 'http://iiif.io/api/image/2/level0.json';\nexport const IIIF_2_IMAGE_LEVEL_0_PROFILE = 'http://iiif.io/api/image/2/profiles/level0.json';\nexport const IIIF_2_IMAGE_LEVEL_1 = 'http://iiif.io/api/image/2/level1.json';\nexport const IIIF_2_IMAGE_LEVEL_1_PROFILE = 'http://iiif.io/api/image/2/profiles/level1.json';\nexport const IIIF_2_IMAGE_LEVEL_2 = 'http://iiif.io/api/image/2/level2.json';\nexport const IIIF_2_IMAGE_LEVEL_2_PROFILE = 'http://iiif.io/api/image/2/profiles/level2.json';\nexport const IIIF_3_IMAGE_LEVEL_0 = 'level0';\nexport const IIIF_3_IMAGE_LEVEL_1 = 'level1';\nexport const IIIF_3_IMAGE_LEVEL_2 = 'level2';\n\n// Non-standard\nexport const IIIF_2_IMAGE_LEVEL_0_NO_JSON = 'http://iiif.io/api/image/2/level0';\nexport const IIIF_2_IMAGE_LEVEL_1_NO_JSON = 'http://iiif.io/api/image/2/level1';\nexport const IIIF_2_IMAGE_LEVEL_2_NO_JSON = 'http://iiif.io/api/image/2/level2';\n\nexport const level1Support = [\n  IIIF_2_IMAGE_LEVEL_1_NO_JSON,\n  IIIF_2_IMAGE_LEVEL_2_NO_JSON,\n  STANFORD_IIIF_IMAGE_COMPLIANCE_1,\n  STANFORD_IIIF_IMAGE_COMPLIANCE_2,\n  STANFORD_IIIF_IMAGE_CONFORMANCE_1,\n  STANFORD_IIIF_IMAGE_CONFORMANCE_2,\n  STANFORD_IIIF_1_IMAGE_COMPLIANCE_1,\n  STANFORD_IIIF_1_IMAGE_COMPLIANCE_2,\n  STANFORD_IIIF_1_IMAGE_CONFORMANCE_1,\n  STANFORD_IIIF_1_IMAGE_CONFORMANCE_2,\n  IIIF_1_IMAGE_LEVEL_1,\n  IIIF_1_IMAGE_LEVEL_1_PROFILE,\n  IIIF_1_IMAGE_LEVEL_2,\n  IIIF_1_IMAGE_LEVEL_2_PROFILE,\n  IIIF_2_IMAGE_LEVEL_1,\n  IIIF_2_IMAGE_LEVEL_1_PROFILE,\n  IIIF_2_IMAGE_LEVEL_2,\n  IIIF_2_IMAGE_LEVEL_2_PROFILE,\n  IIIF_3_IMAGE_LEVEL_1,\n  IIIF_3_IMAGE_LEVEL_2,\n];\n\nexport const imageServiceProfiles = [\n  IIIF_2_IMAGE_LEVEL_0_NO_JSON,\n  IIIF_2_IMAGE_LEVEL_1_NO_JSON,\n  IIIF_2_IMAGE_LEVEL_2_NO_JSON,\n  STANFORD_IIIF_IMAGE_COMPLIANCE_0,\n  STANFORD_IIIF_IMAGE_COMPLIANCE_1,\n  STANFORD_IIIF_IMAGE_COMPLIANCE_2,\n  STANFORD_IIIF_IMAGE_CONFORMANCE_0,\n  STANFORD_IIIF_IMAGE_CONFORMANCE_1,\n  STANFORD_IIIF_IMAGE_CONFORMANCE_2,\n  STANFORD_IIIF_1_IMAGE_COMPLIANCE_0,\n  STANFORD_IIIF_1_IMAGE_COMPLIANCE_1,\n  STANFORD_IIIF_1_IMAGE_COMPLIANCE_2,\n  STANFORD_IIIF_1_IMAGE_CONFORMANCE_0,\n  STANFORD_IIIF_1_IMAGE_CONFORMANCE_1,\n  STANFORD_IIIF_1_IMAGE_CONFORMANCE_2,\n  IIIF_1_IMAGE_LEVEL_0,\n  IIIF_1_IMAGE_LEVEL_0_PROFILE,\n  IIIF_1_IMAGE_LEVEL_1,\n  IIIF_1_IMAGE_LEVEL_1_PROFILE,\n  IIIF_1_IMAGE_LEVEL_2,\n  IIIF_1_IMAGE_LEVEL_2_PROFILE,\n  IIIF_2_IMAGE_LEVEL_0,\n  IIIF_2_IMAGE_LEVEL_0_PROFILE,\n  IIIF_2_IMAGE_LEVEL_1,\n  IIIF_2_IMAGE_LEVEL_1_PROFILE,\n  IIIF_2_IMAGE_LEVEL_2,\n  IIIF_2_IMAGE_LEVEL_2_PROFILE,\n  IIIF_3_IMAGE_LEVEL_0,\n  IIIF_3_IMAGE_LEVEL_1,\n  IIIF_3_IMAGE_LEVEL_2,\n];\n","import * as Presentation3 from '@iiif/presentation-3';\nimport * as Presentation2 from '@iiif/presentation-2';\nimport { imageServiceProfiles, level1Support } from '../shared/image-api-profiles';\nimport { Traverse } from './traverse';\nimport { ensureArray } from '../shared/ensure-array';\n\nconst configuration = {\n  attributionLabel: 'Attribution',\n  lang: 'none',\n  providerId: 'http://example.org/provider',\n  providerName: 'Unknown',\n};\n\nexport function convertLanguageMapping(\n  inputLangProperty?: Presentation2.OneOrMany<Presentation2.LanguageProperty>,\n  defaultLang = 'none'\n): Presentation3.InternationalString {\n  if (!inputLangProperty) {\n    return {};\n  }\n\n  const arrayOfValues = Array.isArray(inputLangProperty) ? inputLangProperty : [inputLangProperty];\n\n  const languageMap: Presentation3.InternationalString = {};\n\n  for (const language of arrayOfValues) {\n    // For strings \"label\": [\"a value\"]\n    if (typeof language === 'string') {\n      languageMap[defaultLang] = languageMap[defaultLang] ? languageMap[defaultLang] : [];\n      (languageMap[defaultLang] as string[]).push(language || '');\n      continue;\n    }\n\n    // For maps without a language\n    if (!language['@language']) {\n      languageMap[defaultLang] = languageMap[defaultLang] ? languageMap[defaultLang] : [];\n      (languageMap[defaultLang] as string[]).push(language['@value'] || '');\n      continue;\n    }\n\n    // Default case with language.\n    const lang = language['@language'];\n    languageMap[lang] = languageMap[lang] ? languageMap[lang] : [];\n    (languageMap[lang] as string[]).push(language['@value'] || '');\n  }\n  return languageMap;\n}\n\nexport function getProfile(profile: any | any[]): string | undefined {\n  if (Array.isArray(profile)) {\n    return getProfile(profile.find((s) => typeof s === 'string'));\n  }\n\n  if (imageServiceProfiles.indexOf(profile) !== -1) {\n    return 'level2';\n  }\n\n  if (level1Support.indexOf(profile) !== -1) {\n    return 'level1';\n  }\n\n  if (typeof profile !== 'string') {\n    return undefined;\n  }\n\n  return profile;\n}\n\nexport function getTypeFromContext(inputContexts: string | string[]): string | undefined {\n  const contexts: string[] = Array.isArray(inputContexts) ? inputContexts : [inputContexts];\n\n  for (const context of contexts) {\n    switch (context) {\n      case 'http://iiif.io/api/image/2/context.json':\n      case 'http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2':\n        return 'ImageService2';\n      case 'http://iiif.io/api/image/1/context.json':\n      case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n        return 'ImageService1';\n      case 'http://iiif.io/api/annex/openannotation/context.json':\n        return 'ImageApiSelector';\n    }\n  }\n\n  return undefined;\n}\n\nfunction getTypeFromProfile(inputProfile: string): string | undefined {\n  switch (inputProfile) {\n    case 'http://iiif.io/api/image/2/level0.json':\n    case 'http://iiif.io/api/image/2/level1.json':\n    case 'http://iiif.io/api/image/2/level2.json':\n      return 'ImageService2';\n\n    case 'http://iiif.io/api/auth/1/kiosk':\n    case 'http://iiif.io/api/auth/1/login':\n    case 'http://iiif.io/api/auth/1/clickthrough':\n    case 'http://iiif.io/api/auth/1/external':\n    case 'http://iiif.io/api/auth/0/kiosk':\n    case 'http://iiif.io/api/auth/0/login':\n    case 'http://iiif.io/api/auth/0/clickthrough':\n    case 'http://iiif.io/api/auth/0/external':\n      return 'AuthCookieService1';\n\n    case 'http://iiif.io/api/auth/1/token':\n    case 'http://iiif.io/api/auth/0/token':\n      return 'AuthTokenService1';\n    case 'http://iiif.io/api/auth/1/logout':\n    case 'http://iiif.io/api/auth/0/logout':\n      return 'AuthLogoutService1';\n\n    case 'http://iiif.io/api/search/1/search':\n    case 'http://iiif.io/api/search/0/search':\n      return 'SearchService1';\n    case 'http://iiif.io/api/search/1/autocomplete':\n    case 'http://iiif.io/api/search/0/autocomplete':\n      return 'AutoCompleteService1';\n  }\n\n  return undefined;\n}\n\nfunction removePrefix(str: string) {\n  for (const prefix of ['sc', 'oa', 'dcterms', 'dctypes', 'iiif']) {\n    if (str.startsWith(`${prefix}:`)) {\n      return str.slice(prefix.length + 1);\n    }\n  }\n\n  return str;\n}\n\nconst knownTypes = ['Collection', 'Manifest', 'Annotation', 'AnnotationPage', 'Range', 'Service'];\n\nfunction getNewType(resource: any): string {\n  const id = resource['@id'] || resource.id;\n  let oldType: string | string[] = resource['@type'] || resource.type;\n  const profile: any = resource.profile || undefined;\n  const context: any = resource['@context'] || undefined;\n\n  if (profile) {\n    const possibleType = getTypeFromProfile(profile);\n    if (possibleType) {\n      return possibleType;\n    }\n  }\n\n  if (context) {\n    const possibleType = getTypeFromContext(context);\n    if (possibleType) {\n      return possibleType;\n    }\n  }\n\n  if (oldType) {\n    if (Array.isArray(oldType)) {\n      if (oldType.indexOf('oa:CssStylesheet') !== -1) {\n        return 'CssStylesheet';\n      }\n      if (oldType.indexOf('cnt:ContentAsText') !== -1) {\n        return 'TextualBody';\n      }\n      // Nothing we can do?\n      oldType = oldType[0];\n    }\n\n    for (const prefix of ['sc', 'oa', 'dcterms', 'dctypes', 'iiif']) {\n      if (oldType.startsWith(`${prefix}:`)) {\n        oldType = oldType.slice(prefix.length + 1);\n        break;\n      }\n    }\n\n    switch (oldType) {\n      case 'Layer':\n        return 'AnnotationCollection';\n      case 'AnnotationList':\n        return 'AnnotationPage';\n      case 'cnt:ContentAsText':\n        return 'TextualBody';\n      // @todo There are definitely some missing annotation types here.\n    }\n  }\n\n  if (oldType && knownTypes.indexOf(oldType) !== -1) {\n    return oldType;\n  }\n\n  if (resource.format) {\n    if (resource.format.startsWith('image/')) {\n      return 'Image';\n    }\n    if (resource.format.startsWith('text/')) {\n      return 'Text';\n    }\n    if (resource.format === 'application/pdf') {\n      return 'Text';\n    }\n    if (resource.format.startsWith('application/')) {\n      return 'Dataset';\n    }\n  }\n\n  if (id && (id.endsWith('.jpg') || id.endsWith('.png') || id.endsWith('.jpeg'))) {\n    return 'Image';\n  }\n\n  if (!oldType) {\n    return 'unknown';\n  }\n\n  // Again, nothing we can do.\n  return oldType as string;\n}\n\nconst licenseRegex = /http(s)?:\\/\\/(creativecommons.org|rightsstatements.org)[^\"'\\\\<\\n]+/gm;\n\nfunction extractLicense(license: string) {\n  const matches = license.match(licenseRegex);\n  if (matches) {\n    return matches[0];\n  }\n\n  return license;\n}\n\nasync function getContentTypeOfRemoteResource(resourceId: string): Promise<string | undefined> {\n  try {\n    const response = await fetch(resourceId, { method: 'HEAD' });\n    const headers = response.headers;\n\n    return headers.get('content-type') || undefined;\n  } catch (e) {\n    // do nothing.\n  }\n\n  return undefined;\n}\n\nfunction fixLicense(\n  license: Presentation2.RightsProperties['license'],\n  licenseLabel = 'Rights/License',\n  lang = 'none'\n): [Presentation3.DescriptiveProperties['rights'], Presentation3.DescriptiveProperties['metadata']] {\n  let rights: Presentation3.DescriptiveProperties['rights'] = null;\n  const metadata: Presentation3.DescriptiveProperties['metadata'] = [];\n\n  const licenseList = Array.isArray(license) ? license : [license];\n\n  for (const rawLicense of licenseList) {\n    const singleLicense = rawLicense ? extractLicense(rawLicense) : undefined;\n\n    if (\n      singleLicense &&\n      (singleLicense.indexOf('creativecommons.org') !== -1 || singleLicense.indexOf('rightsstatements.org') !== -1)\n    ) {\n      if (singleLicense.startsWith('https://')) {\n        rights = `http://${singleLicense.slice(8)}`;\n      } else {\n        rights = singleLicense;\n      }\n      continue;\n    }\n    if (singleLicense) {\n      metadata.push({\n        label: { [lang]: [licenseLabel] },\n        value: { [lang]: [singleLicense] },\n      });\n    }\n  }\n\n  return [rights, metadata];\n}\n\nconst removeContexts = [\n  'http://iiif.io/api/presentation/2/context.json',\n  'http://iiif.io/api/image/2/context.json',\n  'http://iiif.io/api/image/1/context.json',\n  'http://library.stanford.edu/iiif/image-api/1.1/context.json',\n  'http://iiif.io/api/search/1/context.json',\n  'http://iiif.io/api/search/0/context.json',\n  'http://iiif.io/api/auth/1/context.json',\n  'http://iiif.io/api/auth/0/context.json',\n  'http://iiif.io/api/annex/openannotation/context.json',\n];\n\nfunction fixContext(inputContext: string | string[] | undefined): string | string[] | undefined {\n  if (inputContext) {\n    const contexts = Array.isArray(inputContext) ? inputContext : [inputContext];\n\n    const newContexts = [];\n    for (const context of contexts) {\n      if (context === 'http://iiif.io/api/presentation/2/context.json') {\n        newContexts.push('http://iiif.io/api/presentation/3/context.json');\n      }\n      if (removeContexts.indexOf(context) !== -1) {\n        continue;\n      }\n      newContexts.push(context);\n    }\n\n    if (contexts.length) {\n      return newContexts.length === 1 ? newContexts[0] : newContexts;\n    }\n  }\n\n  return undefined;\n}\n\nfunction convertMetadata(\n  metadata: Presentation2.DescriptiveProperties['metadata']\n): Presentation3.DescriptiveProperties['metadata'] {\n  if (!metadata) {\n    return [];\n  }\n\n  return metadata.map((item): Presentation3.MetadataItem => {\n    return {\n      label: convertLanguageMapping(item.label),\n      value: convertLanguageMapping(item.value),\n    };\n  });\n}\n\nfunction removeUndefinedProperties(obj: any) {\n  for (const prop in obj) {\n    if (typeof obj[prop] === 'undefined' || obj[prop] === null) {\n      delete obj[prop];\n    }\n  }\n  return obj;\n}\n\nlet mintedIdCounter = 0;\n\nfunction mintNewIdFromResource(\n  resource: Presentation3.SomeRequired<Presentation2.TechnicalProperties, '@type'>,\n  subresource?: string\n) {\n  const origId = encodeURI((resource as { id?: string }).id || resource['@id'] || '').trim();\n\n  if (origId && subresource) {\n    return `${origId}/${subresource}`;\n  }\n\n  if (origId) {\n    return origId;\n  }\n\n  mintedIdCounter++;\n\n  // @todo.\n  return `http://example.org/${resource['@type']}${subresource ? `/${subresource}` : ''}/${mintedIdCounter}`;\n}\n\n// @todo this was removed due to identifiers not being able to be used externally after upgrading.\nfunction resolveDecodedURI(uri: string) {\n  return encodeURI(decodeURIComponent(uri)).trim();\n}\n\nfunction technicalProperties<T extends Partial<Presentation3.TechnicalProperties>>(\n  resource: Presentation3.SomeRequired<Presentation2.TechnicalProperties, '@type'> & {\n    motivation?: string | string[] | null;\n    format?: string;\n    profile?: any;\n    '@context'?: string | string[] | undefined;\n  }\n) {\n  const allBehaviours = [...(resource.behavior || [])];\n\n  if (resource.viewingHint) {\n    allBehaviours.push(resource.viewingHint);\n  }\n\n  let motivation: string | string[] | undefined;\n  if (Array.isArray(resource.motivation)) {\n    motivation = resource.motivation.map(removePrefix);\n  } else if (resource.motivation) {\n    motivation = removePrefix(resource.motivation);\n  }\n\n  return {\n    '@context': resource['@context'] ? fixContext(resource['@context']) : undefined,\n    id: (resource['@id'] || mintNewIdFromResource(resource)).trim(),\n    type: getNewType(resource) as any,\n    behavior: allBehaviours.length ? allBehaviours : undefined,\n    // format: This will be an optional async post-process step.\n    height: resource.height ? resource.height : undefined,\n    width: resource.width ? resource.width : undefined,\n    motivation,\n    viewingDirection: resource.viewingDirection,\n    profile: resource.profile,\n    format: resource.format ? resource.format : undefined,\n    duration: undefined,\n    timeMode: undefined,\n  } as any;\n}\n\nfunction descriptiveProperties<T extends Partial<Presentation3.DescriptiveProperties>>(\n  resource: Presentation2.DescriptiveProperties &\n    Presentation2.RightsProperties &\n    Partial<Presentation2.TechnicalProperties>\n): T {\n  const [rights, extraMetadata] = fixLicense(resource.license);\n  const allMetadata = [...(resource.metadata ? convertMetadata(resource.metadata) : []), ...extraMetadata];\n\n  return {\n    rights,\n    metadata: allMetadata.length ? allMetadata : undefined,\n    label: resource.label ? convertLanguageMapping(resource.label) : undefined,\n    requiredStatement: resource.attribution\n      ? {\n          label: convertLanguageMapping(configuration.attributionLabel),\n          value: convertLanguageMapping(resource.attribution),\n        }\n      : undefined,\n    navDate: resource.navDate,\n    summary: resource.description ? convertLanguageMapping(resource.description) : undefined,\n    thumbnail: resource.thumbnail as any,\n  } as T;\n}\n\nfunction parseWithin(resource: Presentation2.AbstractResource): undefined | Presentation3.LinkingProperties['partOf'] {\n  if (!resource.within) {\n    return undefined;\n  }\n\n  const withinProperties = Array.isArray(resource.within) ? resource.within : [resource.within];\n  const returnPartOf: Presentation3.LinkingProperties['partOf'] = [];\n\n  for (const within of withinProperties) {\n    if (typeof within === 'string') {\n      if (within) {\n        switch (resource['@type']) {\n          case 'sc:Manifest':\n            returnPartOf.push({ id: within, type: 'Collection' });\n            break;\n          // @todo are there more cases?\n        }\n      }\n    } else if ((within as any)['@id']) {\n      returnPartOf.push({\n        id: (within as any)['@id'], // as any since content resources don't require an `@id`\n        type: getNewType(within) as any,\n      });\n    } else {\n      // Content resource.\n    }\n  }\n\n  return returnPartOf.length ? returnPartOf : undefined;\n}\n\nfunction linkingProperties(resource: Presentation2.LinkingProperties & Presentation2.RightsProperties) {\n  // @todo related links to metadata.\n\n  const related = resource.related ? (Array.isArray(resource.related) ? resource.related : [resource.related]) : [];\n  const layer = resource.contentLayer as Presentation2.Layer;\n\n  return {\n    provider:\n      resource.logo || related.length\n        ? [\n            {\n              id: configuration.providerId,\n              type: 'Agent' as const,\n              homepage: related.length ? [related[0] as any] : undefined,\n              logo: resource.logo ? (Array.isArray(resource.logo) ? resource.logo : [resource.logo]) : undefined,\n              label: convertLanguageMapping(configuration.providerName),\n            },\n          ]\n        : undefined,\n    partOf: parseWithin(resource),\n    rendering: resource.rendering,\n    seeAlso: resource.seeAlso,\n    start: resource.startCanvas as any,\n    service: resource.service ? ensureArray(resource.service as any) : undefined,\n    supplementary: layer ? [layer as any] : undefined,\n  };\n}\n\n// FIXME: Is this function really needed?\nfunction embeddedContentProperties(resource: Presentation2.CharsEmbeddedContent) {\n  return {\n    chars: resource.chars,\n    format: resource.format ? resource.format : undefined,\n    language: resource.language,\n  };\n}\n\nfunction upgradeCollection(collection: Presentation2.Collection): Presentation3.Collection {\n  return removeUndefinedProperties({\n    ...technicalProperties(collection),\n    ...descriptiveProperties<Presentation3.SomeRequired<Presentation3.CollectionDescriptive, 'label'>>(collection),\n    ...linkingProperties(collection),\n    items: collection.members as any,\n  });\n}\n\nfunction flattenArray<T>(array: T[][]): T[] {\n  const returnArr: T[] = [];\n  for (const arr of array || []) {\n    returnArr.push(...arr);\n  }\n  return returnArr;\n}\n\nfunction upgradeManifest(manifest: Presentation2.Manifest): Presentation3.Manifest {\n  const allCanvases = [];\n  const behavior = [];\n  for (const sequence of manifest.sequences || []) {\n    if (sequence.canvases.length) {\n      allCanvases.push(...sequence.canvases);\n    }\n    if (sequence.behavior) {\n      behavior.push(...sequence.behavior);\n    }\n  }\n\n  // This comes from the sequence.\n  const technical = technicalProperties(manifest);\n  if (behavior.length) {\n    if (technical.behavior) {\n      technical.behavior.push(...behavior);\n    } else {\n      technical.behavior = behavior;\n    }\n  }\n\n  return removeUndefinedProperties({\n    ...technical,\n    ...descriptiveProperties(manifest),\n    ...linkingProperties(manifest),\n    items: allCanvases,\n    structures: manifest.structures as any,\n  });\n}\n\nfunction upgradeCanvas(canvas: Presentation2.Canvas): Presentation3.Canvas {\n  return removeUndefinedProperties({\n    ...technicalProperties(canvas),\n    ...descriptiveProperties(canvas),\n    ...linkingProperties(canvas),\n    annotations: canvas.otherContent && canvas.otherContent.length ? (canvas.otherContent as any[]) : undefined,\n    items:\n      canvas.images && canvas.images.length\n        ? [\n            {\n              id: mintNewIdFromResource(canvas, 'annotation-page'),\n              type: 'AnnotationPage',\n              items: canvas.images as any,\n            },\n          ]\n        : undefined,\n  });\n}\n\nfunction upgradeAnnotationList(annotationPage: Presentation2.AnnotationList): Presentation3.AnnotationPage {\n  return removeUndefinedProperties({\n    ...(technicalProperties(annotationPage) as any),\n    ...(descriptiveProperties(annotationPage) as any),\n    ...(linkingProperties(annotationPage) as any),\n    items: annotationPage.resources && annotationPage.resources.length ? (annotationPage.resources as any) : undefined,\n  });\n}\n\nfunction upgradeSequence(sequence: Presentation2.Sequence): {\n  canvases: Presentation3.Canvas[];\n  behavior?: string[];\n} {\n  /*\n    rng = {\"id\": s.get('@id', self.mint_uri()), \"type\": \"Range\"}\n    rng['behavior'] = ['sequence']\n    rng['items'] = []\n    for c in s['canvases']:\n      if type(c) == dict:\n        rng['items'].append({\"id\": c['@id'], \"type\": \"Canvas\"})\n      elif type(c) in STR_TYPES:\n        rng['items'].append({\"id\": c, \"type\": \"Canvas\"})\n    # Copy other properties and hand off to _generic\n    del s['canvases']\n    for k in s.keys():\n      if not k in ['@id', '@type']:\n        rng[k] = s[k]\n    self.process_generic(rng)\n    what['_structures'].append(rng)\n   */\n\n  if (!sequence.canvases || sequence.canvases.length === 0) {\n    return {\n      canvases: [],\n      behavior: [],\n    };\n  }\n\n  // @todo possibly return some ranges too.\n  return {\n    canvases: sequence.canvases as any[],\n    behavior: sequence.viewingHint ? [sequence.viewingHint] : [],\n  };\n}\n\nfunction upgradeAnnotation(annotation: Presentation2.Annotation): Presentation3.Annotation {\n  function upgradeTarget(target: typeof annotation.on): Presentation3.AnnotationTarget {\n    if (Array.isArray(target)) {\n      if (target.length > 1) {\n        return { type: 'List', items: target.map(upgradeTarget) as Presentation3.Target[] };\n      }\n      target = target[0];\n    }\n    if (typeof target === 'string') {\n      return encodeURI(target).trim();\n    } else if ('@type' in target) {\n      let source: string | Presentation3.Reference<'Canvas'> | Presentation3.Reference<'Image'>;\n      if (typeof target.full === 'string') {\n        source = target.full;\n      } else if (target.full['@type'] === 'dctypes:Image') {\n        source = { id: target.full['@id'], type: 'Image' };\n      } else if (target.full['@type'] === 'sc:Canvas') {\n        source = { id: target.full['@id'], type: 'Canvas' };\n      } else {\n        throw new Error(`Unsupported source type on annotation: ${target.full['@type']}`);\n      }\n      return {\n        type: 'SpecificResource',\n        source,\n        selector: upgradeSelector(target.selector),\n      };\n    } else {\n      return encodeURI(target['@id']).trim();\n    }\n  }\n  return removeUndefinedProperties({\n    ...(technicalProperties(annotation) as any),\n    ...(descriptiveProperties(annotation) as any),\n    ...(linkingProperties(annotation) as any),\n    target: upgradeTarget(annotation.on),\n    body: Array.isArray(annotation.resource)\n      ? annotation.resource.map(upgradeContentResource)\n      : upgradeContentResource(annotation.resource),\n    // @todo stylesheet upgrade.\n  });\n}\n\nfunction upgradeContentResource(inputContentResource: Presentation2.ContentResource): Presentation3.ContentResource {\n  const contentResource = inputContentResource as Presentation2.CommonContentResource;\n  // @todo there might be some field dropped here.\n  return removeUndefinedProperties({\n    ...(technicalProperties(contentResource) as any),\n    ...(descriptiveProperties(contentResource) as any),\n    ...(linkingProperties(contentResource as any) as any),\n    ...(embeddedContentProperties(contentResource as any) as any),\n  });\n}\n\nfunction upgradeChoice(choice: Presentation2.ChoiceEmbeddedContent): Presentation3.ChoiceBody {\n  const items = [];\n\n  if (choice.default && choice.default !== 'rdf:nil') {\n    items.push(choice.default);\n  }\n\n  if (choice.item && choice.item !== 'rdf:nil') {\n    items.push(...choice.item);\n  }\n\n  return {\n    ...technicalProperties(choice),\n    ...descriptiveProperties(choice),\n    items: items as any,\n  };\n}\n\nfunction upgradeRange(range: Presentation2.Range): Presentation3.Range {\n  // range.members;\n  // range.canvases;\n  // Range.\n  // At the moment a range only references other ranges by id.\n  // So we need to first get\n  return removeUndefinedProperties({\n    ...technicalProperties(range),\n    ...descriptiveProperties(range),\n    ...linkingProperties(range),\n    items: range.members as any,\n  } as Presentation3.Range);\n}\n\nfunction upgradeService(service: Presentation2.Service): Presentation3.Service {\n  const { '@id': id, '@type': type, '@context': context, profile, ...additionalProps } = service as any;\n\n  const newService: any = {};\n\n  if (id) {\n    newService['@id'] = id;\n  }\n\n  newService['@type'] = getNewType(service);\n\n  if (newService['@type'] === 'unknown') {\n    // @todo handle case where there might be multiple contexts.\n    if (context && context.length) {\n      newService['@context'] = context;\n    }\n    newService['@type'] = 'Service'; // optional on services.\n  }\n\n  if (profile) {\n    newService.profile = getProfile(profile);\n  }\n\n  return removeUndefinedProperties({\n    ...newService,\n    ...additionalProps,\n  });\n}\n\nfunction upgradeLayer(layer: Presentation2.Layer): Presentation3.AnnotationCollection {\n  return removeUndefinedProperties({\n    ...technicalProperties(layer),\n    ...descriptiveProperties(layer),\n    ...linkingProperties(layer),\n  });\n}\n\nexport const presentation2to3 = new Traverse<{\n  Collection: Presentation3.Collection;\n  Manifest: Presentation3.Manifest;\n  Canvas: Presentation3.Canvas;\n  AnnotationList: Presentation3.AnnotationPage;\n  Sequence: Presentation3.Canvas[];\n  Annotation: Presentation3.Annotation;\n  ContentResource: Presentation3.ContentResource;\n  Choice: Presentation3.ChoiceBody;\n  Range: Presentation3.Range;\n  Service: Presentation3.Service;\n  Layer: Presentation3.AnnotationCollection;\n}>({\n  collection: [upgradeCollection],\n  manifest: [upgradeManifest],\n  canvas: [upgradeCanvas],\n  annotationList: [upgradeAnnotationList],\n  sequence: [upgradeSequence],\n  annotation: [upgradeAnnotation],\n  contentResource: [upgradeContentResource],\n  choice: [upgradeChoice],\n  range: [upgradeRange],\n  service: [upgradeService],\n  layer: [upgradeLayer],\n});\n\nexport function convertPresentation2(entity: any): Presentation3.Manifest | Presentation3.Collection {\n  if (\n    (entity &&\n      entity['@context'] &&\n      (entity['@context'] === 'http://iiif.io/api/presentation/2/context.json' ||\n        entity['@context'].indexOf('http://iiif.io/api/presentation/2/context.json') !== -1 ||\n        // Yale context.\n        entity['@context'] === 'http://www.shared-canvas.org/ns/context.json')) ||\n    entity['@context'] === 'http://iiif.io/api/image/2/context.json'\n  ) {\n    return presentation2to3.traverseUnknown(entity);\n  }\n  return entity;\n}\n\nfunction upgradeSelector(\n  selector: Presentation2.ContentResourceSelector\n): Presentation3.Selector | Presentation3.Selector[] {\n  const isSvgSelector =\n    ((Array.isArray(selector['@type']) && selector['@type'].includes('oa:SvgSelector')) ||\n      selector['@type'] == 'oa:SvgSelector') &&\n    ('chars' in selector || 'value' in selector);\n  if (isSvgSelector) {\n    return {\n      type: 'SvgSelector',\n      value: 'chars' in selector ? selector.chars : selector.value,\n    };\n  }\n  if (selector['@type'] === 'oa:FragmentSelector') {\n    return {\n      type: 'FragmentSelector',\n      value: selector.value,\n    };\n  }\n  if (selector['@type'] === 'oa:Choice') {\n    return [\n      upgradeSelector(selector.default) as Presentation3.Selector,\n      ...((Array.isArray(selector.item) ? selector.item : [selector.item]).map(\n        upgradeSelector\n      ) as Presentation3.Selector[]),\n    ];\n  }\n  if (selector['@type'] == 'iiif:ImageApiSelector') {\n    return {\n      type: 'ImageApiSelector',\n      region: 'region' in selector ? selector.region : undefined,\n      rotation: 'rotation' in selector ? selector.rotation : undefined,\n    };\n  }\n  throw new Error(`Unsupported selector type: ${selector['@type']}`);\n}\n","import { Traverse } from './traverse';\nimport {\n  Annotation,\n  AnnotationPage,\n  AnnotationPageNormalized,\n  Canvas,\n  CanvasNormalized,\n  Collection,\n  CollectionNormalized,\n  Manifest,\n  ManifestNormalized,\n  PolyEntity,\n  Range,\n  RangeNormalized,\n  Reference,\n  ResourceProvider,\n  ResourceProviderNormalized,\n} from '@iiif/presentation-3';\nimport {\n  EMPTY,\n  emptyAgent,\n  emptyAnnotationPage,\n  emptyCanvas,\n  emptyCollection,\n  emptyManifest,\n  emptyRange,\n} from './empty-types';\nimport { convertPresentation2 } from '../presentation-2';\nimport { NormalizedEntity } from './serialize';\n\nexport const defaultEntities = {\n  Collection: {},\n  Manifest: {},\n  Canvas: {},\n  AnnotationPage: {},\n  AnnotationCollection: {},\n  Annotation: {},\n  ContentResource: {},\n  Range: {},\n  Service: {},\n  Selector: {},\n  Agent: {},\n};\n\nexport function getDefaultEntities() {\n  return {\n    Collection: {},\n    Manifest: {},\n    Canvas: {},\n    AnnotationPage: {},\n    AnnotationCollection: {},\n    Annotation: {},\n    ContentResource: {},\n    Range: {},\n    Service: {},\n    Selector: {},\n    Agent: {},\n  };\n}\n\nfunction getResource(entityOrString: PolyEntity, type: string): Reference {\n  if (typeof entityOrString === 'string') {\n    return { id: entityOrString, type };\n  }\n  if (!entityOrString.id) {\n    throw new Error(`Invalid resource does not have an ID (${type})`);\n  }\n  return entityOrString as Reference;\n}\n\nfunction mapToEntities(entities: Record<string, Record<string, NormalizedEntity>>) {\n  return <T extends Reference | string>(type: string, defaultStringType?: string) => {\n    const storeType = entities[type] ? entities[type] : {};\n    return (r: T): T => {\n      const resource = getResource(r, defaultStringType || type);\n      if (resource && resource.id && type) {\n        storeType[resource.id] = storeType[resource.id]\n          ? (mergeEntities(storeType[resource.id], resource) as any)\n          : Object.assign({}, resource);\n        return {\n          id: resource.id,\n          type: type === 'ContentResource' ? type : resource.type,\n        } as T;\n      }\n      return resource as T;\n    };\n  };\n}\n\nfunction merge(existing: any, incoming: any): any {\n  if (!incoming) {\n    // Falsy values are ignored\n    return existing;\n  }\n  if (Array.isArray(existing)) {\n    if (!Array.isArray(incoming)) {\n      throw new Error('Cannot merge array with non-array');\n    }\n    // For arrays, we check if any of the incoming values are not already in the\n    // existing values and add them if this is not the case. If the incoming\n    // value is an entity that is already in the existing values, it will be\n    // merged with the existing value.\n    const merged = [...existing];\n    for (const item of incoming) {\n      if (item === null || item === undefined) {\n        continue;\n      }\n      if (Array.isArray(item)) {\n        // FIXME: How to handle this properly?\n        merged.push(item);\n      } else if (typeof item === 'object' && item.id && item.type) {\n        const existingIdx = merged.findIndex((e) => e.id === item.id && e.type === item.type);\n        if (existingIdx >= 0) {\n          merged[existingIdx] = merge(merged[existingIdx], item);\n        }\n      } else if (existing.indexOf(item) === -1) {\n        merged.push(item);\n      }\n    }\n    return merged;\n  } else if (typeof existing === 'object') {\n    if (Array.isArray(incoming) || typeof incoming !== 'object') {\n      throw new Error('Cannot merge object with non-object');\n    }\n    // For objects, we check the existing object for non-existing or \"empty\"\n    // properties and use the value from the incoming object for them\n    const merged = { ...existing };\n    for (const [key, val] of Object.entries(incoming)) {\n      const currentVal = merged[key];\n      if (currentVal === EMPTY || !currentVal) {\n        merged[key] = val;\n      } else {\n        merged[key] = merge(currentVal, val);\n      }\n    }\n    return merged;\n  } else if (existing) {\n    return existing;\n  }\n  return incoming;\n}\n\nexport function mergeEntities(existing: NormalizedEntity, incoming: any): NormalizedEntity {\n  if (typeof existing === 'string') {\n    return existing;\n  }\n  if (incoming.id !== (existing as any).id || incoming.type !== (existing as any).type) {\n    throw new Error('Can only merge entities with identical identifiers and type!');\n  }\n  return merge({ ...existing }, incoming);\n}\n\nfunction recordTypeInMapping(mapping: Record<string, string>) {\n  return <T extends Reference | string>(type: string, defaultStringType?: string) => {\n    return (r: T): T => {\n      const { id, type: foundType } = getResource(r, defaultStringType || type);\n      if (typeof id === 'undefined') {\n        throw new Error('Found invalid entity without an ID.');\n      }\n      if (type === 'ContentResource') {\n        mapping[id] = type;\n      } else {\n        mapping[id] = foundType as any;\n      }\n      return r;\n    };\n  };\n}\n\n/**\n * A string hashing function based on Daniel J. Bernstein's popular 'times 33' hash algorithm.\n * @author MatthewBarker <mrjbarker@hotmail.com>\n */\nfunction hash(object: any): string {\n  const text = JSON.stringify(object);\n\n  let numHash = 5381,\n    index = text.length;\n\n  while (index) {\n    numHash = (numHash * 33) ^ text.charCodeAt(--index);\n  }\n\n  const num = numHash >>> 0;\n\n  const hexString = num.toString(16);\n  if (hexString.length % 2) {\n    return '0' + hexString;\n  }\n  return hexString;\n}\n\nfunction addMissingIdToContentResource<T extends Partial<Reference>>(type: string) {\n  return (resource: T | string): T => {\n    if (typeof resource === 'string') {\n      return { id: resource, type } as T;\n    }\n    if (!resource.id) {\n      return { id: `vault://${hash(resource)}`, type, ...resource };\n    }\n    if (!resource.type) {\n      return { type, ...resource };\n    }\n    return resource;\n  };\n}\n\nfunction ensureDefaultFields<T, R>(defaultResource: R) {\n  return (resource: T): R => {\n    return {\n      ...defaultResource,\n      ...resource,\n    };\n  };\n}\n\nfunction ensureArray<T>(maybeArray: T | T[]): T[] {\n  if (Array.isArray(maybeArray)) {\n    return maybeArray;\n  }\n  return [maybeArray];\n}\n\nfunction ensureArrayOnAnnotation(annotation: Annotation): Annotation {\n  if (annotation.body) {\n    annotation.body = ensureArray(annotation.body);\n  }\n  if (annotation.seeAlso) {\n    annotation.seeAlso = ensureArray(annotation.seeAlso);\n  }\n  if (annotation.body) {\n    annotation.body = ensureArray(annotation.body);\n  }\n  if (annotation.audience) {\n    annotation.audience = ensureArray(annotation.audience);\n  }\n  if (annotation.accessibility) {\n    annotation.accessibility = ensureArray(annotation.accessibility);\n  }\n  if (annotation.motivation) {\n    annotation.motivation = ensureArray(annotation.motivation);\n  }\n\n  return annotation;\n}\n\nexport function normalize(unknownEntity: unknown) {\n  const entity = convertPresentation2(unknownEntity);\n  const entities = getDefaultEntities();\n  const mapping = {};\n  const addToEntities = mapToEntities(entities);\n  const addToMapping = recordTypeInMapping(mapping);\n\n  const traversal = new Traverse({\n    collection: [\n      ensureDefaultFields<Collection, CollectionNormalized>(emptyCollection),\n      addToMapping<Collection>('Collection'),\n      addToEntities<Collection>('Collection'),\n    ],\n    manifest: [\n      ensureDefaultFields<Manifest, ManifestNormalized>(emptyManifest),\n      addToMapping<Manifest>('Manifest'),\n      addToEntities<Manifest>('Manifest'),\n    ],\n    canvas: [\n      ensureDefaultFields<Canvas, CanvasNormalized>(emptyCanvas),\n      addToMapping<Canvas>('Canvas'),\n      addToEntities<Canvas>('Canvas'),\n    ],\n    annotationPage: [\n      addMissingIdToContentResource('AnnotationPage'),\n      ensureDefaultFields<AnnotationPage, AnnotationPageNormalized>(emptyAnnotationPage),\n      addToMapping<AnnotationPage>('AnnotationPage'),\n      addToEntities<AnnotationPage>('AnnotationPage'),\n    ],\n    annotation: [\n      // This won't be normalized before going into the state.\n      // It will be normalized through selectors and pattern matching.\n      addMissingIdToContentResource('Annotation'),\n      ensureArrayOnAnnotation,\n      addToMapping<Annotation>('Annotation'),\n      addToEntities<Annotation>('Annotation'),\n    ],\n    contentResource: [\n      // This won't be normalized before going into the state.\n      // It will be normalized through selectors and pattern matching.\n      addMissingIdToContentResource<any>('ContentResource'),\n      addToMapping<any>('ContentResource'),\n      addToEntities<any>('ContentResource'),\n    ],\n    range: [\n      // This will add a LOT to the state, maybe this will be configurable down the line.\n      ensureDefaultFields<Range, RangeNormalized>(emptyRange),\n      addToMapping<Range>('Range', 'Canvas'),\n      addToEntities<Range>('Range', 'Canvas'),\n    ],\n    agent: [\n      ensureDefaultFields<ResourceProvider, ResourceProviderNormalized>(emptyAgent),\n      addToMapping<ResourceProvider>('Agent'),\n      addToEntities<ResourceProvider>('Agent'),\n    ],\n    // Remove this, content resources are NOT usually processed by this library.\n    // They need to be available in full when they get passed down the chain.\n    // There may be a better way to preserve annotations and content resources.\n    // service: [\n    //   ensureDefaultFields<Service, ServiceNormalized>(emptyService),\n    //   addToMapping<Service>('Service'),\n    //   addToEntities<Service>('Service'),\n    // ],\n  });\n  const resource = traversal.traverseUnknown(entity) as Reference;\n\n  return { entities, resource, mapping };\n}\n","import {\n  AnnotationCollection,\n  AnnotationCollectionNormalized,\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  CollectionNormalized,\n  ContentResource,\n  ManifestNormalized,\n  RangeNormalized,\n  Reference,\n  Selector,\n  ServiceNormalized,\n  ResourceProviderNormalized\n} from '@iiif/presentation-3';\n\nexport const UNSET = '__$UNSET$__';\nexport const UNWRAP = '__$UNWRAP$__';\n\nexport type Field = any[];\n\nexport type CompatibleStore<T extends string = string> = {\n  requests: {\n    [url: string]: { resourceUri?: string } & any;\n  };\n  entities: {\n    [type in T]: {\n      [id: string]: NormalizedEntity;\n    };\n  };\n  mapping: {\n    [id: string]: T;\n  };\n};\n\nexport type NormalizedEntity =\n  | CollectionNormalized\n  | ManifestNormalized\n  | CanvasNormalized\n  | AnnotationPageNormalized\n  | AnnotationCollectionNormalized\n  | AnnotationCollection\n  | AnnotationNormalized\n  | ContentResource\n  | RangeNormalized\n  | ServiceNormalized\n  | Selector\n  | ResourceProviderNormalized;\n\ntype SerializerContext = {\n  isTopLevel?: boolean;\n};\n\nexport type Serializer<Type extends NormalizedEntity> = (\n  entity: Type,\n  state: any,\n  context: SerializerContext\n) => Generator<Reference | Reference[], typeof UNSET | Field[], any>;\n\nexport type SerializeConfig = {\n  Collection?: Serializer<CollectionNormalized>;\n  Manifest?: Serializer<ManifestNormalized>;\n  Canvas?: Serializer<CanvasNormalized>;\n  AnnotationPage?: Serializer<AnnotationPageNormalized>;\n  AnnotationCollection?: Serializer<AnnotationCollectionNormalized>;\n  Annotation?: Serializer<AnnotationNormalized>;\n  ContentResource?: Serializer<ContentResource>;\n  Range?: Serializer<RangeNormalized>;\n  Service?: Serializer<ServiceNormalized>;\n  Selector?: Serializer<Selector>;\n  Agent?: Serializer<ResourceProviderNormalized>;\n};\n\nfunction resolveIfExists<T extends NormalizedEntity>(state: CompatibleStore, url: string): T | undefined {\n  const request = state.requests[url];\n  // Return the resource.\n  const resourceType = state.mapping[url];\n  if (!resourceType || (request && request.resourceUri && !state.entities[resourceType][request.resourceUri])) {\n    // Continue refetching resource, this is an invalid state.\n    return undefined;\n  }\n  return state.entities[resourceType][request ? request.resourceUri : url] as T;\n}\n\nexport function serializedFieldsToObject<T>(fields: Field[] | [string]): T {\n  const object: any = {};\n\n  for (const [key, value] of fields) {\n    if (key === UNWRAP && value !== UNSET) {\n      return value as T;\n    }\n    if (value !== UNSET && typeof value !== 'undefined' && value !== null) {\n      object[key] = value;\n    }\n  }\n\n  return object as T;\n}\n\nexport function serialize<Return>(state: CompatibleStore, subject: Reference, config: SerializeConfig): Return {\n  if (!subject.type || !subject.id) {\n    throw new Error('Unknown entity');\n  }\n\n  if (!config[subject.type as keyof SerializeConfig]) {\n    throw new Error(`Serializer not found for ${subject.type}`);\n  }\n\n  function flatten(sub: Reference) {\n    const generator = config[sub.type as keyof SerializeConfig];\n    if (!generator) {\n      return UNSET;\n    }\n\n    const resource = resolveIfExists(state, sub.id) || (sub.id && sub.type ? sub : null);\n    if (!resource) {\n      return UNSET;\n    }\n    const iterator = generator(resource as any, state, { isTopLevel: subject.id === sub.id });\n    let current = iterator.next();\n    while (!current.done) {\n      const requestToHydrate: Reference | Reference[] = current.value as any;\n      let next: any = UNSET;\n\n      if (requestToHydrate) {\n        if (Array.isArray(requestToHydrate)) {\n          const nextList: any[] = [];\n          for (const req of requestToHydrate) {\n            nextList.push(flatten(req));\n          }\n          next = nextList;\n        } else {\n          next = flatten(requestToHydrate);\n        }\n      }\n      current = iterator.next(next);\n    }\n\n    if (current.value === UNSET) {\n      return UNSET;\n    }\n\n    return serializedFieldsToObject(current.value);\n  }\n\n  return flatten(subject) as Return;\n}\n","import { SerializeConfig } from './serialize';\nimport {\n  DescriptiveNormalized,\n  InternationalString,\n  LinkingNormalized,\n  TechnicalProperties,\n} from '@iiif/presentation-3';\nimport * as Presentation2 from '@iiif/presentation-2';\n\nexport function languageString2to3(\n  value: InternationalString | null | undefined\n): Presentation2.LanguageProperty | Presentation2.LanguageProperty[] | undefined {\n  if (!value) {\n    return undefined;\n  }\n\n  const languages = Object.keys(value);\n\n  if (languages.length === 0) {\n    return undefined;\n  }\n\n  // If there is only one, then return it as a string.\n  if (languages.length === 1) {\n    const language = languages[0];\n    if (!language) {\n      return '';\n    }\n\n    const singleValue = (value[language] || []).join('');\n\n    if (language === '@none' || language === 'none' || language === 'en') {\n      return singleValue;\n    }\n\n    return {\n      '@language': language,\n      '@value': singleValue,\n    };\n  }\n\n  return languages.map((language) => {\n    return {\n      '@language': language,\n      '@value': (value[language] || []).join(''),\n    };\n  });\n}\n\nfunction parseCanvasTarget(target: any): any {\n  if (Array.isArray(target)) {\n    return target.map((t) => parseCanvasTarget(t));\n  }\n\n  if (typeof target === 'string') {\n    return target;\n  }\n\n  if (target.type && target.type === 'Canvas') {\n    return target.id;\n  }\n\n  return target;\n}\n\nfunction unNestArray<T>(oneOrArray: T[] | undefined, onlyOne = false): T | T[] | undefined {\n  if (!oneOrArray) {\n    return undefined;\n  }\n\n  if (oneOrArray.length > 1 && !onlyOne) {\n    return oneOrArray;\n  }\n  return oneOrArray[0] || undefined;\n}\n\nfunction convertService(service: any) {\n  if (!service) {\n    return undefined;\n  }\n\n  if (typeof service === 'string') {\n    return {\n      '@id': service,\n    };\n  }\n\n  if ('@id' in service) {\n    const newService = { ...service };\n    delete newService['@type'];\n    return newService;\n  }\n\n  // @todo support auth.\n  return {\n    '@context': 'http://iiif.io/api/image/2/context.json',\n    '@id': service.id,\n    profile: `http://iiif.io/api/image/2/profiles/${service.profile}.json`,\n  };\n}\n\nfunction technicalProperties(props: Partial<TechnicalProperties>, type?: string) {\n  return [\n    ['@id', props.id],\n    ['@type', type],\n    ['format', props.format],\n    ['height', props.height],\n    ['width', props.width],\n    ['viewingDirection', props.viewingDirection !== 'left-to-right' ? props.viewingDirection : undefined],\n    // @todo Viewing hint is merged with behavior\n    // ['viewingHint', props.]\n  ];\n}\n\nfunction* descriptiveProperties(prop: Partial<DescriptiveNormalized>): Generator<any, any, any> {\n  const provider = prop.provider ? yield prop.provider[0] : undefined;\n\n  return [\n    ['label', languageString2to3(prop.label)],\n    [\n      'metadata',\n      prop.metadata && prop.metadata.length\n        ? prop.metadata.map((item) => ({\n            label: languageString2to3(item.label) || '',\n            value: languageString2to3(item.value) || '',\n          }))\n        : undefined,\n    ],\n    ['description', languageString2to3(prop.summary)],\n    ['thumbnail', unNestArray(yield prop.thumbnail)],\n    ['navDate', prop.navDate],\n    // @todo these needs consideration if the way provider is parsed changes.\n    ['logo', provider ? unNestArray(provider.logo) : undefined],\n    ['homepage', provider ? provider.homepage : undefined],\n    ['attribution', prop.requiredStatement ? languageString2to3(prop.requiredStatement.value) : undefined],\n  ];\n}\n\nfunction* linkingProperties(prop: Partial<LinkingNormalized>) {\n  return [\n    ['seeAlso', unNestArray(yield prop.seeAlso)],\n    // @todo support more services (like auth)\n    ['service', unNestArray((prop.service || []).map(convertService))],\n    ['rendering', unNestArray(yield prop.rendering)],\n    // @todo part of to within\n    // ['within', unNestArray(yield prop.partOf)],\n    // @todo this may not work completely.\n    ['startCanvas', prop.start ? prop.start.id : undefined],\n  ];\n}\n\nexport const serializeConfigPresentation2: SerializeConfig = {\n  Manifest: function* (entity) {\n    return [\n      ...technicalProperties(entity, 'sc:Manifest'),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      // Structural.\n      // @todo structures\n      [\n        'sequences',\n        [\n          {\n            '@id': `${entity.id}/sequence0`,\n            '@type': 'sc:Sequence',\n            canvases: yield entity.items,\n          },\n        ],\n      ],\n      ['structures', yield entity.structures],\n    ];\n  },\n\n  Canvas: function* (entity) {\n    const paintingPage = yield entity.items;\n    const resources = paintingPage[0];\n    return [\n      // Items.\n      ...technicalProperties(entity, 'sc:Canvas'),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['images', resources ? [resources.resources] : undefined],\n      [\n        'annotations',\n        entity.annotations && entity.annotations.length ? unNestArray(yield entity.annotations) : undefined,\n      ],\n    ];\n  },\n\n  AnnotationPage: function* (entity) {\n    return [\n      ...technicalProperties(entity, 'sc:AnnotationList'),\n      ...(yield* descriptiveProperties(entity)),\n      ['resources', entity.items && entity.items.length ? unNestArray(yield entity.items) : undefined],\n    ];\n  },\n\n  Annotation: function* (entity) {\n    return [\n      ['@id', entity.id],\n      ['@type', 'oa:Annotation'],\n      // This could be improved.\n      ['motivation', 'sc:painting'],\n      ['on', parseCanvasTarget(entity.target)],\n      ['resource', unNestArray(yield entity.body, true)],\n    ];\n  },\n\n  ContentResource: function* (entity: any) {\n    switch (entity.type) {\n      case 'Image':\n        return [\n          // Image properties.\n          ...technicalProperties(entity, 'dctypes:Image'),\n          ...(yield* descriptiveProperties(entity)),\n          ...(yield* linkingProperties(entity)),\n        ];\n      case 'Text':\n      case 'Dataset':\n      default:\n        return [...technicalProperties(entity, undefined), ...(yield* descriptiveProperties(entity))];\n    }\n  },\n\n  AnnotationCollection: function* (entity) {\n    return [\n      // @todo expand properties if they are actually used.\n      ['@id', entity.id],\n      ['@type', 'sc:Layer'],\n      ['label', languageString2to3(entity.label)],\n    ];\n  },\n\n  Collection: function* (entity) {\n    return [\n      ...technicalProperties(entity, 'sc:Collection'),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['members', yield* entity.items],\n    ];\n  },\n\n  Range: function* (entity) {\n    const members = [];\n    const canvases = [];\n\n    if (entity.items) {\n      for (const item of entity.items) {\n        const canvas = yield item;\n        members.push({\n          '@id': item.id,\n          '@type': item.type,\n          label: canvas ? canvas.label : undefined,\n          within: entity.id,\n        });\n        if (item.type === 'Canvas') {\n          canvases.push(item.id);\n        }\n      }\n    }\n\n    return [\n      ...technicalProperties(entity, 'sc:Range'),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['canvases', canvases.length === members.length ? canvases : undefined],\n      ['members', canvases.length !== members.length ? members : undefined],\n    ];\n  },\n};\n","import { SerializeConfig, UNWRAP } from './serialize';\nimport {\n  DescriptiveNormalized,\n  ImageService2,\n  ImageService3,\n  LinkingNormalized,\n  TechnicalProperties,\n} from '@iiif/presentation-3';\n\nfunction technicalProperties(entity: Partial<TechnicalProperties>): Array<[keyof TechnicalProperties, any]> {\n  return [\n    // Technical\n    ['id', !entity.id?.startsWith('vault://') ? entity.id : undefined],\n    ['type', entity.type],\n    ['format', entity.format],\n    ['profile', entity.profile],\n    ['height', entity.height],\n    ['width', entity.width],\n    ['duration', entity.duration || undefined],\n    ['viewingDirection', entity.viewingDirection !== 'left-to-right' ? entity.viewingDirection : undefined],\n    ['behavior', entity.behavior && entity.behavior.length ? entity.behavior : undefined],\n    ['timeMode', entity.timeMode],\n    ['motivation', Array.isArray(entity.motivation) ? entity.motivation[0] : entity.motivation],\n  ];\n}\n\nfunction filterEmpty<T>(item?: T[]): T[] | undefined {\n  if (!item || item.length === 0) {\n    return undefined;\n  }\n  return item;\n}\n\nfunction service2compat(service: ImageService3): ImageService2 | ImageService3 {\n  if (service && service.type && service.type === 'ImageService2') {\n    const { id, type, profile: _profile, ..._service } = service as any;\n\n    const profile =\n      typeof _profile === 'string'\n        ? _profile\n        : Array.isArray(_profile)\n        ? _profile.find((p) => typeof p === 'string')\n        : '';\n\n    return {\n      '@id': id,\n      '@type': type,\n      profile: profile\n        ? profile.startsWith('http')\n          ? profile\n          : `http://iiif.io/api/image/2/${profile}.json`\n        : 'http://iiif.io/api/image/2/level0.json',\n      ..._service,\n    } as any;\n  }\n\n  return service;\n}\n\nfunction filterService2Compat(services?: any[]) {\n  if (!services || services.length === 0) {\n    return undefined;\n  }\n\n  return (services as any[]).map(service2compat);\n}\n\nfunction* descriptiveProperties(\n  entity: Partial<DescriptiveNormalized>\n): Generator<any, any, Array<[keyof DescriptiveNormalized, any]>> {\n  return [\n    ['label', entity.label],\n    ['metadata', filterEmpty(entity.metadata)],\n    ['summary', entity.summary],\n    ['requiredStatement', entity.requiredStatement],\n    ['rights', entity.rights],\n    ['navDate', entity.navDate],\n    ['language', entity.language],\n    // We yield these fully as they are embedded in here.\n    ['thumbnail', filterEmpty(yield entity.thumbnail)],\n    ['placeholderCanvas', yield entity.placeholderCanvas],\n    ['accompanyingCanvas', yield entity.accompanyingCanvas],\n\n    // @todo need to test this one.\n    ['provider', filterEmpty(yield entity.provider)],\n  ];\n}\n\nfunction* linkingProperties(\n  entity: Partial<LinkingNormalized>\n): Generator<any, any, Array<[keyof LinkingNormalized, any]>> {\n  return [\n    ['seeAlso', filterEmpty(yield entity.seeAlso)],\n    ['service', filterService2Compat(entity.service)],\n    ['services', filterService2Compat(entity.services)],\n    ['rendering', filterEmpty(yield entity.rendering)],\n    ['supplementary', filterEmpty(yield entity.supplementary)],\n    ['homepage', filterEmpty(yield entity.homepage)],\n    ['logo', filterEmpty(yield entity.logo)],\n\n    // Don't yield these, they are references.\n    ['partOf', filterEmpty(yield entity.partOf)],\n    ['start', entity.start],\n  ];\n}\n\nexport const serializeConfigPresentation3: SerializeConfig = {\n  Manifest: function* (entity, state, { isTopLevel }) {\n    if (!isTopLevel) {\n      return [\n        // Only a snippet.\n        ...technicalProperties(entity),\n        ...(yield* descriptiveProperties(entity)),\n      ];\n    }\n\n    return [\n      ['@context', 'http://iiif.io/api/presentation/3/context.json'],\n      ...technicalProperties(entity),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['items', yield entity.items],\n      ['structures', filterEmpty(yield entity.structures)],\n      ['annotations', filterEmpty(yield entity.annotations)],\n    ];\n  },\n\n  Canvas: function* (entity) {\n    return [\n      // Items.\n      ...technicalProperties(entity),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['items', yield entity.items],\n      ['annotations', filterEmpty(yield entity.annotations)],\n    ];\n  },\n\n  Agent: function* (entity) {\n    return [\n      //\n      ['id', entity.id],\n      ['type', 'Agent'],\n      ['label', entity.label],\n      ...(yield* linkingProperties(entity as any)),\n    ];\n  },\n\n  AnnotationPage: function* (entity) {\n    const entries = Object.entries(entity)\n      .map(([key, item]) => {\n        return [key, Array.isArray(item) ? filterEmpty(item as any) : item];\n      })\n      .filter(([key, value]) => {\n        return key !== 'items';\n      });\n\n    return [\n      // Any more properties?\n      ...entries,\n      ...(yield* linkingProperties(entity)),\n      ['items', yield entity.items],\n    ];\n  },\n\n  Service: function* (entity) {\n    // Are there other properties on a service?\n    return [[UNWRAP, service2compat(entity as any)]];\n  },\n\n  Annotation: function* (entity) {\n    const entries = Object.entries(entity)\n      .map(([key, item]) => {\n        if (key === 'motivation') {\n          // Annotation non-array items can be added here.\n          return [key, Array.isArray(item) ? item[0] : item];\n        }\n\n        return [key, Array.isArray(item) ? filterEmpty(item as any) : item];\n      })\n      .filter(([key]) => {\n        return key !== 'body';\n      });\n\n    const resolvedBody = yield entity.body;\n\n    return [...entries, ['body', resolvedBody.length === 1 ? resolvedBody[0] : resolvedBody]];\n  },\n\n  ContentResource: function* (entity: any) {\n    return [\n      // Image properties.\n      ...technicalProperties(entity),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['annotations', filterEmpty(yield entity.annotations)],\n      ['items', filterEmpty(yield entity.items)],\n    ];\n  },\n\n  AnnotationCollection: function* (entity) {\n    return [\n      // @todo expand properties if they are actually used.\n      ['id', entity.id],\n      ['type', 'AnnotationCollection'],\n      ['label', entity.label],\n    ];\n  },\n\n  Collection: function* (entity, state, { isTopLevel }) {\n    if (isTopLevel) {\n      return [\n        ['@context', 'http://iiif.io/api/presentation/3/context.json'],\n        ...technicalProperties(entity),\n        ...(yield* descriptiveProperties(entity)),\n        ...(yield* linkingProperties(entity)),\n        ['items', filterEmpty(yield entity.items)],\n      ];\n    }\n    return [...technicalProperties(entity), ...(yield* descriptiveProperties(entity))];\n  },\n\n  Range: function* (entity) {\n    const rangeItems = [];\n\n    for (const item of entity.items) {\n      if (item.type === 'Range') {\n        // Resolve the full range\n        rangeItems.push(yield item);\n      } else {\n        // Just push the reference.\n        // @todo could also push in the label of the item?\n        rangeItems.push(item);\n      }\n    }\n\n    return [\n      ...technicalProperties(entity),\n      ...(yield* descriptiveProperties(entity)),\n      ...(yield* linkingProperties(entity)),\n      ['items', rangeItems],\n      ['annotations', filterEmpty(yield entity.annotations)],\n    ];\n  },\n};\n"],"names":["ensureArray","types","identifyResource","Traverse","technicalProperties","descriptiveProperties","linkingProperties"],"mappings":"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"}