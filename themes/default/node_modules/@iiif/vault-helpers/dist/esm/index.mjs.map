{"version":3,"file":"index.mjs","sources":["../../src/events.ts","../../src/styles.ts","../../node_modules/@atlas-viewer/iiif-image-api/dist/esm/index.mjs","../../src/thumbnail.ts","../../src/i18n.ts","../../node_modules/svg-arc-to-cubic-bezier/modules/index.js","../../node_modules/parse-svg-path/index.js","../../node_modules/abs-svg-path/index.js","../../src/annotation-targets/normalize-svg.ts","../../src/annotation-targets/bezier.ts","../../src/annotation-targets/parse-selector.ts","../../src/annotation-targets/expand-target.ts","../../src/content-state.ts","../../src/painting-annotations/parse-specific-resource.ts","../../src/painting-annotations/helper.ts","../../src/objects.ts","../../src/ranges.ts","../../src/sequences.ts"],"sourcesContent":["import type { Reference } from '@iiif/presentation-3';\nimport type { Vault } from '@iiif/vault';\n\nexport function createEventsHelper(vault: Vault) {\n  return {\n    addEventListener<T>(\n      resource: Reference<any>,\n      event: string,\n      listener: (e: any, resource: T) => void,\n      scope?: string[]\n    ) {\n      if (!resource) {\n        return;\n      }\n\n      vault.setMetaValue<Array<{ callback: any; scope?: string[] }>>(\n        [resource.id, 'eventManager', event],\n        (registeredCallbacks) => {\n          const callbacks = registeredCallbacks || [];\n          for (const registered of callbacks) {\n            if (registered.callback === listener) {\n              // @todo check for scopes matching, very edge-case as scopes should be fixed.\n              return callbacks;\n            }\n          }\n          return [...callbacks, { callback: listener, scope }];\n        }\n      );\n\n      return listener;\n    },\n\n    removeEventListener<T>(resource: Reference<any>, event: string, listener: (e: any, resource: T) => void) {\n      if (!resource) {\n        return;\n      }\n      vault.setMetaValue<Array<{ callback: () => void; scope?: string[] }>>(\n        [resource.id, 'eventManager', event],\n        (registeredCallbacks) => {\n          return (registeredCallbacks || []).filter((registeredCallback) => registeredCallback.callback !== listener);\n        }\n      );\n    },\n\n    getListenersAsProps(resourceOrId: string | Reference<any>, scope?: string[]) {\n      const resource = typeof resourceOrId === 'string' ? { id: resourceOrId } : resourceOrId;\n      if (!resource || !resource.id) {\n        return {};\n      }\n      const hooks = vault.getResourceMeta(resource.id, 'eventManager');\n      const props: any = {};\n      if (hooks && resource) {\n        for (const hook of Object.keys(hooks)) {\n          props[hook] = (e: any) => {\n            const fullResource = vault.get(resource);\n            for (const { callback, scope: _scope } of hooks[hook] || []) {\n              if (!_scope || (scope && _scope.indexOf(scope) !== -1)) {\n                callback(e, fullResource);\n              }\n            }\n          };\n        }\n      }\n      return props;\n    },\n  };\n}\n","import type { Vault } from '@iiif/vault';\nimport { Reference } from '@iiif/presentation-3';\n\nexport type StyleDefinition = Record<string, any>;\n\nexport type StyledHelper<S extends StyleDefinition> = {\n  applyStyles<Style extends StyleDefinition = S>(resource: any, scope: string, styles: Style[string]): void;\n  getAppliedStyles<Style extends StyleDefinition = S>(resource: any): Style | undefined;\n};\n\nexport function createStylesHelper<S extends StyleDefinition>(vault: Vault): StyledHelper<S> {\n  return {\n    applyStyles<Style extends StyleDefinition = S>(\n      resource: string | Reference<any>,\n      scope: string,\n      styles: Style[string]\n    ) {\n      const id = typeof resource === 'string' ? resource : resource.id;\n      return vault.setMetaValue<Style[string]>([id, 'styles', scope], styles);\n    },\n    getAppliedStyles<Style extends StyleDefinition = S>(resource: string | Reference<any>): Style | undefined {\n      const id = typeof resource === 'string' ? resource : resource.id;\n      return vault.getResourceMeta<{ styles: Style }, 'styles'>(id, 'styles');\n    },\n  };\n}\n","function p(e){return e.endsWith(\"info.json\")?e:e.endsWith(\"/\")?`${e}info.json`:`${e}/info.json`}const Y=\"http://library.stanford.edu/iiif/image-api/compliance.html#level0\",F=\"http://library.stanford.edu/iiif/image-api/compliance.html#level1\",v=\"http://library.stanford.edu/iiif/image-api/compliance.html#level2\",q=\"http://library.stanford.edu/iiif/image-api/conformance.html#level0\",O=\"http://library.stanford.edu/iiif/image-api/conformance.html#level1\",z=\"http://library.stanford.edu/iiif/image-api/conformance.html#level2\",ii=\"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0\",A=\"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1\",E=\"http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2\",ei=\"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0\",L=\"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1\",b=\"http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2\",ti=\"http://iiif.io/api/image/1/level0.json\",ri=\"http://iiif.io/api/image/1/profiles/level0.json\",M=\"http://iiif.io/api/image/1/level1.json\",j=\"http://iiif.io/api/image/1/profiles/level1.json\",W=\"http://iiif.io/api/image/1/level2.json\",P=\"http://iiif.io/api/image/1/profiles/level2.json\",ni=\"http://iiif.io/api/image/2/level0.json\",si=\"http://iiif.io/api/image/2/profiles/level0.json\",C=\"http://iiif.io/api/image/2/level1.json\",B=\"http://iiif.io/api/image/2/profiles/level1.json\",N=\"http://iiif.io/api/image/2/level2.json\",R=\"http://iiif.io/api/image/2/profiles/level2.json\",ai=\"level0\",$=\"level1\",H=\"level2\",oi=\"http://iiif.io/api/image/2/level0\",G=\"http://iiif.io/api/image/2/level1\",T=\"http://iiif.io/api/image/2/level2\",k=[T,v,z,E,b,W,P,N,R,H],Q=[...k,G,F,O,A,L,M,j,C,B,$],V=[oi,G,T,Y,F,v,q,O,z,ii,A,E,ei,L,b,ti,ri,M,j,W,P,ni,si,C,B,N,R,ai,$,H],Hi=V,fi={extraFormats:[\"jpg\"],extraQualities:[\"default\"],extraFeatures:[\"sizeByWhListed\"]},li={extraFormats:[\"jpg\"],extraQualities:[\"default\"],extraFeatures:[\"baseUriRedirect\",\"cors\",\"jsonldMediaType\",\"regionByPx\",\"regionSquare\",\"sizeByWhListed\",\"sizeByH\",\"sizeByW\",\"sizeByWh\"]},hi={extraFormats:[\"jpg\",\"png\"],extraQualities:[\"default\"],extraFeatures:[\"baseUriRedirect\",\"cors\",\"jsonldMediaType\",\"regionByPct\",\"regionByPx\",\"regionSquare\",\"rotationBy90s\",\"sizeByWhListed\",\"sizeByConfinedWh\",\"sizeByH\",\"sizeByPct\",\"sizeByW\",\"sizeByWh\"]},D=[\"baseUriRedirect\",\"canonicalLinkHeader\",\"cors\",\"jsonldMediaType\",\"mirroring\",\"profileLinkHeader\",\"regionByPct\",\"regionByPx\",\"regionSquare\",\"rotationArbitrary\",\"rotationBy90s\",\"sizeByConfinedWh\",\"sizeByH\",\"sizeByPct\",\"sizeByW\",\"sizeByWh\",\"sizeUpscaling\",\"sizeByWhListed\",\"sizeByDistortedWh\",\"sizeByForcedWh\"];function ui(e){return k.indexOf(e)!==-1?hi:Q.indexOf(e)!==-1?li:fi}function U(e){const i=e?Array.isArray(e.profile)?e.profile:[e.profile]:[],t={extraQualities:[],extraFormats:[],extraFeatures:[]};for(let r of i)if(typeof r==\"string\"&&(r=ui(r)),!!r){if(r.formats)for(const n of r.formats)t.extraFormats.indexOf(n)===-1&&t.extraFormats.push(n);if(r.qualities)for(const n of r.qualities)t.extraQualities.indexOf(n)===-1&&t.extraQualities.push(n);if(r.supports)for(const n of r.supports)t.extraFeatures.indexOf(n)===-1&&t.extraFeatures.push(n);if(r.maxHeight&&(t.maxHeight=r.maxHeight),r.maxWidth&&(t.maxWidth=r.maxWidth),r.maxArea&&(t.maxArea=r.maxArea),r.extraFormats)for(const n of r.extraFormats)t.extraFormats.indexOf(n)===-1&&t.extraFormats.push(n);if(r.extraQualities)for(const n of r.extraQualities)t.extraQualities.indexOf(n)===-1&&t.extraQualities.push(n);if(r.extraFeatures)for(const n of r.extraFeatures)t.extraFeatures.indexOf(n)===-1&&t.extraFeatures.push(n);r.maxHeight&&(t.maxHeight=r.maxHeight),r.maxWidth&&(t.maxWidth=r.maxWidth),r.maxArea&&(t.maxArea=r.maxArea)}if(e.extraFormats)for(const r of e.extraFormats)t.extraFormats.indexOf(r)===-1&&t.extraFormats.push(r);if(e.extraFeatures)for(const r of e.extraFeatures)t.extraFeatures.indexOf(r)===-1&&t.extraFeatures.push(r);if(e.extraQualities)for(const r of e.extraQualities)t.extraQualities.indexOf(r)===-1&&t.extraQualities.push(r);return t}function ci(e){try{if(e===\"full\")return{full:!0};if(e===\"square\")return{square:!0};const i=e.startsWith(\"pct:\"),r=e.substr(i?4:0).split(\",\").map(n=>parseFloat(n));return{x:r[0],y:r[1],w:r[2],h:r[3],percent:i}}catch{throw new Error(\"Expected 'full', 'square' or 'x,y,w,h'. Found \"+e)}}function di(e){const i={upscaled:!1,max:!1,confined:!1};if(e[0]===\"^\"&&(i.upscaled=!0,e=e.slice(1)),e===\"max\"||e===\"full\")return i.max=!0,i.serialiseAsFull=e===\"full\",i;if(e[0]===\"!\"&&(i.confined=!0,e=e.slice(1)),e[0]===\"p\")return i.percentScale=parseFloat(e.slice(4)),i;const t=e.split(\",\").map(r=>r.trim());return t.length&&(t[0]!==\"\"&&(i.width=parseInt(t[0],10)),t[1]!==\"\"&&(i.height=parseInt(t[1],10))),i}function pi(e){const i={angle:0};if(e[0]===\"!\"&&(i.mirror=!0,e=e.substr(1)),i.angle=parseFloat(e)%360,Number.isNaN(i.angle))throw new Error(`Invalid rotation ${e}`);return i}function gi(e,i=\"\"){const t=e.match(/^(([a-zA-Z]+):\\/\\/([^/]+))?((.*)+)/);if(!t)throw new Error(`Invalid or unknown input ${e}`);const r=t[2],n=t[3];let s=t[4];if(s[0]===\"/\"&&(s=s.substr(1)),i.length>0){if(i[0]===\"/\"&&(i=i.substr(1)),i!==s.substr(0,i.length))throw new Error(`Path does not start with prefix (path: ${s}, prefix: ${i})`);s=s.substr(i.length)}return{scheme:r,server:n,path:s,prefix:i}}function mi(e,i=\"\"){const{path:t,scheme:r,server:n,prefix:s}=gi(e,i),a=t.split(\"/\").reverse(),[o,l,f,u,...I]=a,d=I.reverse().filter(Boolean).join(\"/\");if(a.length===1||o===\"\")return{type:\"base\",scheme:r,server:n,prefix:s,identifier:d};if(o===\"info.json\"){const[,...g]=a;return{type:\"info\",scheme:r,server:n,prefix:s,identifier:g.reverse().filter(Boolean).join(\"/\")}}const c=o.split(\".\");return{type:\"image\",scheme:r,server:n,prefix:s,identifier:d,originalPath:t,region:ci(u),size:di(f),rotation:pi(l),quality:c[0],format:c[1]}}function xi(e){const i=mi(p(e.id));if(i.type!==\"info\")throw new Error(\"Invalid service URL\");const t=U(e);return{identifier:i.identifier,originalPath:\"\",server:i.server,prefix:i.prefix,scheme:i.scheme,type:\"image\",quality:t.extraQualities.indexOf(\"default\")===-1?t.extraQualities[0]:\"default\",region:{full:!0},size:{max:!0,upscaled:!1,confined:!1},format:\"jpg\",rotation:{angle:0}}}function Ii(e,i,t){const r=t.length,n=[];for(let s=0;s<r;s++){const o=t[s].width;n.push(e/o)}return n}function _i(e,i,t){const r=t.length,n=[];for(let s=0;s<r;s++){const a=t[s];n.push({width:Math.floor(e/a),height:Math.floor(i/a)})}return n}function h(e){if(e[\"@id\"])return e[\"@id\"];if(e.id)return e.id}function _(e){if(!e||!e.profile||!h(e))return!1;const i=Array.isArray(e.profile)?e.profile:[e.profile];for(const t of i)if(typeof t==\"string\"&&V.indexOf(t)!==-1)return!0;return!1}function yi(e){if(!_(e))return!1;const i=Array.isArray(e.profile)?e.profile:[e.profile];for(const t of i)if(typeof t==\"string\"){if(Q.indexOf(t)!==-1)return!0}else{const r=[...t.supports||[],...t.extraFeatures||[]];if(r.indexOf(\"regionByPx\")!==-1&&(r.indexOf(\"sizeByW\")!==-1||r.indexOf(\"sizeByWh\")!==-1))return!0}return!1}function wi(e){if(!yi(e))return[];const i=[],t=Array.isArray(e.profile)?e.profile:[e.profile],r=t.length;for(let n=0;n<r;n++){const s=t[n];if(typeof s!=\"string\"&&(s.maxHeight||s.maxWidth))return[{id:h(e),type:\"variable\",minWidth:0,minHeight:0,maxHeight:s.maxHeight||s.maxWidth,maxWidth:s.maxWidth||s.maxHeight}]}if(e.tiles){const n=e.tiles.length;for(let s=0;s<n;s++){const a=e.tiles[s];(a.height||a.width)&&i.push({id:h(e),type:\"variable\",minHeight:0,minWidth:0,maxHeight:a.height||a.width,maxWidth:a.width})}}return i}function J(e){const i=/^.*\\/(full)\\/(((\\d+),(\\d+)?)|max)\\/(\\d+)\\/default\\.(jpg|png|jpeg)$/,t=e.match(i);if(t){const r=t[1],n=parseInt(t[4],10),s=parseInt(t[5],10),a=t[7];if((r===\"max\"||r===\"full\")&&n&&s&&a)return{type:\"fixed\",id:e,height:s,width:n}}return{type:\"unknown\",id:e}}function Si(e){if(e[\"@type\"])return e[\"@type\"];if(e.type)return e.type}function Fi(e){if(typeof e==\"string\")return J(e);const i=Si(e);if(i!==\"Image\"&&i!==\"sc:Image\")return null;const t=e,r=h(t);return r?r&&t.width&&t.height?{id:r,type:\"fixed\",width:t.width,height:t.height,unsafe:!0}:J(r):null}function vi(e){return _(e)?(e&&e.sizes?e.sizes:[]).map(i=>({id:h(e),type:\"fixed-service\",height:i.height,width:i.width})):[]}function Z(e){const i=[],t=e.length;for(let r=0;r<t;r++){const n=vi(e[r]);n.length&&i.push(...n);const s=wi(e[r]);s.length&&i.push(...s)}return i}function K(e){const i=e.service?Array.isArray(e.service)?e.service:[e.service]:[],t=i.length,r=[];for(let n=0;n<t;n++)_(i[n])&&r.push(i[n]);return r}function Oi(e,i=!0,t){const r=[],n=Fi(e);if(n===null)return r;const s=e;if(r.push(n),i&&s.width&&s.height){const a=[],o=K(s);for(const l of o){const f={id:h(l),width:s.width,height:s.height};if(t.canLoadSync(f)){const u=t.loadServiceSync(f);u&&(u.height||(u.height=s.height),u.width||(u.width=s.width),a.push(...Z([u])))}}if(a.length)return r.push(...a),r}return s.service&&r.push(...Z(s.service)),r}function zi({x:e=0,y:i=0,w:t,h:r,full:n,square:s,percent:a}){if(n)return\"full\";if(s)return\"square\";if(typeof t>\"u\"||typeof r>\"u\")throw new Error(\"RegionParameter: invalid region\");const o=`${e},${i},${t},${r}`;return a?`pct:${o}`:o}function Ai({max:e,percentScale:i,upscaled:t,confined:r,width:n,height:s,serialiseAsFull:a}){const o=[];return t&&o.push(\"^\"),e?(o.push(a?\"full\":\"max\"),o.join(\"\")):(r&&o.push(\"!\"),i&&o.push(`pct:${i}`),n&&o.push(`${n}`),o.push(\",\"),s&&o.push(`${s}`),o.join(\"\"))}function Ei(e){return`${e.mirror?\"!\":\"\"}${(e.angle||0)%360}`}var Gi=Object.defineProperty,Ti=Object.defineProperties,ki=Object.getOwnPropertyDescriptors,Li=Object.getOwnPropertySymbols,Qi=Object.prototype.hasOwnProperty,Vi=Object.prototype.propertyIsEnumerable,bi=(e,i,t)=>i in e?Gi(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t,y=(e,i)=>{for(var t in i||(i={}))Qi.call(i,t)&&bi(e,t,i[t]);if(Li)for(var t of Li(i))Vi.call(i,t)&&bi(e,t,i[t]);return e},w=(e,i)=>Ti(e,ki(i));function Mi(e,i){const t=e.prefix.startsWith(\"/\")?e.prefix.substr(1):e.prefix,r=`${e.scheme}://${e.server}/${t?`${t}/`:\"\"}${e.identifier}`;if(e.type===\"base\")return r;if(e.type===\"info\")return`${r}/info.json`;let{region:n,size:s,rotation:a,format:o,quality:l}=e;if(i){const f=i[\"@context\"]?Array.isArray(i[\"@context\"])?i[\"@context\"]:[i[\"@context\"]]:[],u=f.indexOf(\"http://iiif.io/api/image/2/context.json\")!==-1,I=f.indexOf(\"http://iiif.io/api/image/3/context.json\")!==-1;if((s.width===i.width&&!s.height||s.height===i.height&&!s.width||s.width===i.width&&s.height===i.height)&&(s=w(y({},s),{max:!0})),u&&(s.max&&!s.serialiseAsFull&&(s=w(y({},s),{serialiseAsFull:!0})),!s.max&&s.width&&s.height&&(s=w(y({},s),{height:void 0}))),I&&(s.max&&s.serialiseAsFull&&(s=w(y({},s),{serialiseAsFull:!1})),s.width&&!s.height&&i.width&&i.height)){const d=i.height/i.width;s=w(y({},s),{height:Math.ceil(s.width*d)})}}return[r,zi(n),Ai(s),Ei(a),`${l}.${o}`].filter(Boolean).join(\"/\")}function S(e,i,t){const r=xi({id:p(h(e)),profile:\"level2\",type:\"ImageService2\"});if(r.type!==\"image\")throw new Error(\"Invalid service\");return r.size.max=!1,r.size.width=i,r.size.height=t,{id:Mi(r),type:\"fixed\",width:i,height:t||e.height/(e.width||1)*i,unsafe:e.width>i}}function m(e){const i=e.replace(/(https?:\\/\\/)?(www.)?/i,\"\");return i.indexOf(\"/\")!==-1?i.split(\"/\")[0]:i}function Di(e){if(!e.width||!e.height)return null;if(e.tiles){const i=e.tiles.sort((r,n)=>Math.max(...n.scaleFactors)-Math.max(...r.scaleFactors)),t=i.length;for(let r=0;r<t;r++){const n=i[r],s=n.width;if(!s)continue;const a=n.scaleFactors.length,o=n.scaleFactors.sort();for(let l=0;l<a;l++){const f=o[l];if(e.width/f<=s&&e.height/f<=s)return{id:h(e),type:\"fixed-service\",width:e.width/f|0,height:e.height/f|0}}}}return null}function X(e,i){if(!_(e))return[!1,\"Not a valid image service\"];i.extraFeatures=i.extraFeatures?i.extraFeatures:[];const t=U(e);if(i.exactSize){let r=!1;if(e.sizes)for(const n of e.sizes)n.width&&n.width===i.exactSize.width&&(D.indexOf(\"sizeByW\")!==-1||n.height&&n.height===i.exactSize.height)&&(r=!0),n.height&&n.height===i.exactSize.height&&(D.indexOf(\"sizeByH\")!==-1||n.width&&n.width===i.exactSize.width)&&(r=!0);r||(i.maxWidth=Math.max(i.maxWidth||0,i.exactSize.width||0)||void 0,i.maxHeight=Math.max(i.maxHeight||0,i.exactSize.height||0)||void 0,i.maxArea=Math.max(i.maxArea||0,(i.exactSize.width&&i.exactSize.height?i.exactSize.width*i.exactSize.height:i.maxArea)||0)||void 0,!i.exactSize.height&&i.exactSize.width?i.extraFeatures.indexOf(\"sizeByW\")===-1&&i.extraFeatures.push(\"sizeByW\"):!i.exactSize.width&&i.exactSize.height&&i.extraFeatures.indexOf(\"sizeByH\")===-1&&i.extraFeatures.push(\"sizeByH\"))}if(i.maxArea&&t.maxArea&&i.maxArea>t.maxArea)return[!1,`Max area is ${t.maxArea}`];if(i.maxWidth&&t.maxWidth&&i.maxWidth>t.maxWidth)return[!1,`Max width is ${t.maxWidth}`];if(i.maxHeight&&t.maxHeight&&i.maxHeight>t.maxHeight)return[!1,`Max height is ${t.maxHeight}`];if(i.extraFeatures){const r=[];for(const n of i.extraFeatures)t.extraFeatures.indexOf(n)===-1&&r.push(n);if(r.length)return[!1,`Missing features: ${r.join(\", \")}`]}if(i.extraFormats){const r=[];for(const n of i.extraFormats)t.extraFormats.indexOf(n)===-1&&r.push(n);if(r.length)return[!1,`Missing formats: ${r.join(\", \")}`]}if(i.extraQualities){const r=[];for(const n of i.extraQualities)t.extraQualities.indexOf(n)===-1&&r.push(n);if(r.length)return[!1,`Missing qualities: ${r.join(\", \")}`]}return[!0]}function Ui(e,i){return X(e,{extraFormats:[i]})}function Ji(e,i){if(i.type!==\"image\")return[!0];const t=[];i.rotation.mirror&&t.push(\"mirroring\"),i.region.percent&&t.push(\"regionByPct\"),i.region.square?t.push(\"regionSquare\"):i.region.full||t.push(\"regionByPx\"),i.rotation.angle&&(i.rotation.angle%90?t.push(\"rotationArbitrary\"):t.push(\"rotationBy90s\")),i.size.confined&&t.push(\"sizeByConfinedWh\"),!i.size.width&&i.size.height&&t.push(\"sizeByH\"),i.size.percentScale&&t.push(\"sizeByPct\"),(e.sizes||[]).find(a=>a.width===i.size.width&&!i.size.height||a.height===i.size.height&&!i.size.width||a.height===i.size.height&&a.width===i.size.width)?t.push(\"sizeByWhListed\"):(i.size.width&&!i.size.height&&t.push(\"sizeByW\"),i.size.width&&i.size.height&&t.push(\"sizeByWh\")),i.size.upscaled&&t.push(\"sizeUpscaling\");const[n,s]=X(e,{extraFeatures:t,extraQualities:[i.quality],extraFormats:[i.format],exactSize:i.size});return n?[!0]:[!1,s]}function ji(e,i,t){const r=e.width?e.width:e.maxWidth;return t.height<=e.maxHeight&&t.width<=e.maxWidth&&t.height>=e.minHeight&&t.width>=e.minWidth&&(!i||Math.abs(t.width-r)<Math.abs(i.width-r))}function Wi(e,i){const t=[],r=Object.assign({unsafeImageService:!1,atAnyCost:!0,fallback:!0,minHeight:64,minWidth:64,maxHeight:1/0,maxWidth:1/0,returnAllOptions:!1,preferFixedSize:!1,allowUnsafe:!1,explain:!1,height:0,width:0},e),n=[],s=[];let a=null;const o=(f,u)=>{if(ji(r,u,f)){if(r.preferFixedSize&&f.unsafe){s.push(f);return}r.returnAllOptions&&u&&s.push(u),a=f}else r.returnAllOptions&&s.push(f)},l=i.length;for(let f=0;f<l;f++){const u=i[f](),I=u.length;for(let d=0;d<I;d++){const c=u[d];if(c.type===\"unknown\"&&r.atAnyCost&&n.push(c),c.type===\"fixed\"&&(c.unsafe?n.push(c):o(c,a)),c.type===\"fixed-service\")if(r.unsafeImageService){const g=S(c,r.width,r.height);o(g,a)}else{const g=S(c,c.width,c.height);o(g,a)}if(c.type===\"variable\"&&c.maxWidth){const g=S({id:c.id,type:\"fixed-service\",width:c.maxWidth,height:c.maxWidth},c.maxWidth);o(g,a)}}if(a&&!r.returnAllOptions){if(a.unsafe||r.allowUnsafe)continue;break}}return r.atAnyCost&&s.length===0?{best:a||n[0],fallback:n.slice(1),log:t}:r.returnAllOptions?{best:r.atAnyCost?a||s[0]||n[0]:a||s[0],fallback:[...s,...n],log:t}:{best:a||s[0]||null,fallback:a?s:s.slice(1),log:t}}var Zi=Object.defineProperty,Ki=Object.defineProperties,Xi=Object.getOwnPropertyDescriptors,Pi=Object.getOwnPropertySymbols,Yi=Object.prototype.hasOwnProperty,qi=Object.prototype.propertyIsEnumerable,Ci=(e,i,t)=>i in e?Zi(e,i,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[i]=t,ie=(e,i)=>{for(var t in i||(i={}))Yi.call(i,t)&&Ci(e,t,i[t]);if(Pi)for(var t of Pi(i))qi.call(i,t)&&Ci(e,t,i[t]);return e},ee=(e,i)=>Ki(e,Xi(i));function Bi(e,i,t){const r=e>i?e:i,n=t.length,s=[];for(let a=0;a<n;a++){const o=t[a];let l=o.scaleFactors[0],f=r/l;const u=[l];for(;f>=o.width;)l=l*2,u.push(l),f=f/2;s.push(ee(ie({},o),{scaleFactors:u}))}return s}function Ni(e,i){if(e.length!==i.length)return!1;if(e.length===0&&i.length===0)return!0;const t=e.length;let r=!0;for(let s=0;s<t;s++){const a=e[s],o=i[s];if(a.width!==o.width||a.height!==o.height){r=!1;break}}if(r)return!0;let n=0;for(let s=0;s<t;s++)for(let a=0;a<t;a++)if(e[s].width===i[a].width&&e[s].height===i[a].height){n++;break}return n===t}function Ri(e){if(e&&e.profile){const i=e.profile;if(i){const t=Array.isArray(i)?i:[i];return t.includes(\"level0\")||t.includes(\"http://iiif.io/api/image/2/level0.json\")||t.includes(\"http://iiif.io/api/image/1/level0.json\")||t.includes(\"http://iiif.io/api/image/1/profiles/level0.json\")}}return!1}var x=(e,i,t)=>new Promise((r,n)=>{var s=l=>{try{o(t.next(l))}catch(f){n(f)}},a=l=>{try{o(t.throw(l))}catch(f){n(f)}},o=l=>l.done?r(l.value):Promise.resolve(l.value).then(s,a);o((t=t.apply(e,i)).next())});class $i{constructor(){this.config={verificationsRequired:1,approximateServices:!0,enableFetching:!0,disableThrottling:!1},this.fetchingCount=0,this.imageServices={},this.knownImageServers={}}setConfig(i){Object.assign(this.config,i)}sample(i,t,r=!0){const n=m(h(i)),s=p(h(i)),a=this.knownImageServers[n];return this.imageServices[s]=Object.assign(i,{real:!0}),!a&&i.tiles&&!Ri(i)?(this.knownImageServers[n]={verifications:0,malformed:!1,root:n,preLoaded:r,sampledId:h(i),verified:!1,server:null,result:{context:i[\"@context\"]||[],sampledProfile:i.profile,resourceServiceRatio:t&&i.height?t.height/i.height:1,sampledSizes:i.sizes||[],sizeRatios:Ii(i.width,i.height,i.sizes||[]),sampledTiles:i.tiles||[]}},!0):this.verify(i)}preLoad(i,t=!0){this.knownImageServers[i.root]=i,t&&(this.knownImageServers[i.root].malformed=!1,this.knownImageServers[i.root].verifications=this.config.verificationsRequired)}predict(i,t=!1,r=!1){const n=i==null?void 0:i.source,s=m(h(i)),a=this.knownImageServers[s];if(!a||!a.result||!r&&(a.malformed||a.verifications<this.config.verificationsRequired)||Ri(i.source))return null;const o=p(h(i));return this.imageServices[o]||(this.imageServices[o]={\"@context\":a.result.context,\"@id\":h(i),id:h(i),protocol:\"http://iiif.io/api/image\",tiles:(n==null?void 0:n.tiles)||Bi(i.width,i.height,a.result.sampledTiles),sizes:(n==null?void 0:n.sizes)||_i(Math.round(i.width/a.result.resourceServiceRatio),Math.round(i.height/a.result.resourceServiceRatio),a.result.sizeRatios),profile:(n==null?void 0:n.profile)||a.result.sampledProfile,height:(n==null?void 0:n.height)||i.height,width:(n==null?void 0:n.width)||i.width,real:!1}),this.imageServices[o]}getThumbnailFromResource(i,t){return x(this,arguments,function*(r,n,s=!0,a=[]){const o=yield this.getImageCandidates(r,s);return Wi(n,[()=>a,()=>o])})}getImageCandidates(i,t=!0){return x(this,null,function*(){const r=i;if(t&&r.height&&r.width){const n=K(r);for(const s of n){const a={id:h(s),width:s.width?s.width:r.width,height:s.height?s.height:r.height,source:s};yield this.loadService(a)}}return Oi(i,t,this)})}verify(i){return x(this,null,function*(){const t=this.predict(i,!1,!0),r=yield this.fetchService(h(i));if(!t)return!1;const n=t.height===r.height&&t.width===r.width&&t[\"@context\"]===r[\"@context\"]&&Ni(t.sizes||[],r.sizes||[]);if(n){const s=m(h(i));this.knownImageServers[s].verifications+=1,this.knownImageServers[s].verifications>=this.config.verificationsRequired&&(this.knownImageServers[s].verified=!0)}return n})}canLoadSync(i){const t=typeof i==\"string\"?i:h(i),r=p(t);if(this.imageServices[r])return!0;const n=this.knownImageServers[m(t)];return n&&!n.malformed&&n.verifications>=this.config.verificationsRequired}markAsMalformed(i){return x(this,null,function*(){return this.knownImageServers[m(h(i))].malformed=!0,this.loadService(i,!0)})}fetchService(i,t=!1){return x(this,null,function*(){const r=p(i);if(this.imageServices[r]&&(!t||this.imageServices[r].real))return this.imageServices[r];if(!this.config.enableFetching)throw new Error(\"Fetching is not enabled\");const n=yield this.fetch(r).then(s=>s.json());return!n.id&&n[\"@id\"]&&(n.id=n[\"@id\"]),n.id!==i&&(n.id=i,n[\"@id\"]&&(n[\"@id\"]=i)),this.imageServices[r]=Object.assign(n,{real:!0}),this.imageServices[r]})}fetch(i,t){return x(this,null,function*(){return fetch(i,t)})}loadService(i,t=!1){return x(this,null,function*(){if(!this.config.disableThrottling){let s=!0;for(;s;)if(this.fetchingCount>=this.config.verificationsRequired)yield new Promise(a=>setTimeout(a,500));else{s=!1;break}}const r=this.knownImageServers[m(h(i))];if(r&&!r.malformed&&!t){yield r.result;const s=this.loadServiceSync(i);if(s)return s}this.fetchingCount++;const n=yield this.fetchService(h(i),t);return this.fetchingCount--,n.real&&this.sample(n,i),n})}loadServiceSync(i){const t=p(h(i));return this.imageServices[t]?this.imageServices[t]:this.predict(i)}}const te=new $i;export{ti as IIIF_1_IMAGE_LEVEL_0,ri as IIIF_1_IMAGE_LEVEL_0_PROFILE,M as IIIF_1_IMAGE_LEVEL_1,j as IIIF_1_IMAGE_LEVEL_1_PROFILE,W as IIIF_1_IMAGE_LEVEL_2,P as IIIF_1_IMAGE_LEVEL_2_PROFILE,ni as IIIF_2_IMAGE_LEVEL_0,oi as IIIF_2_IMAGE_LEVEL_0_NO_JSON,si as IIIF_2_IMAGE_LEVEL_0_PROFILE,C as IIIF_2_IMAGE_LEVEL_1,G as IIIF_2_IMAGE_LEVEL_1_NO_JSON,B as IIIF_2_IMAGE_LEVEL_1_PROFILE,N as IIIF_2_IMAGE_LEVEL_2,T as IIIF_2_IMAGE_LEVEL_2_NO_JSON,R as IIIF_2_IMAGE_LEVEL_2_PROFILE,ai as IIIF_3_IMAGE_LEVEL_0,$ as IIIF_3_IMAGE_LEVEL_1,H as IIIF_3_IMAGE_LEVEL_2,$i as ImageServiceLoader,ii as STANFORD_IIIF_1_IMAGE_COMPLIANCE_0,A as STANFORD_IIIF_1_IMAGE_COMPLIANCE_1,E as STANFORD_IIIF_1_IMAGE_COMPLIANCE_2,ei as STANFORD_IIIF_1_IMAGE_CONFORMANCE_0,L as STANFORD_IIIF_1_IMAGE_CONFORMANCE_1,b as STANFORD_IIIF_1_IMAGE_CONFORMANCE_2,Y as STANFORD_IIIF_IMAGE_COMPLIANCE_0,F as STANFORD_IIIF_IMAGE_COMPLIANCE_1,v as STANFORD_IIIF_IMAGE_COMPLIANCE_2,q as STANFORD_IIIF_IMAGE_CONFORMANCE_0,O as STANFORD_IIIF_IMAGE_CONFORMANCE_1,z as STANFORD_IIIF_IMAGE_CONFORMANCE_2,p as canonicalServiceUrl,U as combineProfiles,xi as createImageServiceRequest,D as extraFeatures,Ii as extractFixedSizeScales,_i as fixedSizesFromScales,wi as getCustomSizeFromService,Fi as getFixedSizeFromImage,vi as getFixedSizesFromService,h as getId,Oi as getImageCandidates,Z as getImageCandidatesFromService,S as getImageFromTileSource,m as getImageServerFromId,K as getImageServices,Di as getSmallestScaleFactorAsSingleImage,Si as getType,te as imageServiceLoader,V as imageServiceProfiles,Mi as imageServiceRequestToString,Ui as imageServiceSupportsFormat,Ji as imageServiceSupportsRequest,J as inferSizeFromUrl,ji as isBestMatch,_ as isImageService,fi as level0,Hi as level0Support,li as level1,Q as level1Support,hi as level2,k as level2Support,ui as levelToProfile,mi as parseImageServiceRequest,gi as parseImageServiceUrl,ci as parseRegionParameter,pi as parseRotationParameter,di as parseSizeParameter,Wi as pickBestFromCandidates,zi as regionParameterToString,Ei as rotationParameterToString,Bi as sampledTilesToTiles,Ai as sizeParameterToString,Ni as sizesMatch,X as supports,yi as supportsCustomSizes};\n","import {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  ChoiceBody,\n  CollectionItemSchemas,\n  CollectionNormalized,\n  ContentResource,\n  ManifestNormalized,\n  Reference,\n} from '@iiif/presentation-3';\nimport { Vault } from '@iiif/vault';\nimport {\n  FixedSizeImage,\n  FixedSizeImageService,\n  getFixedSizeFromImage,\n  ImageCandidate,\n  ImageCandidateRequest,\n  ImageServiceLoader,\n  UnknownSizeImage,\n  VariableSizeImage,\n} from '@atlas-viewer/iiif-image-api';\n\nexport function createThumbnailHelper(vault: Vault, dependencies: { imageServiceLoader?: ImageServiceLoader } = {}) {\n  const imageServiceLoader = dependencies.imageServiceLoader || new ImageServiceLoader();\n\n  async function getBestThumbnailAtSize(\n    input:\n      | string\n      | Reference<CollectionItemSchemas>\n      | Reference<'Collection'>\n      | Reference<'Manifest'>\n      | Reference<'Canvas'>\n      | Reference<'Annotation'>\n      | Reference<'AnnotationPage'>\n      | Reference<'ContentResource'>\n      | CollectionNormalized\n      | ManifestNormalized\n      | CanvasNormalized\n      | AnnotationNormalized\n      | AnnotationPageNormalized\n      | ContentResource,\n    request: ImageCandidateRequest,\n    dereference?: boolean,\n    candidates: Array<ImageCandidate> = [],\n    dimensions?: { width: number; height: number }\n  ): Promise<{\n    best: null | undefined | FixedSizeImage | FixedSizeImageService | VariableSizeImage | UnknownSizeImage;\n    fallback: Array<ImageCandidate>;\n    log: string[];\n  }> {\n    if (typeof input === 'string') {\n      // Best shot we have.\n      return { best: getFixedSizeFromImage(input as any), fallback: [], log: [] };\n    }\n\n    // Run through from ref, just in case.\n    const fullInput:\n      | string\n      | ManifestNormalized\n      | CollectionNormalized\n      | CanvasNormalized\n      | AnnotationNormalized\n      | AnnotationPageNormalized\n      | ContentResource = vault.get(input as any) as any;\n\n    if (typeof fullInput === 'string') {\n      return { best: getFixedSizeFromImage(fullInput as any), fallback: [], log: [] };\n    }\n\n    switch (fullInput.type) {\n      case 'Annotation': {\n        // Grab the body.\n        const contentResources = fullInput.body;\n        // @todo this could be configuration.\n        const firstContentResources = vault.get<ContentResource>(contentResources[0]);\n        if (dimensions && !(firstContentResources as any).width) {\n          (firstContentResources as any).width = dimensions.width;\n          (firstContentResources as any).height = dimensions.height;\n        }\n\n        return await imageServiceLoader.getThumbnailFromResource(\n          firstContentResources as any,\n          request,\n          dereference,\n          candidates\n        );\n      }\n\n      case 'Canvas': {\n        const canvas = fullInput as CanvasNormalized;\n        // check for thumbnail resource first?\n        if (canvas.thumbnail && canvas.thumbnail.length) {\n          const thumbnail = vault.get<ContentResource>(canvas.thumbnail[0]);\n          const potentialThumbnails = await imageServiceLoader.getImageCandidates(thumbnail as any, dereference);\n          if (potentialThumbnails && potentialThumbnails.length) {\n            candidates.push(...potentialThumbnails);\n          }\n        }\n\n        return getBestThumbnailAtSize(canvas.items[0], request, dereference, candidates, {\n          width: canvas.width,\n          height: canvas.height,\n        });\n      }\n\n      // Unsupported for now.\n      case 'AnnotationPage': {\n        const annotationPage = fullInput as AnnotationPageNormalized;\n        return getBestThumbnailAtSize(annotationPage.items[0], request, dereference, candidates, dimensions);\n      }\n\n      case 'Choice': {\n        const choice: ChoiceBody = fullInput as any;\n        // @todo this could also be configuration, just choosing the first choice.\n        return getBestThumbnailAtSize(choice.items[0] as any, request, dereference, candidates, dimensions);\n      }\n      case 'Collection': {\n        // This one is tricky, as the manifests may not have been loaded. But we will give it a shot.\n        const collection = fullInput as CollectionNormalized;\n        const firstManifest = collection.items[0];\n        return getBestThumbnailAtSize(firstManifest, request, dereference, candidates, dimensions);\n      }\n\n      case 'Manifest': {\n        const manifest = fullInput as ManifestNormalized;\n        const firstCanvas = manifest.items[0];\n        return getBestThumbnailAtSize(firstCanvas, request, dereference, candidates, dimensions);\n      }\n\n      case 'SpecificResource':\n      case 'Image':\n      case 'Dataset':\n      case 'Sound':\n      case 'Text':\n      case 'TextualBody':\n      case 'Video':\n        if (dimensions && !(fullInput as any).width) {\n          (fullInput as any).width = dimensions.width;\n          (fullInput as any).height = dimensions.height;\n        }\n\n        return imageServiceLoader.getThumbnailFromResource(fullInput as any, request, dereference, candidates);\n\n      // Seems unlikely these would appear, but it would be an error..\n      case 'Service': // @todo could do something with vault.\n      case 'Range':\n      case 'AnnotationCollection':\n      case 'CanvasReference':\n      case 'ContentResource':\n        return { best: undefined, fallback: [], log: [] };\n    }\n\n    return { best: undefined, fallback: [], log: [] };\n  }\n\n  return {\n    getBestThumbnailAtSize,\n  };\n}\n","import { InternationalString } from '@iiif/presentation-3';\n\nexport function getClosestLanguage(\n  i18nLanguage: string,\n  languages: string[],\n  i18nLanguages: string[] = [],\n  strictFallback = false\n) {\n  if (!i18nLanguage || !languages || languages.length === 0) {\n    return undefined;\n  }\n\n  // Only one option.\n  if (languages.length === 1) {\n    return languages[0];\n  }\n\n  // Exact match.\n  if (languages.indexOf(i18nLanguage) !== -1) {\n    return i18nLanguage;\n  }\n\n  // Root match (en-us === en)\n  const root = i18nLanguage.indexOf('-') !== -1 ? i18nLanguage.slice(0, i18nLanguage.indexOf('-')) : null;\n  if (root && languages.indexOf(root) !== -1) {\n    return root;\n  }\n\n  // All of the fall backs.\n  for (const lang of i18nLanguages) {\n    if (languages.indexOf(lang) !== -1) {\n      return lang;\n    }\n  }\n\n  if (!strictFallback) {\n    // Inverse root match (en === en-us)\n    const inverseRoot = languages.map((l) => (l.indexOf('-') !== -1 ? l.slice(0, l.indexOf('-')) : null));\n    const inverseIdx = inverseRoot.indexOf(i18nLanguage);\n    if (inverseIdx !== -1) {\n      return languages[inverseIdx];\n    }\n\n    // Inverse root (fallback)\n    for (const lang of i18nLanguages) {\n      const root = lang.indexOf('-') !== -1 ? lang.slice(0, lang.indexOf('-')) : null;\n      const inverseIdx = root ? languages.indexOf(root) : -1;\n      if (inverseIdx !== -1) {\n        return languages[inverseIdx];\n      }\n    }\n  }\n\n  if (languages.indexOf('none') !== -1) {\n    return 'none';\n  }\n\n  // Catch some legacy\n  if (languages.indexOf('@none') !== -1) {\n    return '@none';\n  }\n\n  // Finally, fall back to the first.\n  return languages[0];\n}\n\nexport function buildLocaleString(\n  inputText: string | InternationalString | null | undefined,\n  i18nLanguage: string | undefined,\n  options: {\n    strictFallback?: boolean;\n    defaultText?: string;\n    separator?: string;\n    fallbackLanguages?: string[];\n    closest?: boolean;\n  } = {}\n) {\n  const { strictFallback = false, defaultText = '', separator = '\\n', fallbackLanguages = [], closest } = options;\n  const languages = Object.keys(inputText || {});\n  const language = closest\n    ? i18nLanguage\n    : getClosestLanguage(i18nLanguage as any, languages, fallbackLanguages, strictFallback);\n\n  if (!inputText) {\n    return defaultText;\n  }\n\n  if (typeof inputText === 'string') {\n    return inputText;\n  }\n\n  const candidateText = language ? inputText[language] : undefined;\n  if (candidateText) {\n    // Slightly tolerant of typos in IIIF like: `{\"en\": \"Some value\"}`\n    if (typeof candidateText === 'string') {\n      return candidateText;\n    }\n    return candidateText.join(separator);\n  }\n\n  return '';\n}\n\nexport function getValue(\n  inputText: string | InternationalString | null | undefined,\n  options: { defaultText?: string; separator?: string; fallbackLanguages?: string[] } = {}\n) {\n  return buildLocaleString(inputText, typeof navigator !== 'undefined' ? navigator.language : undefined, options);\n}\n","var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar TAU = Math.PI * 2;\n\nvar mapToEllipse = function mapToEllipse(_ref, rx, ry, cosphi, sinphi, centerx, centery) {\n  var x = _ref.x,\n      y = _ref.y;\n\n  x *= rx;\n  y *= ry;\n\n  var xp = cosphi * x - sinphi * y;\n  var yp = sinphi * x + cosphi * y;\n\n  return {\n    x: xp + centerx,\n    y: yp + centery\n  };\n};\n\nvar approxUnitArc = function approxUnitArc(ang1, ang2) {\n  // If 90 degree circular arc, use a constant\n  // as derived from http://spencermortensen.com/articles/bezier-circle\n  var a = ang2 === 1.5707963267948966 ? 0.551915024494 : ang2 === -1.5707963267948966 ? -0.551915024494 : 4 / 3 * Math.tan(ang2 / 4);\n\n  var x1 = Math.cos(ang1);\n  var y1 = Math.sin(ang1);\n  var x2 = Math.cos(ang1 + ang2);\n  var y2 = Math.sin(ang1 + ang2);\n\n  return [{\n    x: x1 - y1 * a,\n    y: y1 + x1 * a\n  }, {\n    x: x2 + y2 * a,\n    y: y2 - x2 * a\n  }, {\n    x: x2,\n    y: y2\n  }];\n};\n\nvar vectorAngle = function vectorAngle(ux, uy, vx, vy) {\n  var sign = ux * vy - uy * vx < 0 ? -1 : 1;\n\n  var dot = ux * vx + uy * vy;\n\n  if (dot > 1) {\n    dot = 1;\n  }\n\n  if (dot < -1) {\n    dot = -1;\n  }\n\n  return sign * Math.acos(dot);\n};\n\nvar getArcCenter = function getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp) {\n  var rxsq = Math.pow(rx, 2);\n  var rysq = Math.pow(ry, 2);\n  var pxpsq = Math.pow(pxp, 2);\n  var pypsq = Math.pow(pyp, 2);\n\n  var radicant = rxsq * rysq - rxsq * pypsq - rysq * pxpsq;\n\n  if (radicant < 0) {\n    radicant = 0;\n  }\n\n  radicant /= rxsq * pypsq + rysq * pxpsq;\n  radicant = Math.sqrt(radicant) * (largeArcFlag === sweepFlag ? -1 : 1);\n\n  var centerxp = radicant * rx / ry * pyp;\n  var centeryp = radicant * -ry / rx * pxp;\n\n  var centerx = cosphi * centerxp - sinphi * centeryp + (px + cx) / 2;\n  var centery = sinphi * centerxp + cosphi * centeryp + (py + cy) / 2;\n\n  var vx1 = (pxp - centerxp) / rx;\n  var vy1 = (pyp - centeryp) / ry;\n  var vx2 = (-pxp - centerxp) / rx;\n  var vy2 = (-pyp - centeryp) / ry;\n\n  var ang1 = vectorAngle(1, 0, vx1, vy1);\n  var ang2 = vectorAngle(vx1, vy1, vx2, vy2);\n\n  if (sweepFlag === 0 && ang2 > 0) {\n    ang2 -= TAU;\n  }\n\n  if (sweepFlag === 1 && ang2 < 0) {\n    ang2 += TAU;\n  }\n\n  return [centerx, centery, ang1, ang2];\n};\n\nvar arcToBezier = function arcToBezier(_ref2) {\n  var px = _ref2.px,\n      py = _ref2.py,\n      cx = _ref2.cx,\n      cy = _ref2.cy,\n      rx = _ref2.rx,\n      ry = _ref2.ry,\n      _ref2$xAxisRotation = _ref2.xAxisRotation,\n      xAxisRotation = _ref2$xAxisRotation === undefined ? 0 : _ref2$xAxisRotation,\n      _ref2$largeArcFlag = _ref2.largeArcFlag,\n      largeArcFlag = _ref2$largeArcFlag === undefined ? 0 : _ref2$largeArcFlag,\n      _ref2$sweepFlag = _ref2.sweepFlag,\n      sweepFlag = _ref2$sweepFlag === undefined ? 0 : _ref2$sweepFlag;\n\n  var curves = [];\n\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n\n  var sinphi = Math.sin(xAxisRotation * TAU / 360);\n  var cosphi = Math.cos(xAxisRotation * TAU / 360);\n\n  var pxp = cosphi * (px - cx) / 2 + sinphi * (py - cy) / 2;\n  var pyp = -sinphi * (px - cx) / 2 + cosphi * (py - cy) / 2;\n\n  if (pxp === 0 && pyp === 0) {\n    return [];\n  }\n\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var lambda = Math.pow(pxp, 2) / Math.pow(rx, 2) + Math.pow(pyp, 2) / Math.pow(ry, 2);\n\n  if (lambda > 1) {\n    rx *= Math.sqrt(lambda);\n    ry *= Math.sqrt(lambda);\n  }\n\n  var _getArcCenter = getArcCenter(px, py, cx, cy, rx, ry, largeArcFlag, sweepFlag, sinphi, cosphi, pxp, pyp),\n      _getArcCenter2 = _slicedToArray(_getArcCenter, 4),\n      centerx = _getArcCenter2[0],\n      centery = _getArcCenter2[1],\n      ang1 = _getArcCenter2[2],\n      ang2 = _getArcCenter2[3];\n\n  // If 'ang2' == 90.0000000001, then `ratio` will evaluate to\n  // 1.0000000001. This causes `segments` to be greater than one, which is an\n  // unecessary split, and adds extra points to the bezier curve. To alleviate\n  // this issue, we round to 1.0 when the ratio is close to 1.0.\n\n\n  var ratio = Math.abs(ang2) / (TAU / 4);\n  if (Math.abs(1.0 - ratio) < 0.0000001) {\n    ratio = 1.0;\n  }\n\n  var segments = Math.max(Math.ceil(ratio), 1);\n\n  ang2 /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    curves.push(approxUnitArc(ang1, ang2));\n    ang1 += ang2;\n  }\n\n  return curves.map(function (curve) {\n    var _mapToEllipse = mapToEllipse(curve[0], rx, ry, cosphi, sinphi, centerx, centery),\n        x1 = _mapToEllipse.x,\n        y1 = _mapToEllipse.y;\n\n    var _mapToEllipse2 = mapToEllipse(curve[1], rx, ry, cosphi, sinphi, centerx, centery),\n        x2 = _mapToEllipse2.x,\n        y2 = _mapToEllipse2.y;\n\n    var _mapToEllipse3 = mapToEllipse(curve[2], rx, ry, cosphi, sinphi, centerx, centery),\n        x = _mapToEllipse3.x,\n        y = _mapToEllipse3.y;\n\n    return { x1: x1, y1: y1, x2: x2, y2: y2, x: x, y: y };\n  });\n};\n\nexport default arcToBezier;","\nmodule.exports = parse\n\n/**\n * expected argument lengths\n * @type {Object}\n */\n\nvar length = {a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0}\n\n/**\n * segment pattern\n * @type {RegExp}\n */\n\nvar segment = /([astvzqmhlc])([^astvzqmhlc]*)/ig\n\n/**\n * parse an svg path data string. Generates an Array\n * of commands where each command is an Array of the\n * form `[command, arg1, arg2, ...]`\n *\n * @param {String} path\n * @return {Array}\n */\n\nfunction parse(path) {\n\tvar data = []\n\tpath.replace(segment, function(_, command, args){\n\t\tvar type = command.toLowerCase()\n\t\targs = parseValues(args)\n\n\t\t// overloaded moveTo\n\t\tif (type == 'm' && args.length > 2) {\n\t\t\tdata.push([command].concat(args.splice(0, 2)))\n\t\t\ttype = 'l'\n\t\t\tcommand = command == 'm' ? 'l' : 'L'\n\t\t}\n\n\t\twhile (true) {\n\t\t\tif (args.length == length[type]) {\n\t\t\t\targs.unshift(command)\n\t\t\t\treturn data.push(args)\n\t\t\t}\n\t\t\tif (args.length < length[type]) throw new Error('malformed path data')\n\t\t\tdata.push([command].concat(args.splice(0, length[type])))\n\t\t}\n\t})\n\treturn data\n}\n\nvar number = /-?[0-9]*\\.?[0-9]+(?:e[-+]?\\d+)?/ig\n\nfunction parseValues(args) {\n\tvar numbers = args.match(number)\n\treturn numbers ? numbers.map(Number) : []\n}\n","\nmodule.exports = absolutize\n\n/**\n * redefine `path` with absolute coordinates\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction absolutize(path){\n\tvar startX = 0\n\tvar startY = 0\n\tvar x = 0\n\tvar y = 0\n\n\treturn path.map(function(seg){\n\t\tseg = seg.slice()\n\t\tvar type = seg[0]\n\t\tvar command = type.toUpperCase()\n\n\t\t// is relative\n\t\tif (type != command) {\n\t\t\tseg[0] = command\n\t\t\tswitch (type) {\n\t\t\t\tcase 'a':\n\t\t\t\t\tseg[6] += x\n\t\t\t\t\tseg[7] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'v':\n\t\t\t\t\tseg[1] += y\n\t\t\t\t\tbreak\n\t\t\t\tcase 'h':\n\t\t\t\t\tseg[1] += x\n\t\t\t\t\tbreak\n\t\t\t\tdefault:\n\t\t\t\t\tfor (var i = 1; i < seg.length;) {\n\t\t\t\t\t\tseg[i++] += x\n\t\t\t\t\t\tseg[i++] += y\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// update cursor state\n\t\tswitch (command) {\n\t\t\tcase 'Z':\n\t\t\t\tx = startX\n\t\t\t\ty = startY\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tx = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\ty = seg[1]\n\t\t\t\tbreak\n\t\t\tcase 'M':\n\t\t\t\tx = startX = seg[1]\n\t\t\t\ty = startY = seg[2]\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tx = seg[seg.length - 2]\n\t\t\t\ty = seg[seg.length - 1]\n\t\t}\n\n\t\treturn seg\n\t})\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport arcToCurve from 'svg-arc-to-cubic-bezier';\nimport parseSvgPath from 'parse-svg-path';\nimport absSvgPath, {\n  AbsoluteCubicBezierCommand,\n  AbsoluteLineCommand,\n  AbsoluteMoveCommand,\n  AbsoluteQuadraticBezierCommand,\n} from 'abs-svg-path';\n\nexport type NormalizedSvgPathCommand =\n  | AbsoluteMoveCommand\n  | AbsoluteLineCommand\n  | AbsoluteCubicBezierCommand\n  | AbsoluteQuadraticBezierCommand;\n\nexport type NormalizedSvgPathCommandType = 'M' | 'L' | 'C' | 'Q';\n\n/** Parse an SVG path and normalize it so it only contains Moves, Lines and Cubic or Quadratic Bézier curves\n *  in their absolute form. */\nexport function parseAndNormalizeSvgPath(path: string): NormalizedSvgPathCommand[] {\n  const parsed = parseSvgPath(path);\n  const absolute = absSvgPath(parsed);\n\n  let prevCmd: 'M' | 'L' | 'H' | 'V' | 'C' | 'S' | 'Q' | 'T' | 'A' | 'Z' | undefined;\n  let startX = 0;\n  let startY = 0;\n  let bezierX = 0;\n  let bezierY = 0;\n  let quadX: number | undefined;\n  let quadY: number | undefined;\n  let x = 0;\n  let y = 0;\n  const out: NormalizedSvgPathCommand[] = [];\n  for (let i = 0; i < absolute.length; i++) {\n    let seg = absolute[i];\n    const cmd = seg[0];\n    switch (cmd) {\n      case 'M':\n        startX = seg[1];\n        startY = seg[2];\n        break;\n      case 'H':\n        seg = ['L', seg[1], startY];\n        break;\n      case 'V':\n        seg = ['L', startX, seg[1]];\n        break;\n      case 'S':\n        {\n          let cx = x;\n          let cy = y;\n          if (prevCmd === 'C' || prevCmd == 'S') {\n            cx += cx - bezierX;\n            cy += cy - bezierY;\n          }\n          seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]];\n        }\n        break;\n      case 'T':\n        if (prevCmd === 'Q' || prevCmd == 'T') {\n          quadX = x * 2 - quadX!;\n          quadY = y * 2 - quadY!;\n        } else {\n          quadX = x;\n          quadY = y;\n        }\n        seg = ['Q', quadX, quadY, seg[1], seg[2]];\n        break;\n      case 'Q':\n        quadX = seg[1];\n        quadY = seg[2];\n        break;\n      case 'A':\n        {\n          const curves = arcToCurve({\n            px: x,\n            py: y,\n            cx: seg[6],\n            cy: seg[7],\n            rx: seg[1],\n            ry: seg[2],\n            xAxisRotation: seg[3],\n            largeArcFlag: seg[4],\n            sweepFlag: seg[5],\n          });\n          if (!curves.length) {\n            continue;\n          }\n          for (const [j, curve] of curves.entries()) {\n            seg = ['C', curve.x1, curve.y1, curve.x2, curve.y2, curve.x, curve.y];\n            if (j < curves.length - 1) {\n              out.push(seg);\n            }\n          }\n          // FIXME: Why do we need this cast?\n          seg = seg as NormalizedSvgPathCommand;\n        }\n        break;\n      case 'Z':\n        seg = ['L', startX, startY];\n        break;\n    }\n\n    prevCmd = cmd;\n    x = seg[seg.length - 2] as number;\n    y = seg[seg.length - 1] as number;\n    if (['C', 'Q', 'A'].indexOf(cmd) > -1) {\n      bezierX = seg[seg.length - 4] as number;\n      bezierY = seg[seg.length - 3] as number;\n    } else {\n      bezierX = x;\n      bezierY = y;\n    }\n    out.push(seg);\n  }\n\n  return out;\n}\n","/** Code to \"flatten\" quadratic and cubic Bézier curves to polylines.\n *\n * All code in this module is based on JavaScript code by Raph Levien, published on his blog at\n * https://raphlinus.github.io/.\n * I merely changed the structure a bit, removed some unneeded parts and added some comments and type hints.\n *\n * Flattening of quadratic Bézier curves:\n * - Article: https://raphlinus.github.io/graphics/curves/2019/12/23/flatten-quadbez.html\n * - Code: https://github.com/raphlinus/raphlinus.github.io/blob/master/_posts/2019-12-23-flatten-quadbez.md?plain=1#L73-L212\n *\n * Flattening of cubic Bézier curves: https://levien.com/tmp/flatten.html\n *\n * Note that the code in this module has a different license than the rest of the package,\n * due to the inclusion of Apache-licensed third party code.\n *\n * @license\n * Copyright 2022 Johannes Baiter <johannes.baiter@gmail.com>\n * Copyright 2019, 2022 Raph Levien <raph.levien@gmail.com>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type Point = { x: number; y: number };\n\nexport function flattenQuadraticBezier(start: Point, control: Point, end: Point, tolerance = 1): Point[] {\n  return new QuadraticBezier(start, control, end).subdivide(tolerance);\n}\n\nexport function flattenCubicBezier(\n  start: Point,\n  startControl: Point,\n  end: Point,\n  endControl: Point,\n  tolerance = 1\n): Point[] {\n  return new CubicBezier(\n    new Float64Array([start.x, start.y, startControl.x, startControl.y, end.x, end.y, endControl.x, endControl.y])\n  ).subdivide(tolerance);\n}\n\nfunction hypot2(p: Point): number {\n  return p.x * p.x + p.y * p.y;\n}\n\n// Compute an approximation to int (1 + 4x^2) ^ -0.25 dx\nfunction approx_myint(x: number): number {\n  const d = 0.67;\n  return x / (1 - d + Math.pow(Math.pow(d, 4) + 0.25 * x * x, 0.25));\n}\n\n// Approximate the inverse of `approx_myint`\nfunction approx_inv_myint(x: number): number {\n  const b = 0.39;\n  return x * (1 - b + Math.sqrt(b * b + 0.25 * x * x));\n}\n\n// Parameters for a basic parabola corresponding to a quadratic bézier curve\ntype QuadraticBezierBasicParams = {\n  x0: number;\n  x2: number;\n  scale: number;\n  cross: number;\n};\n\nclass QuadraticBezier {\n  start: Point;\n  control: Point;\n  end: Point;\n\n  constructor(start: Point, control: Point, end: Point) {\n    this.start = start;\n    this.control = control;\n    this.end = end;\n  }\n\n  eval(t: number): Point {\n    const mt = 1 - t;\n    return {\n      x: this.start.x * mt * mt + 2 * this.control.x * mt * t + this.end.x * t * t,\n      y: this.start.y * mt * mt + 2 * this.control.y * mt * t + this.end.y * t * t,\n    };\n  }\n\n  mapToBasic(): QuadraticBezierBasicParams {\n    const { x: x0, y: y0 } = this.start;\n    const { x: x1, y: y1 } = this.control;\n    const { x: x2, y: y2 } = this.end;\n\n    // Determine the x values and scaling to map to y=x^2\n    const ddx = 2 * x1 - x0 - x2;\n    const ddy = 2 * y1 - y0 - y2;\n    const u0 = (x1 - x0) * ddx + (y1 - y0) * ddy;\n    const u2 = (x2 - x1) * ddx + (y2 - y1) * ddy;\n    const cross = (x2 - x0) * ddy - (y2 - y0) * ddx;\n    const paramX0 = u0 / cross;\n    const paramX2 = u2 / cross;\n\n    // There's probably a more elegant formulation of this...\n    const scale = Math.abs(cross) / (Math.hypot(ddx, ddy) * Math.abs(paramX2 - paramX0));\n\n    return { x0, x2, scale, cross };\n  }\n\n  subdivide(tolerance: number): Point[] {\n    const params = this.mapToBasic();\n    const a0 = approx_myint(params.x0);\n    const a2 = approx_myint(params.x2);\n    const count = 0.5 * Math.abs(a2 - a0) * Math.sqrt(params.scale / tolerance);\n    const n = Math.ceil(count);\n    const u0 = approx_inv_myint(a0);\n    const u2 = approx_inv_myint(a2);\n    const tValues = [0];\n    for (let i = 1; i < n; i++) {\n      const u = approx_inv_myint(a0 + ((a2 - a0) * i) / n);\n      const t = (u - u0) / (u2 - u0);\n      tValues.push(t);\n    }\n    tValues.push(1);\n    return tValues.map((t) => this.eval(t));\n  }\n}\n\nclass CubicBezier {\n  private c: Float64Array;\n\n  /// Argument is array of coordinate values [x0, y0, x1, y1, x2, y2, x3, y3].\n  constructor(coords: Float64Array) {\n    this.c = coords;\n  }\n\n  weightsum(c0: number, c1: number, c2: number, c3: number): Point {\n    const x = c0 * this.c[0] + c1 * this.c[2] + c2 * this.c[4] + c3 * this.c[6];\n    const y = c0 * this.c[1] + c1 * this.c[3] + c2 * this.c[5] + c3 * this.c[7];\n    return { x, y };\n  }\n\n  eval(t: number): Point {\n    const mt = 1 - t;\n    const c0 = mt * mt * mt;\n    const c1 = 3 * mt * mt * t;\n    const c2 = 3 * mt * t * t;\n    const c3 = t * t * t;\n    return this.weightsum(c0, c1, c2, c3);\n  }\n\n  deriv(t: number): Point {\n    const mt = 1 - t;\n    const c0 = -3 * mt * mt;\n    const c3 = 3 * t * t;\n    const c1 = -6 * t * mt - c0;\n    const c2 = 6 * t * mt - c3;\n    return this.weightsum(c0, c1, c2, c3);\n  }\n\n  // quadratic bezier with matching endpoints and minimum max vector error\n  midpoint_quadbez(): QuadraticBezier {\n    const p1 = this.weightsum(-0.25, 0.75, 0.75, -0.25);\n    return new QuadraticBezier({ x: this.c[0], y: this.c[1] }, p1, { x: this.c[6], y: this.c[7] });\n  }\n\n  subsegment(t0: number, t1: number): CubicBezier {\n    const c = new Float64Array(8);\n    const p0 = this.eval(t0);\n    const p3 = this.eval(t1);\n    c[0] = p0.x;\n    c[1] = p0.y;\n    const scale = (t1 - t0) / 3;\n    const d1 = this.deriv(t0);\n    c[2] = p0.x + scale * d1.x;\n    c[3] = p0.y + scale * d1.y;\n    const d2 = this.deriv(t1);\n    c[4] = p3.x - scale * d2.x;\n    c[5] = p3.y - scale * d2.y;\n    c[6] = p3.x;\n    c[7] = p3.y;\n    return new CubicBezier(c);\n  }\n\n  // Very fancy subdivision scheme\n  subdivide(tol: number) {\n    const tol1 = 0.1 * tol; // error for subdivision into quads\n    const tol2 = tol - tol1; // error for subdivision of quads into lines\n    const sqrt_tol2 = Math.sqrt(tol2);\n    const err2 = hypot2(this.weightsum(1, -3, 3, -1));\n    const n_quads = Math.ceil(Math.pow(err2 / (432 * tol1 * tol1), 1 / 6));\n    const quads = [];\n    let sum = 0;\n    for (let i = 0; i < n_quads; i++) {\n      const t0 = i / n_quads;\n      const t1 = (i + 1) / n_quads;\n      const quad = this.subsegment(t0, t1).midpoint_quadbez();\n      const params = quad.mapToBasic();\n      const a0 = approx_myint(params.x0);\n      const a2 = approx_myint(params.x2);\n      const scale = Math.sqrt(params.scale);\n      let val = Math.abs(a2 - a0) * scale;\n      if (Math.sign(params.x0) != Math.sign(params.x2)) {\n        // min x value in basic parabola to make sure we don't skip cusp\n        const xmin = sqrt_tol2 / scale;\n        const cusp_val = (sqrt_tol2 * Math.abs(a2 - a0)) / approx_myint(xmin);\n        // I *think* it will always be larger, but just in case...\n        val = Math.max(val, cusp_val);\n      }\n      quads.push({\n        quad: quad,\n        a0: a0,\n        a2: a2,\n        val: val,\n      });\n      sum += val;\n    }\n    const count = (0.5 * sum) / sqrt_tol2;\n    const n = Math.ceil(count);\n    const result = [{ x: this.c[0], y: this.c[1] }];\n    let val = 0; // sum of vals from [0..i]\n    let i = 0;\n    for (let j = 1; j < n; j++) {\n      const target = (sum * j) / n;\n      while (val + quads[i].val < target) {\n        val += quads[i].val;\n        i++;\n      }\n      const a0 = quads[i].a0;\n      const a2 = quads[i].a2;\n      // Note: we can cut down on recomputing these\n      const u0 = approx_inv_myint(a0);\n      const u2 = approx_inv_myint(a2);\n      const a = a0 + ((a2 - a0) * (target - val)) / quads[i].val;\n      const u = approx_inv_myint(a);\n      const t = (u - u0) / (u2 - u0);\n      result.push(quads[i].quad.eval(t));\n    }\n    result.push({ x: this.c[6], y: this.c[7] });\n    return result;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  ParsedSelector,\n  SupportedSelectors,\n  TemporalSelector,\n  SvgSelector,\n  SelectorStyle,\n  SvgShapeType,\n} from './selector-types';\nimport { Selector } from '@iiif/presentation-3';\nimport { NormalizedSvgPathCommand, NormalizedSvgPathCommandType, parseAndNormalizeSvgPath } from './normalize-svg';\nimport { flattenCubicBezier, flattenQuadraticBezier } from './bezier';\n\nconst BOX_SELECTOR =\n  /&?(xywh=)?(pixel:|percent:|pct:)?([0-9]+(?:\\.[0-9]+)?),([0-9]+(?:\\.[0-9]+)?),([0-9]+(?:\\.[0-9]+)?),([0-9]+(?:\\.[0-9]+)?)/;\n\n// Does not support 00:00:00 or 00:00 formats.\nconst TEMPORAL_SELECTOR = /&?(t=)(npt:)?([0-9]+(.[0-9]+)?)?(,([0-9]+(.[0-9]+)?))?/;\n\nconst RGBA_COLOR = /^rgba\\((\\d+),(\\d+),(\\d+),([0-9.]+)\\)$/;\n\nexport function parseSelector(\n  source: Selector | Selector[],\n  { domParser, svgPreprocessor }: { domParser?: DOMParser; svgPreprocessor?: (svg: string) => string } = {}\n): ParsedSelector {\n  if (Array.isArray(source)) {\n    return (source as Array<string | Selector>).reduce(\n      <ParseSelector>(data: ParsedSelector, nextSource: string | Selector) => {\n        const { selector, selectors } = parseSelector(nextSource);\n        if (selector) {\n          if (!data.selector) {\n            data.selector = selector;\n          }\n          data.selectors.push(...selectors);\n        }\n        return data;\n      },\n      {\n        selector: null,\n        selectors: [],\n      } as ParsedSelector\n    );\n  }\n\n  if (!source) {\n    return {\n      selector: null,\n      selectors: [],\n    };\n  }\n\n  if (typeof source === 'string') {\n    const [id, fragment] = source.split('#');\n\n    if (!fragment) {\n      // This is an unknown selector.\n      return {\n        selector: null,\n        selectors: [],\n      };\n    }\n\n    return parseSelector({ type: 'FragmentSelector', value: fragment });\n  }\n\n  if (source.type === 'PointSelector' && (source.t || source.t === 0)) {\n    const selector: TemporalSelector = {\n      type: 'TemporalSelector',\n      temporal: {\n        startTime: source.t,\n      },\n    };\n\n    return {\n      selector,\n      selectors: [selector],\n    };\n  }\n\n  if (source.type === 'FragmentSelector') {\n    const matchBoxSelector = BOX_SELECTOR.exec(source.value);\n    if (matchBoxSelector) {\n      const selector: SupportedSelectors = {\n        type: 'BoxSelector',\n        spatial: {\n          unit: matchBoxSelector[2] === 'percent:' || matchBoxSelector[2] === 'pct:' ? 'percent' : 'pixel',\n          x: parseFloat(matchBoxSelector[3]),\n          y: parseFloat(matchBoxSelector[4]),\n          width: parseFloat(matchBoxSelector[5]),\n          height: parseFloat(matchBoxSelector[6]),\n        },\n      };\n\n      return {\n        selector,\n        selectors: [selector],\n      };\n    }\n\n    const matchTimeSelector = source.value.match(TEMPORAL_SELECTOR);\n    if (matchTimeSelector) {\n      const selector: TemporalSelector = {\n        type: 'TemporalSelector',\n        temporal: {\n          startTime: matchTimeSelector[4] ? parseFloat(matchTimeSelector[4]) : 0,\n          endTime: matchTimeSelector[7] ? parseFloat(matchTimeSelector[7]) : undefined,\n        },\n      };\n\n      return {\n        selector,\n        selectors: [selector],\n      };\n    }\n\n    return {\n      selector: null,\n      selectors: [],\n    };\n  }\n\n  if (source.type === 'SvgSelector' && 'value' in source) {\n    if (!domParser) {\n      if (typeof window !== 'undefined') {\n        domParser = new window.DOMParser();\n      } else {\n        console.warn(\n          'No DOMParser available, cannot parse SVG selector, `points`, `spatial` and `style` will be unavailable and the SVG will not be normalized.'\n        );\n      }\n    }\n    let points: [number, number][] = [];\n    let rect: [number, number, number, number] | undefined;\n    let style: SelectorStyle | undefined;\n    let svg = svgPreprocessor?.(source.value) ?? source.value;\n    let svgShape: SvgShapeType | undefined;\n    if (domParser) {\n      const svgElement: SVGElement | null = domParser\n        .parseFromString(source.value, 'image/svg+xml')\n        .querySelector('svg');\n      if (!svgElement) {\n        console.warn(`Illegal SVG selector: ${source.value}`);\n        return {\n          selector: null,\n          selectors: [],\n        };\n      }\n      const selectorElem = getSelectorElement(svgElement);\n      if (selectorElem) {\n        points = selectorElem.points;\n        svgShape = selectorElem.shapeType;\n        rect = [\n          Math.min(...points.map((p) => p[0])), // llx\n          Math.min(...points.map((p) => p[1])), // lly\n          Math.max(...points.map((p) => p[0])), // urx\n          Math.max(...points.map((p) => p[1])), // ury\n        ];\n        ({ style, svg } = extractStyles(selectorElem.element) ?? { svg });\n      }\n    }\n    const sel: SvgSelector = {\n      type: 'SvgSelector',\n      svg,\n      svgShape,\n      style,\n      points: points.length ? points : undefined,\n      spatial: rect\n        ? { unit: 'pixel', x: rect[0], y: rect[1], width: rect[2] - rect[0], height: rect[3] - rect[1] }\n        : undefined,\n    };\n    return {\n      selector: sel,\n      selectors: [sel],\n    };\n  }\n  return {\n    selector: null,\n    selectors: [],\n  };\n}\n\nexport type SelectorElement = {\n  element: SVGElement;\n  points: [number, number][];\n  shapeType: SvgShapeType;\n};\n\nfunction getShapeTypeFromPath(svgPath: NormalizedSvgPathCommand[]): SvgShapeType {\n  const cmdFrequencies = svgPath\n    .map((seg) => seg[0])\n    .reduce(\n      (acc: Record<NormalizedSvgPathCommandType, number>, cmd) => {\n        acc[cmd] += 1;\n        return acc;\n      },\n      { C: 0, Q: 0, L: 0, M: 0 }\n    );\n  const cmdTypes = new Set(svgPath.map((seg) => seg[0]));\n  if (cmdFrequencies.C > 0 || cmdFrequencies.Q > 0) {\n    return 'path';\n  }\n  if (cmdFrequencies.L > 0 && (cmdTypes.size === 1 || (cmdTypes.size === 2 && cmdTypes.has('M')))) {\n    // Only lines and moves: rectangle, polygon or polyline?\n    if (cmdFrequencies.L === 4) {\n      return 'rect';\n    }\n\n    // Check if the path is closed to decide if we have a polygon or a polyline\n    const lastSeg = svgPath.slice(-1)[0];\n    if (\n      (svgPath[0][0] === 'M' && lastSeg[0] === 'L' && lastSeg[1] == svgPath[0][1] && lastSeg[2] === svgPath[0][2]) ||\n      (lastSeg[1] === 0 && lastSeg[2] === 0)\n    ) {\n      return 'polygon';\n    } else {\n      return 'polyline';\n    }\n  }\n  return 'path';\n}\n\nfunction getSelectorElement(svgElem: SVGElement): SelectorElement | null {\n  for (const element of Array.from(svgElem.children) as SVGElement[]) {\n    switch (element?.tagName.toLowerCase()) {\n      case 'g':\n        {\n          // Check if any of the children in the container can be converted to points\n          const res = getSelectorElement(element as SVGElement);\n          if (res) {\n            return res;\n          }\n        }\n        continue;\n      case 'path': {\n        const p = element.getAttribute('d');\n        if (!p) {\n          continue;\n        }\n        const normalized = parseAndNormalizeSvgPath(p);\n        return { element, points: pathToPoints(normalized), shapeType: getShapeTypeFromPath(normalized) };\n      }\n      case 'circle': {\n        const cx = parseFloat(element.getAttribute('cx') ?? '0');\n        const cy = parseFloat(element.getAttribute('cy') ?? '0');\n        const r = parseFloat(element.getAttribute('r') ?? '0');\n        if (!r) {\n          continue;\n        }\n        const points: [number, number][] = [];\n        // TODO: Get rid of the degree -> radian conversion and use radians from the beginning\n        for (let angle = 0; angle <= 360; angle += 12) {\n          const rad = (angle * Math.PI) / 180;\n          points.push([cx + r * Math.cos(rad), cy + r * Math.sin(rad)]);\n        }\n        return { element, points, shapeType: 'circle' };\n      }\n      case 'ellipse': {\n        const cx = parseFloat(element.getAttribute('cx') ?? '0');\n        const cy = parseFloat(element.getAttribute('cy') ?? '0');\n        const rx = parseFloat(element.getAttribute('rx') ?? '0');\n        const ry = parseFloat(element.getAttribute('ry') ?? '0');\n        if (!rx && !ry) {\n          continue;\n        }\n        const points: [number, number][] = [];\n        for (let angle = 0; angle <= 360; angle += 12) {\n          const t = Math.tan((angle / 360) * Math.PI);\n          const px = (rx * (1 - t ** 2)) / (1 + t ** 2);\n          const py = (ry * 2 * t) / (1 + t ** 2);\n          points.push([cx + px, cy + py]);\n        }\n        return { element, points, shapeType: 'ellipse' };\n      }\n      case 'line': {\n        const x0 = parseFloat(element.getAttribute('x0') ?? '0');\n        const y0 = parseFloat(element.getAttribute('y0') ?? '0');\n        const x1 = parseFloat(element.getAttribute('x1') ?? '0');\n        const y1 = parseFloat(element.getAttribute('y1') ?? '0');\n        if (x0 === x1 && y0 === y1) {\n          continue;\n        }\n        return {\n          element,\n          points: [\n            [x0, y0],\n            [x1, y1],\n          ],\n          shapeType: 'polyline',\n        };\n      }\n      case 'polygon':\n      case 'polyline': {\n        const points =\n          element\n            .getAttribute('points')\n            ?.split(' ')\n            .map((ps) => ps.split(',').map(parseFloat) as [number, number]) ?? [];\n        if (!points.length) {\n          continue;\n        }\n        let shapeType: SvgShapeType = 'polyline';\n        if (element.tagName.toLowerCase() === 'polygon') {\n          // A polygon is a closed path, so the last point is the same as the first.\n          points.push(points[0]);\n          shapeType = 'polygon';\n        }\n        return { element, points, shapeType };\n      }\n      case 'rect': {\n        const x = parseFloat(element.getAttribute('x') ?? '0');\n        const y = parseFloat(element.getAttribute('y') ?? '0');\n        const width = parseFloat(element.getAttribute('width') ?? '0');\n        const height = parseFloat(element.getAttribute('height') ?? '0');\n        if (!width || !height) {\n          continue;\n        }\n        return {\n          element,\n          points: [\n            [x, y],\n            [x + width, y],\n            [x + width, y + height],\n            [x, y + height],\n            [x, y],\n          ],\n          shapeType: 'rect',\n        };\n      }\n      default:\n        // Try next element\n        continue;\n    }\n  }\n  return null;\n}\n\nfunction pathToPoints(normalizedPath: NormalizedSvgPathCommand[]): [number, number][] {\n  const out: [number, number][] = [];\n  for (let i = 0; i < normalizedPath.length; i++) {\n    const startPoint = out[out.length - 1] ?? [0, 0];\n    const seg = normalizedPath[i];\n    switch (seg[0]) {\n      case 'M':\n      case 'L':\n        out.push([seg[1], seg[2]]);\n        continue;\n      case 'C':\n        out.push(\n          ...flattenCubicBezier(\n            { x: startPoint[0], y: startPoint[1] },\n            { x: seg[1], y: seg[2] },\n            { x: seg[3], y: seg[4] },\n            { x: seg[5], y: seg[6] }\n          )\n            .map((p) => [p.x, p.y] as [number, number])\n            .slice(1) // skip first point, already part of output\n        );\n        continue;\n      case 'Q':\n        out.push(\n          ...flattenQuadraticBezier(\n            { x: startPoint[0], y: startPoint[1] },\n            { x: seg[1], y: seg[2] },\n            { x: seg[3], y: seg[4] }\n          )\n            .map((p) => [p.x, p.y] as [number, number])\n            .slice(1) // skip first point, already part of output\n        );\n        continue;\n    }\n  }\n  return out;\n}\n\n/** Extract styling information from SVG selector.\n *\n * Will remove all styling information from the SVG element\n * and normalize `rgba` colors for `fill` and `stroke` to\n * `rgb` and store the opacity in `fillOpacity` and `strokeOpacity`.\n */\nfunction extractStyles(selectorElement: SVGElement): { style?: SelectorStyle; svg: string } | undefined {\n  // TODO: Can this be simplified somehow?\n  const style: SelectorStyle = {};\n  if (selectorElement.hasAttribute('fill')) {\n    style.fill = selectorElement.getAttribute('fill')!;\n    selectorElement.removeAttribute('fill');\n  } else if (selectorElement.style.fill) {\n    style.fill = selectorElement.style.fill;\n  }\n  if (style.fill) {\n    const rgbaMatch = RGBA_COLOR.exec(style.fill);\n    if (rgbaMatch) {\n      style.fillOpacity = parseFloat(rgbaMatch[4]);\n      style.fill = `rgb(${rgbaMatch[1]}, ${rgbaMatch[2]}, ${rgbaMatch[3]})`;\n    }\n  }\n  if (selectorElement.hasAttribute('fill-opacity')) {\n    style.fillOpacity = parseFloat(selectorElement.getAttribute('fill-opacity')!);\n    selectorElement.removeAttribute('fill-opacity');\n  } else if (selectorElement.style.fillOpacity) {\n    style.fillOpacity = parseFloat(selectorElement.style.fillOpacity);\n  }\n\n  if (selectorElement.hasAttribute('stroke')) {\n    style.stroke = selectorElement.getAttribute('stroke')!;\n    selectorElement.removeAttribute('stroke');\n  } else if (selectorElement.style.stroke) {\n    style.stroke = selectorElement.style.stroke;\n  }\n  if (style.stroke) {\n    const rgbaMatch = RGBA_COLOR.exec(style.stroke);\n    if (rgbaMatch) {\n      style.strokeOpacity = parseFloat(rgbaMatch[4]);\n      style.stroke = `rgb(${rgbaMatch[1]}, ${rgbaMatch[2]}, ${rgbaMatch[3]})`;\n    }\n  }\n  if (selectorElement.hasAttribute('stroke-opacity')) {\n    style.strokeOpacity = parseFloat(selectorElement.getAttribute('stroke-opacity')!);\n    selectorElement.removeAttribute('stroke-opacity');\n  } else if (selectorElement.style.strokeOpacity) {\n    style.strokeOpacity = parseFloat(selectorElement.style.strokeOpacity);\n  }\n  if (selectorElement.hasAttribute('stroke-width')) {\n    style.strokeWidth = selectorElement.getAttribute('stroke-width')!;\n    selectorElement.removeAttribute('stroke-width');\n  } else if (selectorElement.style.strokeWidth) {\n    style.strokeWidth = selectorElement.style.strokeWidth;\n  }\n  if (selectorElement.hasAttribute('stroke-dasharray')) {\n    style.strokeDasharray = selectorElement.getAttribute('stroke-dasharray')!;\n    selectorElement.removeAttribute('stroke-dasharray');\n  } else if (selectorElement.style.strokeDasharray) {\n    style.strokeDasharray = selectorElement.style.strokeDasharray;\n  }\n\n  let rootElem: SVGElement | null = selectorElement;\n  while (rootElem.tagName.toLowerCase() !== 'svg') {\n    rootElem = rootElem.parentElement as SVGElement | null;\n    if (rootElem === null) {\n      throw new Error('Could not find root SVG element');\n    }\n  }\n  return { svg: rootElem.outerHTML, style: Object.keys(style).length > 0 ? style : undefined };\n}\n","import { ExternalWebResource, W3CAnnotationTarget } from '@iiif/presentation-3';\nimport { SupportedTarget } from './target-types';\nimport { parseSelector } from './parse-selector';\n\nexport function expandTarget(\n  target: W3CAnnotationTarget | W3CAnnotationTarget[],\n  options: {\n    typeMap?: Record<string, string>;\n    domParser?: DOMParser;\n    svgPreprocessor?: (svg: string) => string;\n  } = {}\n): SupportedTarget {\n  if (Array.isArray(target)) {\n    // Don't support multiple targets for now.\n    return expandTarget(target[0]);\n  }\n\n  if (typeof target === 'string') {\n    const [id, fragment] = target.split('#');\n\n    if (!fragment) {\n      // This is an unknown selector.\n      return {\n        type: 'SpecificResource',\n        source: { id, type: (options.typeMap && (options.typeMap[id] as any)) || 'Unknown' },\n        selector: null,\n        selectors: [],\n      };\n    }\n\n    return expandTarget({\n      type: 'SpecificResource',\n      source: { id, type: 'Unknown' },\n      selector: {\n        type: 'FragmentSelector',\n        value: fragment,\n      },\n    });\n  }\n\n  // @todo, how do we want to support choices for targets.\n  if (\n    target.type === 'Choice' ||\n    target.type === 'List' ||\n    target.type === 'Composite' ||\n    target.type === 'Independents'\n  ) {\n    // we also don't support these, just choose the first.\n    return expandTarget(target.items[0]);\n  }\n\n  if (target.type === 'SpecificResource') {\n    if (target.source.type === 'Canvas' && target.source.partOf && typeof target.source.partOf === 'string') {\n      target.source.partOf = [\n        {\n          id: target.source.partOf,\n          type: 'Manifest',\n        },\n      ];\n    }\n\n    const { selector, selectors } = target.selector\n      ? parseSelector(target.selector, options)\n      : { selector: null, selectors: [] };\n\n    return {\n      type: 'SpecificResource',\n      source: target.source,\n      selector,\n      selectors,\n    };\n  }\n\n  if (target.id) {\n    if ((target as any).type === 'Canvas' && (target as any).partOf && typeof (target as any).partOf === 'string') {\n      (target as any).partOf = [\n        {\n          id: (target as any).partOf,\n          type: 'Manifest',\n        },\n      ];\n    }\n\n    const [id, fragment] = target.id.split('#');\n    if (!fragment) {\n      // This is an unknown selector.\n      return {\n        type: 'SpecificResource',\n        source: {\n          ...(target as any),\n          id,\n        },\n        selector: null,\n        selectors: [],\n      };\n    }\n\n    return expandTarget({\n      type: 'SpecificResource',\n      source: {\n        ...(target as any),\n        id,\n      },\n      selector: {\n        type: 'FragmentSelector',\n        value: fragment,\n      },\n    });\n  }\n\n  return {\n    type: 'SpecificResource',\n    source: target as ExternalWebResource,\n    selector: null,\n    selectors: [],\n  };\n}\n","import { Annotation } from '@iiif/presentation-3';\nimport { expandTarget } from './annotation-targets/expand-target';\nimport { SupportedTarget } from './annotation-targets/target-types';\n\nexport type ContentState =\n  | string\n  | (Annotation & { '@context'?: string })\n  | (StateSource & { '@context'?: string })\n  | Array<string | (Annotation & { '@context'?: string }) | (StateSource & { '@context'?: string })>;\n\nexport type StateSource = {\n  id: string;\n  type: 'Manifest' | 'Canvas' | 'Range';\n  partOf?:\n    | string\n    | { id: string; type: string }\n    | Array<{\n        id: string;\n        type: string;\n      }>;\n};\n\n// Normalised content state?\nexport type NormalisedContentState = {\n  id: string;\n  type: 'Annotation';\n  motivation: ['contentState', ...string[]];\n  target: Array<SupportedTarget>;\n  extensions: Record<string, any>;\n};\n\ntype ValidationResponse = readonly [false, { reason?: string }] | readonly [true];\n\nexport function validateContentState(annotation: ContentState, strict = false): ValidationResponse {\n  // Valid content state.\n  if (typeof annotation === 'string') {\n    if (annotation.startsWith('{')) {\n      try {\n        const parsed = JSON.parse(annotation);\n        return validateContentState(parsed);\n      } catch (err) {\n        return [false, { reason: 'Invalid JSON' }];\n      }\n    }\n    return [true];\n  }\n\n  if (Array.isArray(annotation)) {\n    for (const anno of annotation) {\n      const [valid, reason] = validateContentState(anno);\n      if (!valid && reason) {\n        return [valid, reason] as const;\n      }\n    }\n\n    return [true];\n  }\n\n  if (annotation.type === 'Annotation') {\n    // We are validating the annotation.\n    return [true];\n  }\n\n  if (strict && annotation.type === 'Canvas' && !annotation.partOf) {\n    return [false, { reason: 'Canvas without partOf cannot be loaded' }];\n  }\n\n  return [true];\n}\n\nexport function serialiseContentState(annotation: ContentState): string {\n  return encodeContentState(typeof annotation === 'string' ? annotation : JSON.stringify(annotation));\n}\n\nexport function parseContentState(state: string): ContentState;\nexport function parseContentState(state: string, async: false): ContentState;\nexport async function parseContentState(state: string, async: true): Promise<ContentState>;\nexport function parseContentState(state: string, asyncOrFetcher?: boolean): ContentState | Promise<ContentState> {\n  state = state.trim();\n\n  if (state[0] === '{') {\n    // we might have json.\n    return asyncOrFetcher ? Promise.resolve(JSON.parse(state)) : JSON.parse(state);\n  }\n\n  if (state.startsWith('http')) {\n    if (!asyncOrFetcher) {\n      throw new Error('Cannot fetch remote fetch with async=false in parseContentState');\n    }\n    // resolve.\n    return fetch(state).then((r) => r.json());\n  }\n\n  return parseContentState(decodeContentState(state), asyncOrFetcher as any);\n}\n\nexport function encodeContentState(state: string): string {\n  const uriEncoded = encodeURIComponent(state); // using built in function\n  const base64 = typeof btoa === 'undefined' ? Buffer.from(uriEncoded, 'utf-8').toString('base64') : btoa(uriEncoded); // using built in function\n  const base64url = base64.replace(/\\+/g, '-').replace(/\\//g, '_');\n  return base64url.replace(/=/g, '');\n}\n\nexport function decodeContentState(encodedContentState: string): string {\n  const base64url = restorePadding(encodedContentState);\n  const base64 = base64url.replace(/-/g, '+').replace(/_/g, '/');\n  const base64Decoded = typeof atob === 'undefined' ? Buffer.from(base64, 'base64').toString('utf-8') : atob(base64); // using built in function\n  return decodeURIComponent(base64Decoded).trim(); // using built in function\n}\n\nfunction restorePadding(s: string) {\n  // The length of the restored string must be a multiple of 4\n  const pad = s.length % 4;\n\n  if (pad === 1) {\n    throw new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\n  }\n\n  return s + (pad ? '===='.slice(0, 4 - pad) : '');\n}\n\nexport function normaliseContentState(state: ContentState): NormalisedContentState {\n  if (!state) {\n    throw new Error('Content state is empty');\n  }\n\n  if (!Array.isArray(state)) {\n    // We have multiples.\n    // throw new Error('Content state is an [Array] and not yet supported');\n    state = [state];\n  }\n\n  let annoId = 'vault://virtual-annotation/' + new Date().getTime(); // <-- need a virtual id\n  const motivation = ['contentState'];\n  const targets = [];\n\n  for (const source of state) {\n    if (typeof source === 'string') {\n      // Note: this is unlikely to happen in conjunction with parseContentState()\n      throw new Error('Content state is a [String] type and cannot be inferred');\n    }\n\n    // If we DO have annotation, then this is all we should be returning.\n    if (source.type === 'Annotation') {\n      annoId = source.id;\n      if (Array.isArray(source.motivation)) {\n        for (const singleMotivation of source.motivation) {\n          if (motivation.indexOf(singleMotivation) === -1) {\n            motivation.push(singleMotivation);\n          }\n        }\n      }\n\n      if (Array.isArray(source.target)) {\n        for (const target of source.target) {\n          const expanded = expandTarget(target as any);\n          targets.push(expanded);\n        }\n      } else {\n        const expanded = expandTarget(source.target as any);\n        targets.push(expanded);\n      }\n\n      continue;\n    }\n\n    const target = expandTarget(source as any);\n    targets.push(target);\n  }\n\n  return {\n    id: annoId,\n    type: 'Annotation',\n    motivation: ['contentState', ...((state as any).motivation || [])],\n    target: targets,\n    extensions: {},\n  };\n}\n","import { ContentResource } from '@iiif/presentation-3';\n\nexport function parseSpecificResource(resource: ContentResource) {\n  if (resource.type === 'SpecificResource') {\n    return [resource.source, { selector: resource.selector }];\n  }\n\n  return [resource, { selector: null }];\n}\n","import { Vault } from '@iiif/vault';\nimport {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  ContentResource,\n  IIIFExternalWebResource,\n} from '@iiif/presentation-3';\nimport { Paintables } from './types';\nimport { parseSpecificResource } from './parse-specific-resource';\n\nexport function createPaintingAnnotationsHelper(vault: Vault) {\n  function getAllPaintingAnnotations(canvasOrId: string | CanvasNormalized | undefined | null) {\n    const canvas = canvasOrId\n      ? typeof canvasOrId === 'string'\n        ? vault.get<CanvasNormalized>(canvasOrId)\n        : canvasOrId\n      : null;\n\n    if (!canvas) {\n      return [];\n    }\n    const annotationPages = vault.get<AnnotationPageNormalized>(canvas.items);\n    const flatAnnotations: AnnotationNormalized[] = [];\n    for (const page of annotationPages) {\n      flatAnnotations.push(...vault.get<AnnotationNormalized>(page.items));\n    }\n    return flatAnnotations;\n  }\n\n  function getPaintables(\n    paintingAnnotationsOrCanvas: string | CanvasNormalized | AnnotationNormalized[],\n    enabledChoices: string[] = []\n  ): Paintables {\n    const paintingAnnotations = Array.isArray(paintingAnnotationsOrCanvas)\n      ? paintingAnnotationsOrCanvas\n      : getAllPaintingAnnotations(paintingAnnotationsOrCanvas);\n\n    const types: string[] = [];\n    let choice: Paintables['choice'] = null;\n    const items: Paintables['items'] = [];\n\n    for (const annotation of paintingAnnotations) {\n      if (annotation.type !== 'Annotation') {\n        throw new Error(`getPaintables() accept either a canvas or list of annotations`);\n      }\n      const bodies = vault.get<ContentResource>(annotation.body);\n      for (const unknownBody of bodies) {\n        const [body, { selector }] = parseSpecificResource(unknownBody);\n        const type = (body.type || 'unknown').toLowerCase();\n\n        // Choice\n        if (type === 'choice') {\n          const nestedBodies = vault.get<ContentResource>(body.items) as ContentResource[];\n\n          // Which are active? By default, the first, but we could push multiple here.\n          const selected = enabledChoices.length\n            ? enabledChoices.map((cid) => nestedBodies.find((b) => b.id === cid)).filter(Boolean)\n            : [nestedBodies[0]];\n\n          if (selected.length === 0) {\n            selected.push(nestedBodies[0]);\n          }\n\n          // Store choice.\n          choice = {\n            type: 'single-choice',\n            items: nestedBodies.map((b) => ({\n              id: b.id,\n              label: (b as any).label as any,\n              selected: selected.indexOf(b) !== -1,\n            })) as any[],\n            label: (unknownBody as any).label,\n          };\n\n          // @todo insert in the right order.\n          bodies.push(...(selected as any[]));\n\n          continue;\n        }\n\n        if (types.indexOf(type) === -1) {\n          types.push(type);\n        }\n\n        items.push({\n          type: type,\n          resource: body as IIIFExternalWebResource,\n          target: annotation.target,\n          selector,\n        });\n      }\n    }\n\n    return {\n      types,\n      items,\n      choice,\n    };\n  }\n\n  function extractChoices(paintingAnnotationsOrCanvas: string | CanvasNormalized | AnnotationNormalized[]) {\n    const { choice } = getPaintables(paintingAnnotationsOrCanvas);\n    return choice;\n  }\n\n  return {\n    getAllPaintingAnnotations,\n    getPaintables,\n    extractChoices,\n  };\n}\n","import { Vault } from '@iiif/vault';\nimport { Manifest, Reference } from '@iiif/presentation-3';\n\nfunction defineProperty(name: string, prototype: any, vault: Vault) {\n  prototype[DEFINED] = prototype[DEFINED] || [];\n  prototype[DEFINED].push(name);\n\n  Object.defineProperty(prototype, name, {\n    get(): any {\n      if (typeof prototype[REFS][name] === 'undefined') {\n        return undefined;\n      }\n\n      const ref = prototype[REFS][name];\n      if (!ref) {\n        return ref;\n      }\n\n      return wrapObject(vault.get(prototype[REFS][name]), vault);\n    },\n    set(items: any) {\n      const existing = prototype[REFS][name];\n      if (existing !== items) {\n        this[REFS][name] = items;\n\n        // This was a hack, but a much more clever implementation here could make very flexible editing.\n        // For example - manifest.label = \"Something\" -> manifest.label = {none: \"something\"}; etc.\n        // Although this might be better in a different library completely.\n        // if (this[REACTIVE]) {\n        //   vault.modifyEntityField({ id: prototype.id, type: prototype.type }, name, unwrapObject(items));\n        // }\n      }\n    },\n  });\n}\n\nconst REFS = Symbol.for('_refs_');\nconst REACTIVE = Symbol.for('_reactive_');\nconst DEFINED = Symbol.for('_defined_');\n\nfunction createPrototype(vault: Vault, reactive = false) {\n  const prototype = {\n    id: null,\n    [DEFINED]: [] as any[],\n    [REFS]: {},\n    [REACTIVE]: null as null | (() => void),\n\n    is(refOrObject: any) {\n      if (typeof refOrObject === 'string') {\n        return this.id === refOrObject;\n      }\n\n      if (refOrObject.id) {\n        return refOrObject.id === this.id;\n      }\n\n      return false;\n    },\n\n    reactive() {\n      if (this[REACTIVE]) {\n        return;\n      }\n\n      this[REACTIVE] = this.subscribe(() => this.refresh(), true);\n\n      return () => {\n        this.unreactive();\n      };\n    },\n\n    refresh() {\n      if (this.id) {\n        const fresh = this.unwrap();\n        for (const key of Object.keys(fresh || {})) {\n          if (this[DEFINED].includes(key)) {\n            (this as any)[REFS][key] = fresh[key as any];\n          } else {\n            (this as any)[key] = fresh[key as any];\n          }\n        }\n      }\n    },\n\n    unreactive() {\n      if (this[REACTIVE]) {\n        this[REACTIVE]();\n        this[REACTIVE] = null;\n      }\n    },\n\n    unwrap() {\n      if (!this.id) {\n        throw new Error('Invalid object');\n      }\n      return vault.get(this.id);\n    },\n\n    toPresentation3() {\n      return vault.toPresentation3(this.unwrap() as any);\n    },\n\n    toPresentation2() {\n      return vault.toPresentation2(this.unwrap() as any);\n    },\n\n    toJSON() {\n      const that = this as any;\n      return {\n        ...that,\n        items: that.items,\n        annotations: that.annotations,\n        structures: that.structures,\n        seeAlso: that.seeAlso,\n        service: that.service,\n        services: that.services,\n        rendering: that.rendering,\n        partOf: that.partOf,\n        start: that.start,\n        supplementary: that.supplementary,\n        homepage: that.homepage,\n        thumbnail: that.thumbnail,\n        placeholderCanvas: that.placeholderCanvas,\n        accompanyingCanvas: that.accompanyingCanvas,\n        provider: that.provider,\n      };\n    },\n    subscribe(subscription: (object: any, vault: Vault) => void, skipInitial = true) {\n      return vault.subscribe(\n        () => {\n          return this.id ? vault.get(this.id) : null;\n        },\n        subscription,\n        skipInitial\n      );\n    },\n  };\n\n  // Structural\n  defineProperty('items', prototype, vault);\n  defineProperty('annotations', prototype, vault);\n  defineProperty('structures', prototype, vault);\n\n  // Linking\n  defineProperty('seeAlso', prototype, vault);\n  defineProperty('service', prototype, vault);\n  defineProperty('services', prototype, vault);\n  defineProperty('rendering', prototype, vault);\n  defineProperty('partOf', prototype, vault);\n  defineProperty('start', prototype, vault);\n  defineProperty('supplementary', prototype, vault);\n  defineProperty('homepage', prototype, vault);\n\n  // Descriptive\n  defineProperty('thumbnail', prototype, vault);\n  defineProperty('placeholderCanvas', prototype, vault);\n  defineProperty('accompanyingCanvas', prototype, vault);\n  defineProperty('provider', prototype, vault);\n\n  // Annotation\n  defineProperty('body', prototype, vault);\n  defineProperty('logo', prototype, vault);\n\n  return prototype;\n}\n\nexport function unwrapObject(object: any): any {\n  if (Array.isArray(object)) {\n    return object.map((o) => unwrapObject(o)) as any;\n  }\n\n  if (!object || !object.type) {\n    return object;\n  }\n\n  return { id: object.id, type: object.type };\n}\n\nexport function wrapObject(object: any, vault: Vault, reactive = false): any {\n  if (Array.isArray(object)) {\n    return object.map((o) => wrapObject(o, vault, reactive));\n  }\n\n  if (!object || !object.type || !object.id) {\n    return object;\n  }\n\n  const prototype = createPrototype(vault, reactive);\n  const newObject = Object.create(prototype);\n\n  const wrapped =  Object.assign(newObject, object) as any;\n\n  if (reactive) {\n    wrapped.reactive();\n  }\n\n  return wrapped;\n}\n\nexport function createObjectsHelper(vault: Vault) {\n  return {\n    get(id: string | Reference | string[] | Reference[], reactive = false) {\n      return wrapObject(vault.get(id as any), vault, reactive);\n    },\n    async load(id: string | Reference<any>, json?: any): Promise<Manifest> {\n      return wrapObject(await vault.load(id, json), vault);\n    },\n    async loadManifest(id: string | Reference<any>, json?: any): Promise<Manifest> {\n      return wrapObject(await vault.loadManifest(id, json), vault);\n    },\n    async loadCollection(id: string | Reference<any>, json?: any) {\n      return wrapObject(await vault.loadCollection(id, json), vault);\n    },\n    wrapObject<T>(objectType: Reference<T>) {\n      return wrapObject(vault.get(objectType, { skipSelfReturn: false }), vault);\n    },\n    isWrapped(object: any) {\n      return !!object[DEFINED];\n    },\n  };\n}\n","import { Vault } from '@iiif/vault';\nimport { ManifestNormalized, RangeNormalized, Reference } from '@iiif/presentation-3';\n\nexport function createRangeHelper(vault: Vault) {\n  return {\n    findFirstCanvasFromRange: (range: RangeNormalized) => findFirstCanvasFromRange(vault, range),\n    findAllCanvasesInRange: (range: RangeNormalized) => findAllCanvasesInRange(vault, range),\n    findManifestSelectedRange: (manifest: ManifestNormalized, canvasId: string) =>\n      findManifestSelectedRange(vault, manifest, canvasId),\n    findSelectedRange: (range: RangeNormalized, canvasId: string) => findSelectedRange(vault, range, canvasId),\n  };\n}\n\nexport function findFirstCanvasFromRange(vault: Vault, range: RangeNormalized): null | Reference<'Canvas'> {\n  for (const inner of range.items) {\n    if (inner.type === 'Canvas') {\n      return inner as Reference<'Canvas'>;\n    }\n    if (inner.type === 'Range') {\n      const found = findFirstCanvasFromRange(vault, vault.get(inner));\n      if (found) {\n        return found;\n      }\n    }\n  }\n  return null;\n}\n\nexport function findAllCanvasesInRange(vault: Vault, range: RangeNormalized): Array<Reference<'Canvas'>> {\n  const found: Reference<'Canvas'>[] = [];\n  for (const inner of range.items) {\n    if (inner.type === 'Canvas') {\n      if (inner.id.indexOf('#') !== -1) {\n        found.push({ id: inner.id.split('#')[0], type: 'Canvas' });\n      } else {\n        found.push(inner as Reference<'Canvas'>);\n      }\n    }\n    if (inner.type === 'Range') {\n      found.push(...findAllCanvasesInRange(vault, vault.get(inner)));\n    }\n    if ((inner as any).type === 'SpecificResource') {\n      const sourceId = typeof (inner as any).source === 'string' ? (inner as any).source : (inner as any).source.id;\n      found.push({ id: sourceId, type: 'Canvas' });\n    }\n  }\n  return found;\n}\n\nexport function findManifestSelectedRange(\n  vault: Vault,\n  manifest: ManifestNormalized,\n  canvasId: string\n): null | RangeNormalized {\n  for (const range of manifest.structures) {\n    const found = findSelectedRange(vault, vault.get(range), canvasId);\n    if (found) {\n      return found;\n    }\n  }\n\n  return null;\n}\n\nexport function findSelectedRange(vault: Vault, range: RangeNormalized, canvasId: string): null | RangeNormalized {\n  for (const inner of range.items) {\n    const parsedId = inner.id?.split('#')[0];\n    if ((inner as any).type === 'SpecificResource' && (inner as any).source === canvasId) {\n      return range;\n    }\n    if (inner.type === 'Canvas' && canvasId === parsedId) {\n      return range;\n    }\n    if (inner.type === 'Range') {\n      const found = findSelectedRange(vault, vault.get(inner), canvasId);\n      if (found) {\n        return found;\n      }\n    }\n  }\n  return null;\n}\n","import { CanvasNormalized, ManifestNormalized, RangeNormalized, Reference } from '@iiif/presentation-3';\nimport { Vault } from '@iiif/vault';\nimport { findAllCanvasesInRange } from './ranges';\n\nexport function createSequenceHelper(vault: Vault) {\n  return {\n    getVisibleCanvasesFromCanvasId: (\n      manifestOrRange: ManifestNormalized | RangeNormalized,\n      canvasId: string | null,\n      preventPaged = false\n    ) => getVisibleCanvasesFromCanvasId(vault, manifestOrRange, canvasId, preventPaged),\n    getManifestSequence: (\n      manifestOrRange: ManifestNormalized | RangeNormalized,\n      options: { disablePaging?: boolean; skipNonPaged?: boolean } = {}\n    ) => getManifestSequence(vault, manifestOrRange, options),\n  };\n}\n\n/**\n * Get visible canvases from canvas ID\n *\n * This function returns a list of canvas references that should all be displayed\n * when the passed canvasId is visible. This should work for individual items,\n * 2-up paged view and continuous (scrolls).\n *\n * The options are listed below (from IIIF docs)\n *\n * - `unordered` - Valid on Collections, Manifests and Ranges. The Canvases included in resources that have this behavior\n *    have no inherent order, and user interfaces should avoid implying an order to the user. Disjoint with individuals,\n *    continuous, and paged.\n *\n * - `individuals` - Valid on Collections, Manifests, and Ranges. For Collections that have this behavior, each of the\n *    included Manifests are distinct objects in the given order. For Manifests and Ranges, the included Canvases are\n *    distinct views, and should not be presented in a page-turning interface. This is the default layout behavior if\n *    not specified. Disjoint with unordered, continuous, and paged.\n *\n * - `continuous`  Valid on Collections, Manifests and Ranges, which include Canvases that have at least height and\n *    width dimensions. Canvases included in resources that have this behavior are partial views and an appropriate\n *    rendering might display all of the Canvases virtually stitched together, such as a long scroll split into\n *    sections. This behavior has no implication for audio resources. The viewingDirection of the Manifest will\n *    determine the appropriate arrangement of the Canvases. Disjoint with unordered, individuals and paged.\n *\n * - `paged`  Valid on Collections, Manifests and Ranges, which include Canvases that have at least height and width\n *    dimensions. Canvases included in resources that have this behavior represent views that should be presented in\n *    a page-turning interface if one is available. The first canvas is a single view (the first recto) and thus the\n *    second canvas likely represents the back of the object in the first canvas. If this is not the case, see the\n *    behavior value non-paged. Disjoint with unordered, individuals, continuous, facing-pages and non-paged.\n *\n */\nexport function getVisibleCanvasesFromCanvasId(\n  vault: Vault,\n  manifestOrRange: ManifestNormalized | RangeNormalized,\n  canvasId: string | null,\n  preventPaged = false\n): Reference<'Canvas'>[] {\n  const behavior = manifestOrRange.behavior;\n  const fullCanvas = canvasId ? vault.get<CanvasNormalized>(canvasId) : null;\n  if (!fullCanvas) {\n    return [];\n  }\n\n  const canvasBehavior = fullCanvas.behavior;\n  const isPaged = preventPaged ? false : behavior.includes('paged');\n  const isContinuous = isPaged ? false : behavior.includes('continuous');\n  const isIndividuals = isPaged || isContinuous ? false : behavior.includes('individuals');\n  const isCanvasFacingPages = canvasBehavior.includes('facing-pages');\n  const isCanvasNonPaged = canvasBehavior.includes('non-paged');\n\n  // Individuals should just be the default.\n  if (isCanvasFacingPages || isCanvasNonPaged || isIndividuals || preventPaged) {\n    return [{ id: fullCanvas.id, type: 'Canvas' }];\n  }\n\n  const [manifestItems, ordering] = getManifestSequence(vault, manifestOrRange);\n\n  // Continuous should just return all items together.\n  if (isContinuous) {\n    return manifestItems;\n  }\n\n  const canvasIndex = manifestItems.findIndex((r) => r.id === canvasId);\n  if (canvasIndex === -1) {\n    return [];\n  }\n\n  for (const indexes of ordering) {\n    if (indexes.includes(canvasIndex)) {\n      return indexes.map((index) => manifestItems[index]);\n    }\n  }\n\n  return [{ id: fullCanvas.id, type: 'Canvas' }];\n}\n\nexport function getManifestSequence(\n  vault: Vault,\n  manifestOrRange: ManifestNormalized | RangeNormalized,\n  { disablePaging, skipNonPaged }: { disablePaging?: boolean; skipNonPaged?: boolean } = {}\n): [Reference<'Canvas'>[], number[][]] {\n  const behavior = manifestOrRange.behavior;\n  const isPaged = behavior.includes('paged');\n  const isContinuous = isPaged ? false : behavior.includes('continuous');\n  const isIndividuals = isPaged || isContinuous ? false : behavior.includes('individuals');\n  const manifestItems =\n    manifestOrRange.type === 'Manifest' ? manifestOrRange.items : findAllCanvasesInRange(vault, manifestOrRange);\n\n  // Continuous should just return all items together.\n  if (isContinuous) {\n    return [manifestItems, [manifestItems.map((_, index) => index)]];\n  }\n\n  // Individuals should just be the default.\n  if (isIndividuals || !isPaged || disablePaging) {\n    return [manifestItems, manifestItems.map((_, index) => [index])];\n  }\n\n  // This is the tricky case.\n  const ordering: number[][] = [];\n  let currentOrdering: number[] = [];\n\n  const flush = () => {\n    if (currentOrdering.length) {\n      ordering.push([...currentOrdering]);\n      currentOrdering = [];\n    }\n  };\n\n  let offset = 0;\n  let flushNextPaged = false;\n  for (let i = 0; i < manifestItems.length; i++) {\n    const canvas = vault.get<CanvasNormalized>(manifestItems[i]);\n    if (canvas.behavior.includes('non-paged')) {\n      if (i === offset) {\n        offset++;\n      }\n      if (!skipNonPaged) {\n        flush();\n        ordering.push([i]);\n        flush();\n      }\n      continue;\n    }\n\n    if (i === offset || canvas.behavior.includes('facing-pages')) {\n      // Flush and push a single.\n      if (currentOrdering.length) {\n        flushNextPaged = true;\n      }\n      flush();\n      ordering.push([i]);\n      flush();\n      continue;\n    }\n\n    currentOrdering.push(i);\n\n    if (flushNextPaged) {\n      flush();\n      flushNextPaged = false;\n      continue;\n    }\n\n    if (currentOrdering.length > 1) {\n      flush();\n    }\n  }\n\n  if (currentOrdering.length) {\n    flush();\n  }\n\n  return [manifestItems, ordering];\n}\n"],"names":["ImageServiceLoader","getFixedSizeFromImage","root","inverseIdx","_i","mapToEllipse","x","y","approxUnitArc","vectorAngle","getArcCenter","arcToBezier","_","arcToCurve","j","p","b","i","val","target"],"mappings":"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"}