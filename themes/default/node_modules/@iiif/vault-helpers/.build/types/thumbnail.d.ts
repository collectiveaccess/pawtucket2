import { AnnotationNormalized, AnnotationPageNormalized, CanvasNormalized, CollectionItemSchemas, CollectionNormalized, ContentResource, ManifestNormalized, Reference } from '@iiif/presentation-3';
import { Vault } from '@iiif/vault';
import { FixedSizeImage, FixedSizeImageService, ImageCandidate, ImageCandidateRequest, ImageServiceLoader, UnknownSizeImage, VariableSizeImage } from '@atlas-viewer/iiif-image-api';
export declare function createThumbnailHelper(vault: Vault, dependencies?: {
    imageServiceLoader?: ImageServiceLoader;
}): {
    getBestThumbnailAtSize: (input: string | Reference<CollectionItemSchemas> | Reference<'Collection'> | Reference<'Manifest'> | Reference<'Canvas'> | Reference<'Annotation'> | Reference<'AnnotationPage'> | Reference<'ContentResource'> | CollectionNormalized | ManifestNormalized | CanvasNormalized | AnnotationNormalized | AnnotationPageNormalized | ContentResource, request: ImageCandidateRequest, dereference?: boolean, candidates?: Array<ImageCandidate>, dimensions?: {
        width: number;
        height: number;
    }) => Promise<{
        best: null | undefined | FixedSizeImage | FixedSizeImageService | VariableSizeImage | UnknownSizeImage;
        fallback: Array<ImageCandidate>;
        log: string[];
    }>;
};
