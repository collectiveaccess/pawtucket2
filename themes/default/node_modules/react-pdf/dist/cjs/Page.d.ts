import React from 'react';
import type { PDFDocumentProxy } from 'pdfjs-dist';
import type { EventProps } from 'make-event-props';
import type { ClassName, CustomRenderer, CustomTextRenderer, NodeOrRenderer, OnGetAnnotationsError, OnGetAnnotationsSuccess, OnGetStructTreeError, OnGetStructTreeSuccess, OnGetTextError, OnGetTextSuccess, OnPageLoadError, OnPageLoadSuccess, OnRenderAnnotationLayerError, OnRenderAnnotationLayerSuccess, OnRenderError, OnRenderSuccess, OnRenderTextLayerError, OnRenderTextLayerSuccess, PageCallback, RenderMode } from './shared/types.js';
export type PageProps = {
    _className?: string;
    _enableRegisterUnregisterPage?: boolean;
    canvasBackground?: string;
    canvasRef?: React.Ref<HTMLCanvasElement>;
    children?: React.ReactNode;
    className?: ClassName;
    customRenderer?: CustomRenderer;
    customTextRenderer?: CustomTextRenderer;
    devicePixelRatio?: number;
    error?: NodeOrRenderer;
    height?: number;
    imageResourcesPath?: string;
    inputRef?: React.Ref<HTMLDivElement>;
    loading?: NodeOrRenderer;
    noData?: NodeOrRenderer;
    onGetAnnotationsError?: OnGetAnnotationsError;
    onGetAnnotationsSuccess?: OnGetAnnotationsSuccess;
    onGetStructTreeError?: OnGetStructTreeError;
    onGetStructTreeSuccess?: OnGetStructTreeSuccess;
    onGetTextError?: OnGetTextError;
    onGetTextSuccess?: OnGetTextSuccess;
    onLoadError?: OnPageLoadError;
    onLoadSuccess?: OnPageLoadSuccess;
    onRenderAnnotationLayerError?: OnRenderAnnotationLayerError;
    onRenderAnnotationLayerSuccess?: OnRenderAnnotationLayerSuccess;
    onRenderError?: OnRenderError;
    onRenderSuccess?: OnRenderSuccess;
    onRenderTextLayerError?: OnRenderTextLayerError;
    onRenderTextLayerSuccess?: OnRenderTextLayerSuccess;
    pageIndex?: number;
    pageNumber?: number;
    pdf?: PDFDocumentProxy | false;
    registerPage?: undefined;
    renderAnnotationLayer?: boolean;
    renderForms?: boolean;
    renderMode?: RenderMode;
    renderTextLayer?: boolean;
    rotate?: number | null;
    scale?: number;
    unregisterPage?: undefined;
    width?: number;
} & EventProps<PageCallback | false | undefined>;
declare const Page: React.FC<PageProps>;
export default Page;
