import { styled as styled$1, createStitches } from '@stitches/react';
import React from 'react';
import * as Popover$1 from '@radix-ui/react-popover';

var Block = styled$1("div", {
    marginBottom: "$4",
});

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

var _a$2;
var nuPurples = {
    nuPurple120: "#401f68",
    nuPurple: "#4e2a84",
    nuPurple70: "#765da0",
    nuPurple60: "#836eaa",
    nuPurple30: "#b6acd1",
    nuPurple10: "#e4e0ee",
};
var richBlacks = {
    richBlack80: "#342f2e",
    richBlack50: "#716c6b",
    richBlack20: "#bbb8b8",
    richBlack10: "#d8d6d6",
};
var nuGreys = {
    mediumGrey: "#ccc",
    lightGrey: "#f0f0f0",
    lightGrey2: "#e3e3e3",
};
var nuGreen = {
    green: "#58b947",
    greenDark: "#008656",
};
var nuBlue = {
    blue: "#5091cd",
    blueDark: "#0d2d6c",
};
var nuYellow = {
    yellow: "#ede93b",
};
var nuGold = {
    gold: "#ffc520",
};
var nuRed2 = {
    red: "#ef553f",
};
var white = {
    white: "#fff",
};
var styled = (_a$2 = createStitches({
    theme: {
        colors: __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, nuPurples), richBlacks), nuGreys), nuGreen), nuBlue), nuYellow), nuGold), nuRed2), white),
        fonts: {
            sans: "Akkurat Pro Regular, Arial, sans-serif",
            sansLight: "Akkurat Pro Light, Arial, sans-serif",
            sansBold: "Akkurat Pro Bold, Arial, sans-serif",
            display: "Campton, 'Akkurat Pro Regular', Arial, sans-serif",
            headline: "Campton Extra Light, Courier New, sans-serif",
            headlineBold: "Campton Bold, Impact, sans-serif",
        },
        fontSizes: {
            1: "12px",
            2: "13px",
            3: "15px",
            4: "17px",
            5: "19px",
            6: "21px",
            7: "27px",
            8: "35px",
            9: "59px",
        },
        lineHeights: {
            1: "12px",
            2: "13px",
            3: "15px",
            4: "17px",
            5: "19px",
            6: "21px",
            7: "27px",
            8: "35px",
            9: "59px",
        },
        sizes: {
            1: "5px",
            2: "10px",
            3: "15px",
            4: "20px",
            5: "25px",
            6: "35px",
            7: "45px",
            8: "65px",
            9: "80px",
        },
        space: {
            1: "5px",
            2: "10px",
            3: "15px",
            4: "20px",
            5: "25px",
            6: "35px",
            7: "45px",
            8: "65px",
            9: "80px",
        },
        radii: {
            1: "4px",
            2: "6px",
            3: "8px",
            4: "12px",
            round: "50%",
            pill: "9999px",
        },
        zIndices: {
            1: "100",
            2: "200",
            3: "300",
            4: "400",
            max: "999",
        },
    },
    media: {
        bp1: "(min-width: 520px)",
        bp2: "(min-width: 900px)",
        bp3: "(min-width: 1200px)",
        bp4: "(min-width: 1800px)",
        motion: "(prefers-reduced-motion)",
        hover: "(any-hover: hover)",
        dark: "(prefers-color-scheme: dark)",
        light: "(prefers-color-scheme: light)",
    },
    utils: {
        p: function (value) { return ({
            padding: value,
        }); },
        pt: function (value) { return ({
            paddingTop: value,
        }); },
        pr: function (value) { return ({
            paddingRight: value,
        }); },
        pb: function (value) { return ({
            paddingBottom: value,
        }); },
        pl: function (value) { return ({
            paddingLeft: value,
        }); },
        px: function (value) { return ({
            paddingLeft: value,
            paddingRight: value,
        }); },
        py: function (value) { return ({
            paddingTop: value,
            paddingBottom: value,
        }); },
        m: function (value) { return ({
            margin: value,
        }); },
        mt: function (value) { return ({
            marginTop: value,
        }); },
        mr: function (value) { return ({
            marginRight: value,
        }); },
        mb: function (value) { return ({
            marginBottom: value,
        }); },
        ml: function (value) { return ({
            marginLeft: value,
        }); },
        mx: function (value) { return ({
            marginLeft: value,
            marginRight: value,
        }); },
        my: function (value) { return ({
            marginTop: value,
            marginBottom: value,
        }); },
        ta: function (value) { return ({ textAlign: value }); },
        fd: function (value) { return ({
            flexDirection: value,
        }); },
        fw: function (value) { return ({ flexWrap: value }); },
        ai: function (value) { return ({
            alignItems: value,
        }); },
        ac: function (value) { return ({
            alignContent: value,
        }); },
        jc: function (value) { return ({
            justifyContent: value,
        }); },
        as: function (value) { return ({ alignSelf: value }); },
        fg: function (value) { return ({ flexGrow: value }); },
        fs: function (value) { return ({
            flexShrink: value,
        }); },
        fb: function (value) { return ({ flexBasis: value }); },
        bc: function (value) { return ({
            backgroundColor: value,
        }); },
        br: function (value) { return ({
            borderRadius: value,
        }); },
        btrr: function (value) { return ({
            borderTopRightRadius: value,
        }); },
        bbrr: function (value) { return ({
            borderBottomRightRadius: value,
        }); },
        bblr: function (value) { return ({
            borderBottomLeftRadius: value,
        }); },
        btlr: function (value) { return ({
            borderTopLeftRadius: value,
        }); },
        bs: function (value) { return ({ boxShadow: value }); },
        lh: function (value) { return ({
            lineHeight: value,
        }); },
        ox: function (value) { return ({ overflowX: value }); },
        oy: function (value) { return ({ overflowY: value }); },
        pe: function (value) { return ({
            pointerEvents: value,
        }); },
        us: function (value) { return ({
            WebkitUserSelect: value,
            userSelect: value,
        }); },
        userSelect: function (value) { return ({
            WebkitUserSelect: value,
            userSelect: value,
        }); },
        size: function (value) { return ({
            width: value,
            height: value,
        }); },
        appearance: function (value) { return ({
            WebkitAppearance: value,
            appearance: value,
        }); },
        backgroundClip: function (value) { return ({
            WebkitBackgroundClip: value,
            backgroundClip: value,
        }); },
    },
}), _a$2.styled), css = _a$2.css, globalCss = _a$2.globalCss, keyframes = _a$2.keyframes, getCssText = _a$2.getCssText, theme = _a$2.theme, createTheme = _a$2.createTheme, config = _a$2.config;
globalCss({
    html: {
        color: "$richBlack50",
    },
    body: {
        fontFamily: "$sans",
    },
    h1: {
        fontFamily: "$headline",
        fontSize: "$9",
        color: "$nuPurple",
        fontWeight: "normal",
        margin: "0 0 $5",
    },
    h2: {
        fontFamily: "$headlineBold",
        fontSize: "$8",
        color: "$nuPurple",
        fontWeight: "normal",
        margin: "0 0 $5",
    },
    h3: {
        fontFamily: "$sans",
        fontSize: "$7",
        color: "$richBlack50",
        fontWeight: "normal",
        margin: "0 0 $5",
    },
    pre: {
        "& code": {
            display: "block",
            background: "none",
            whiteSpace: "pre",
            overflowX: "scroll",
            maxWidth: "100%",
            minWidth: "100px",
            padding: "0",
        },
    },
    a: {
        color: "$nuPurple",
        textDecoration: "none",
        borderBottom: "1px dashed $nuPurple30",
        fontFamily: "$sansBold",
        paddingBottom: "$1",
        "&:hover": {
            borderBottom: "1px solid $nuPurple",
        },
    },
    p: {
        lineHeight: "$7",
        marginBlockEnd: "$4",
    },
});
var colorHelpers = {
    isDanger: { color: "$white", backgroundColor: "$red", fill: "$white" },
    isLight: {
        color: "$richBlack80",
        backgroundColor: "$lightGrey",
        fill: "$richBlack80",
    },
    isInfo: { color: "$white", backgroundColor: "$blue", fill: "$white" },
    isPrimary: { color: "$white", backgroundColor: "$nuPurple", fill: "$white" },
    isSuccess: { color: "$white", backgroundColor: "$green", fill: "$white" },
    isWarning: {
        color: "$richBlack80",
        backgroundColor: "$gold",
        fill: "$richBlack80",
    },
};

var StyledButton = styled("button", {
    // Reset
    all: "unset",
    alignItems: "center",
    boxSizing: "content-box",
    userSelect: "none",
    "&::before": {
        boxSizing: "border-box",
    },
    "&::after": {
        boxSizing: "border-box",
    },
    // Custom reset?
    flexShrink: 0,
    justifyContent: "center",
    lineHeight: "1",
    WebkitTapHighlightColor: "rgba(0,0,0,0)",
    // Custom
    border: "1px solid $richBlack10",
    backgroundColor: "$white",
    color: "$richBlack50",
    cursor: "pointer",
    display: "inline-flex",
    fontSize: "$4",
    margin: "0 .5em .5em 0",
    padding: "calc(0.75em - 1px) calc(1em - 1px)",
    position: "relative",
    textTransform: "uppercase",
    transition: "all 0.3s ease 0s",
    textDecoration: "none",
    textAlign: "center",
    "&:after": {
        content: "",
        position: "absolute",
        transition: "all 0.3s ease 0s",
        zIndex: "-1",
    },
    "&:hover, &:active": {
        borderColor: "$richBlack20",
        //borderBottom: "none",
    },
    "&:focus": {
        border: "2px dashed",
    },
    "&:disabled": {
        opacity: 0.5,
        cursor: "not-allowed",
    },
    "&:disabled:hover": {
        opacity: 0.5,
    },
    // For icons
    "& span": {
        paddingLeft: "$1",
    },
    // Variants
    variants: {
        isLowercase: {
            true: {
                padding: "0.75em 1em",
                textTransform: "unset",
            },
        },
        isLight: {
            true: __assign({ padding: "0.75em 1em", border: "none", "&:hover": {
                    opacity: "0.75",
                } }, colorHelpers.isLight),
        },
        isPrimary: {
            true: __assign({ padding: "0.75em 1em", border: "none", "&:hover": {
                    opacity: "0.75",
                } }, colorHelpers.isPrimary),
        },
        isText: {
            true: {
                padding: "0",
                border: "none",
                backgroundColor: "transparent",
                "&:hover": {
                    textDecoration: "underline",
                },
            },
        },
        isDanger: {
            true: __assign({ padding: "0.75em 1em", border: "none", "&:hover": {
                    opacity: "0.75",
                } }, colorHelpers.isDanger),
        },
    },
});

var Button = function (props) {
    return React.createElement(StyledButton, __assign({ type: "button", role: "button" }, props));
};

var FooterStyled = styled("footer", {
    background: "$nuPurple",
    color: "$white",
    display: "flex",
    flexDirection: "column",
    flexWrap: "nowrap",
    fontFamily: "$sansLight",
    fontSize: "$3",
    padding: "$6 0",
    "& a": {
        color: "$white",
        fontFamily: "$sansLight",
        "&:hover, &:focus": {
            textDecoration: "none",
            color: "$white",
        },
    },
    "& .hide-label": {
        position: "absolute",
        left: "-10000px",
        top: "auto",
        width: "1px",
        height: "1px",
        overflow: "hidden",
    },
    variants: {
        isGrey: {
            true: {
                background: "$richBlack80",
            },
        },
    },
});
var FooterContent = styled("div", {
    marginRight: "5.15464%",
    display: "inline-block",
    position: "relative",
    verticalAlign: "top",
    "&.contact": {
        "& ul": {
            margin: "0 0 1rem 2rem",
            position: "relative",
        },
    },
    "@bp1": {
        marginBottom: "$2",
    },
    "@bp2": {
        marginBottom: "0",
    },
});
var FooterContentWrapper = styled("div", {
    width: "100%",
    display: "grid",
    gap: "$4",
    gridTemplateColumns: "1",
    "@bp2": {
        gridTemplateColumns: "repeat(2, 1fr)",
    },
    "@bp3": {
        gridTemplateColumns: "repeat(4, 1fr)",
    },
});
var FooterCopyright = styled("div", {
    color: "$nuPurple10",
    margin: "$4 0 0",
    "> p": {
        lineHeight: "$6 !important",
        a: {
            border: "none",
            color: "inherit",
            textDecoration: "underline",
        },
    },
});
var FooterIcon = styled("li", {
    backgroundSize: "18px 24px",
    position: "absolute",
    top: "2px",
    left: "-2rem",
    height: "24px",
    width: "18px",
});
var FooterList = styled("ul", {
    listStyleType: "none",
    margin: "0",
    padding: "0",
    "& li": {
        paddingBottom: "$3",
    },
    "& a": {
        borderBottom: "0",
        textDecoration: "underline",
    },
});
var Social = styled("a", {
    display: "inline-block",
    verticalAlign: "bottom",
    overflow: "hidden",
    margin: "4px",
    width: "39px",
    height: "39px",
    fontSize: "0",
    textIndent: "-9999px",
    background: "url(https://common.northwestern.edu/v8/css/images/icons/social-media-icons.svg);",
    backgroundColor: "#fff",
    transition: "background 0.3s",
    border: "1px solid #fff",
    "&:hover, &:focus": {
        backgroundColor: "#b6acd1",
    },
    "&.facebook": {
        backgroundPosition: "0 0",
        "&:hover, &:focus": {
            backgroundPosition: "0 -39px",
        },
    },
    "&.twitter": {
        backgroundPosition: "-39px 0",
        "&:hover, &:focus": {
            backgroundPosition: "-39px -39px",
        },
    },
    "&.instagram": {
        backgroundPosition: "-78px 0",
        "&:hover, &:focus": {
            backgroundPosition: "-78px -39px",
        },
    },
    "&.youtube": {
        backgroundPosition: "-156px 0",
        "&:hover, &:focus": {
            backgroundPosition: "-156px -39px",
        },
    },
    "&.wordpress": {
        backgroundPosition: "-234px 0",
        "&:hover, &:focus": {
            backgroundPosition: "-234px -39px",
        },
    },
});

var Footer = function (_a) {
    var css = _a.css, isCopyright = _a.isCopyright;
    var currentYear = function () {
        var today = new Date();
        return today.getFullYear();
    };
    return (React.createElement(FooterStyled, { css: css },
        React.createElement(FooterContentWrapper, null,
            React.createElement(FooterContent, null,
                React.createElement("a", { href: "https://www.northwestern.edu" },
                    React.createElement("div", { className: "footer-logo" },
                        React.createElement("img", { alt: "Northwestern University logo", src: "https://common.northwestern.edu/v8/css/images/northwestern-university.svg", style: {
                                maxWidth: "200px",
                                marginBottom: "1rem",
                            } }))),
                React.createElement(FooterList, null,
                    React.createElement("li", null,
                        "\u00A9 ",
                        currentYear(),
                        " Northwestern University"),
                    React.createElement("li", null,
                        React.createElement("a", { href: "https://www.northwestern.edu/emergency/index.html" }, "Campus Emergency Information")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "https://www.northwestern.edu/hr/careers/" }, "Careers")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "https://www.northwestern.edu/contact.html" }, "Contact Northwestern University")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "https://www.northwestern.edu/disclaimer.html" }, "Disclaimer")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "https://www.northwestern.edu/accessibility/about/report-an-accessibility-issue.html" }, "Report an Accessibility Issue")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "https://policies.northwestern.edu/" }, "University Policies")))),
            React.createElement(FooterContent, { className: "contact" },
                React.createElement(FooterList, null,
                    React.createElement(FooterIcon, { css: {
                            background: "url('https://common.northwestern.edu/v8/css/images/icons/pin-drop.svg') no-repeat",
                        } },
                        React.createElement("span", { className: "hide-label" }, "Address")),
                    React.createElement("li", null, "1970 Campus Drive"),
                    React.createElement("li", null, "Evanston, IL 60208")),
                React.createElement(FooterList, null,
                    React.createElement(FooterIcon, { css: {
                            background: "url('https://common.northwestern.edu/v8/css/images/icons/mobile-phone.svg') no-repeat",
                        } },
                        React.createElement("span", { className: "hide-label" }, "Phone number")),
                    React.createElement("li", null, "(847) 491-7658")),
                React.createElement(FooterList, null,
                    React.createElement(FooterIcon, { css: {
                            background: "url('https://common.northwestern.edu/v8/css/images/icons/email.svg') no-repeat",
                            left: "-2.2rem",
                        } },
                        React.createElement("span", { className: "hide-label" }, "Email Address")),
                    React.createElement("li", null,
                        React.createElement("a", { href: "mailto:library@northwestern.edu" }, "library@northwestern.edu")))),
            React.createElement(FooterContent, null,
                React.createElement("p", { style: { lineHeight: "1", margin: "0 0 1rem" } },
                    React.createElement("strong", null, "Social Media")),
                React.createElement(Social, { className: "facebook", href: "https://www.facebook.com/NorthwesternLibrary" }, "Facebook"),
                React.createElement(Social, { className: "twitter", href: "https://twitter.com/nu_library" }, "Twitter"),
                React.createElement(Social, { className: "instagram", href: "https://www.instagram.com/nu_library/" }, "Instagram"),
                React.createElement("br", null),
                React.createElement(Social, { className: "youtube", href: "https://www.youtube.com/user/NorthwesternLib" }, "YouTube"),
                React.createElement(Social, { className: "wordpress", href: "http://sites.northwestern.edu/northwesternlibrary/" }, "WordPress")),
            React.createElement(FooterContent, null,
                React.createElement("div", null,
                    React.createElement(FooterList, null,
                        React.createElement("li", null,
                            React.createElement("a", { href: "http://northwestern.libanswers.com/" }, "FAQs")),
                        React.createElement("li", null,
                            React.createElement("a", { href: "https://www.library.northwestern.edu/about/support/index.html" }, "Support Us")),
                        React.createElement("li", null,
                            React.createElement("a", { href: "https://www.library.northwestern.edu/about/library-jobs/index.html" }, "Library Jobs")),
                        React.createElement("li", null,
                            React.createElement("a", { href: "https://www.library.northwestern.edu/about/administration/policies/index.html" }, "Library Policies")),
                        React.createElement("li", null,
                            React.createElement("a", { href: "https://www.library.northwestern.edu/about/contact/general-feedback.html" }, "Provide Feedback")))))),
        isCopyright && (React.createElement(FooterCopyright, null,
            React.createElement("p", null,
                "Northwestern University Libraries is dedicated to the fair and ethical preservation, digitization, curation, and use of its collections. The works on this Web site are made available to the public under Fair Use (Section 107 of the Copyright Act) for learning and teaching purposes, as well as to promote the mission and activities of Northwestern University Libraries. Northwestern University Libraries does not claim the copyright of any materials on this site. If you are the copyright holder of any item(s) in this collection or have questions, comments or concerns about this exhibit, please contact us via email at",
                " ",
                React.createElement("a", { href: "library@northwestern.edu" }, "library@northwestern.edu"),
                ".")))));
};

var StyledIcon = styled("svg", {
    display: "inline-flex",
    variants: {
        isLarge: {
            true: {
                height: "4rem",
                width: "4rem",
            },
        },
        isMedium: {
            true: {
                height: "2rem",
                width: "2rem",
            },
        },
        isSmall: {
            true: {
                height: "1rem",
                width: "1rem",
            },
        },
    },
});

var Add = function () { return (React.createElement("path", { fill: "none", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "32", d: "M256 112v288M400 256H112" })); };

var Audio = function () { return (React.createElement(React.Fragment, null,
    React.createElement("path", { d: "M232 416a23.88 23.88 0 01-14.2-4.68 8.27 8.27 0 01-.66-.51L125.76 336H56a24 24 0 01-24-24V200a24 24 0 0124-24h69.75l91.37-74.81a8.27 8.27 0 01.66-.51A24 24 0 01256 120v272a24 24 0 01-24 24zm-106.18-80zm-.27-159.86zM320 336a16 16 0 01-14.29-23.19c9.49-18.87 14.3-38 14.3-56.81 0-19.38-4.66-37.94-14.25-56.73a16 16 0 0128.5-14.54C346.19 208.12 352 231.44 352 256c0 23.86-6 47.81-17.7 71.19A16 16 0 01320 336z" }),
    React.createElement("path", { d: "M368 384a16 16 0 01-13.86-24C373.05 327.09 384 299.51 384 256c0-44.17-10.93-71.56-29.82-103.94a16 16 0 0127.64-16.12C402.92 172.11 416 204.81 416 256c0 50.43-13.06 83.29-34.13 120a16 16 0 01-13.87 8z" }),
    React.createElement("path", { d: "M416 432a16 16 0 01-13.39-24.74C429.85 365.47 448 323.76 448 256c0-66.5-18.18-108.62-45.49-151.39a16 16 0 1127-17.22C459.81 134.89 480 181.74 480 256c0 64.75-14.66 113.63-50.6 168.74A16 16 0 01416 432z" }))); };

var Close = function () { return (React.createElement("path", { d: "M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z" })); };

var Image = function () { return (React.createElement("path", { d: "M416 64H96a64.07 64.07 0 00-64 64v256a64.07 64.07 0 0064 64h320a64.07 64.07 0 0064-64V128a64.07 64.07 0 00-64-64zm-80 64a48 48 0 11-48 48 48.05 48.05 0 0148-48zM96 416a32 32 0 01-32-32v-67.63l94.84-84.3a48.06 48.06 0 0165.8 1.9l64.95 64.81L172.37 416zm352-32a32 32 0 01-32 32H217.63l121.42-121.42a47.72 47.72 0 0161.64-.16L448 333.84z" })); };

var Video = function () { return (React.createElement("path", { d: "M464 384.39a32 32 0 01-13-2.77 15.77 15.77 0 01-2.71-1.54l-82.71-58.22A32 32 0 01352 295.7v-79.4a32 32 0 0113.58-26.16l82.71-58.22a15.77 15.77 0 012.71-1.54 32 32 0 0145 29.24v192.76a32 32 0 01-32 32zM268 400H84a68.07 68.07 0 01-68-68V180a68.07 68.07 0 0168-68h184.48A67.6 67.6 0 01336 179.52V332a68.07 68.07 0 01-68 68z" })); };

var Title = function (_a) {
    var children = _a.children;
    return React.createElement("title", null, children);
};
var Icon = function (props) {
    return (React.createElement(StyledIcon, __assign({}, props, { "data-testid": "icon-svg", role: "img", viewBox: "0 0 512 512", xmlns: "http://www.w3.org/2000/svg" }), props.children));
};
/**
 * Title
 */
Icon.Title = Title;
/**
 * Path
 */
Icon.Add = Add;
Icon.Audio = Audio;
Icon.Close = Close;
Icon.Image = Image;
Icon.Video = Video;

var StyledNotification = styled("div", {
    // Reset
    boxSizing: "border-box",
    // Custom
    padding: "$5",
    marginBottom: "$2",
    backgroundColor: "$nuPurple10",
    color: "$nuPurple",
    fill: "$nuPurple",
    position: "relative",
    "& svg": {
        fill: "inherit",
    },
    "& span": {
        color: "inherit",
    },
    variants: {
        isDanger: {
            true: __assign({}, colorHelpers.isDanger),
        },
        isCentered: {
            true: {
                textAlign: "center",
            },
        },
        isInfo: {
            true: __assign({}, colorHelpers.isInfo),
        },
        isSuccess: {
            true: __assign({}, colorHelpers.isSuccess),
        },
        isWarning: {
            true: __assign({}, colorHelpers.isWarning),
        },
    },
});
var StyledClose$1 = styled("button", {
    cursor: "pointer",
    right: "$2",
    position: "absolute",
    top: "$2",
    background: "transparent",
    border: "none",
});
var Notification = function (props) {
    // Peel isClosable off, as it will make Stitches complain if it gets through
    var isClosable = props.isClosable, styleProps = __rest(props, ["isClosable"]);
    var _a = React.useState(true), visible = _a[0], setVisible = _a[1];
    function handleCloseClick() {
        setVisible(false);
    }
    if (!visible)
        return null;
    return (React.createElement(StyledNotification, __assign({}, styleProps),
        isClosable && (React.createElement(StyledClose$1, { "aria-label": "Close", onClick: handleCloseClick },
            React.createElement(Icon, { isSmall: true },
                React.createElement(Icon.Close, null)))),
        props.children));
};

var StyledPlaceholder = styled("div", {
    display: "flex",
    height: "calc(100% - 2rem)",
    width: "calc(100% - 2rem)",
    alignContent: "center",
    alignItems: "center",
    flexDirection: "column",
    justifyContent: "center",
    padding: "1rem",
    textAlign: "center",
    lineHeight: "1.55em",
    boxSizing: "content-box",
    "> span": {
        display: "inline-flex",
        maxHeight: "100%",
        maxWidth: "100%",
        alignContent: "center",
        alignSelf: "center",
        flexDirection: "column",
        flexGrow: "0",
        flexShrink: "1",
        margin: "auto",
    },
    img: {
        maxHeight: "100%",
        maxWidth: "100%",
        objectFit: "contain",
    },
    variants: {
        isLight: {
            true: __assign({}, colorHelpers.isLight),
        },
    },
});

var Placeholder = function (_a) {
    var children = _a.children;
    return (React.createElement(StyledPlaceholder, { isLight: true },
        React.createElement("span", null, children)));
};

var _a$1, _b, _c;
var slideDown = keyframes({
    "0%": { opacity: 0, transform: "translateY(1rem)" },
    "100%": { opacity: 1, transform: "translateY(0)" },
});
var slideUp = keyframes({
    "0%": { opacity: 0, transform: "translateY(1rem)" },
    "100%": { opacity: 1, transform: "translateY(0)" },
});
var StyledArrow = styled(Popover$1.Arrow, {
    fill: "$richBlack10",
});
var StyledClose = styled(Popover$1.Close, {
    position: "absolute",
    right: "0",
    top: "0",
    padding: "0.5rem",
    margin: "0",
    cursor: "pointer",
    border: "none",
    background: "none",
    fill: "inherit",
    "&:hover": {
        opacity: "0.75",
    },
});
var StyledContent = styled(Popover$1.Content, {
    border: "1px solid $richBlack10",
    backgroundColor: "$white",
    fill: "$richBlack50",
    padding: "1rem 2rem 1rem 1rem",
    width: "auto",
    minWidth: "200px",
    maxWidth: "350px",
    borderRadius: "3px",
    boxShadow: "5px 5px 13px #0002",
    /**
     * Animate toggle
     */
    animationDuration: "0.3s",
    animationTimingFunction: "cubic-bezier(0.16, 1, 0.3, 1)",
    '&[data-side="top"]': { animationName: slideUp },
    '&[data-side="bottom"]': { animationName: slideDown },
    /**
     *
     */
    '&[data-align="end"]': (_a$1 = {},
        _a$1["& ".concat(StyledArrow)] = {
            margin: "0 0.7rem",
        },
        _a$1),
    /**
     * Variants
     */
    variants: {
        isLight: {
            true: __assign(__assign({}, colorHelpers.isLight), (_b = { border: "none" }, _b["& ".concat(StyledArrow)] = {
                fill: "$lightGrey",
            }, _b)),
        },
        isPrimary: {
            true: __assign(__assign({}, colorHelpers.isPrimary), (_c = { border: "none" }, _c["& ".concat(StyledArrow)] = {
                fill: "$nuPurple",
            }, _c)),
        },
    },
});
var StyledTrigger = styled(Popover$1.Trigger, {
    display: "inline-flex",
    padding: "0.5rem 0",
    margin: "0 0.5rem 0 0",
    cursor: "pointer",
    border: "none",
    background: "none",
    "> button, > span": {
        margin: "0",
    },
});
var StyledPopover = styled(Popover$1.Root, {
    boxSizing: "content-box",
});

var Trigger = function (props) {
    return React.createElement(StyledTrigger, __assign({}, props), props.children);
};
var Content = function (props) {
    return (React.createElement(StyledContent, __assign({}, props),
        React.createElement(StyledArrow, null),
        React.createElement(StyledClose, null,
            React.createElement(Icon, { isSmall: true },
                React.createElement(Icon.Close, null))),
        props.children));
};
var Popover = function (_a) {
    var children = _a.children;
    return React.createElement(StyledPopover, null, children);
};
Popover.Trigger = Trigger;
Popover.Content = Content;

var Section = styled("section", {
    // Reset
    boxSizing: "border-box",
    flexShrink: 0,
    "&::before": {
        boxSizing: "border-box",
        content: '""',
    },
    "&::after": {
        boxSizing: "border-box",
        content: '""',
    },
    variants: {
        size: {
            "1": {
                py: "$3",
            },
            "2": {
                py: "$5",
            },
            "3": {
                py: "$9",
            },
        },
    },
    defaultVariants: {
        size: "3",
    },
});

var SpacerLine = styled("div", {
    height: "1px",
    backgroundColor: "#efefef",
    width: "100%",
    margin: "$3 0",
});

var _a;
var Tag = styled("div", (_a = {
        // Reset
        boxSizing: "border-box",
        // Custom
        display: "inline-flex",
        alignItems: "center",
        borderRadius: "5px",
        padding: "$1",
        marginBottom: "$2",
        marginRight: "$2",
        backgroundColor: "$lightGrey",
        color: "$richBlack50",
        textTransform: "uppercase",
        fontSize: "$2",
        objectFit: "contain",
        lineHeight: "1em !important",
        "&:last-child": {
            marginRight: "0",
        }
    },
    _a["".concat(StyledIcon)] = {
        position: "absolute",
        left: "$1",
        height: "$3",
        width: "$3",
    },
    _a.variants = {
        isIcon: {
            true: { position: "relative", paddingLeft: "$5" },
        },
        isDanger: {
            true: __assign({}, colorHelpers.isDanger),
        },
        isInfo: {
            true: __assign({}, colorHelpers.isInfo),
        },
        isPrimary: {
            true: {
                backgroundColor: "$nuPurple10",
                color: "$nuPurple",
            },
        },
        isSuccess: {
            true: __assign({}, colorHelpers.isSuccess),
        },
        isWarning: {
            true: __assign({}, colorHelpers.isWarning),
        },
    },
    _a));

export { Block, Button, Footer, Icon, Notification, Placeholder, Popover, Section, SpacerLine, Tag, config, createTheme, css, getCssText, globalCss, keyframes, styled, theme };
