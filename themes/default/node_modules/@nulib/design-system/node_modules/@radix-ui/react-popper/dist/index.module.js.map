{"mappings":"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","sources":["packages/react/popper/src/index.ts","packages/react/popper/src/Popper.tsx"],"sourcesContent":["export {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n} from './Popper';\nexport type {\n  PopperProps,\n  PopperAnchorProps,\n  PopperContentProps,\n  PopperArrowProps,\n} from './Popper';\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = typeof SIDE_OPTIONS[number];\ntype Align = typeof ALIGN_OPTIONS[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    React.useEffect(() => {\n      // Consumer can anchor the popper to something that isn't\n      // a DOM node e.g. pointer position, so we override the\n      // `anchorRef` with their virtual ref in this case.\n      context.onAnchorChange(virtualRef?.current || ref.current);\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\nconst [PositionContextProvider, usePositionContext] = createPopperContext(CONTENT_NAME, {\n  hasParent: false,\n  positionUpdateFns: new Set<() => void>(),\n});\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ElementRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  avoidCollisions?: boolean;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      avoidCollisions = true,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { reference, floating, strategy, x, y, placement, middlewareData, update } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: autoUpdate,\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions\n          ? shift({\n              mainAxis: true,\n              crossAxis: false,\n              limiter: sticky === 'partial' ? limitShift() : undefined,\n              ...detectOverflowOptions,\n            })\n          : undefined,\n        arrow ? floatingUIarrow({ element: arrow, padding: arrowPadding }) : undefined,\n        avoidCollisions ? flip({ ...detectOverflowOptions }) : undefined,\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached ? hide({ strategy: 'referenceHidden' }) : undefined,\n      ].filter(isDefined),\n    });\n\n    // assign the reference dynamically once `Content` has mounted so we can collocate the logic\n    useLayoutEffect(() => {\n      reference(context.anchor);\n    }, [reference, context.anchor]);\n\n    const isPlaced = x !== null && y !== null;\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    const { hasParent, positionUpdateFns } = usePositionContext(CONTENT_NAME, __scopePopper);\n    const isRoot = !hasParent;\n\n    React.useLayoutEffect(() => {\n      if (!isRoot) {\n        positionUpdateFns.add(update);\n        return () => {\n          positionUpdateFns.delete(update);\n        };\n      }\n    }, [isRoot, positionUpdateFns, update]);\n\n    // when nested contents are rendered in portals, they are appended out of order causing\n    // children to be positioned incorrectly if initially open.\n    // we need to re-compute the positioning once the parent has finally been placed.\n    // https://github.com/floating-ui/floating-ui/issues/1531\n    React.useLayoutEffect(() => {\n      if (isRoot && isPlaced) {\n        Array.from(positionUpdateFns)\n          .reverse()\n          .forEach((fn) => requestAnimationFrame(fn));\n      }\n    }, [isRoot, isPlaced, positionUpdateFns]);\n\n    const commonProps = {\n      'data-side': placedSide,\n      'data-align': placedAlign,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        ...contentProps.style,\n        // if the PopperContent hasn't been placed yet (not all measurements done)\n        // we prevent animations so that users's animation don't kick in too early referring wrong sides\n        animation: !isPlaced ? 'none' : undefined,\n        // hide the content if using the hide middleware and should be hidden\n        opacity: middlewareData.hide?.referenceHidden ? 0 : undefined,\n      },\n    };\n\n    return (\n      <div\n        ref={floating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          position: strategy,\n          left: 0,\n          top: 0,\n          transform: isPlaced\n            ? `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`\n            : 'translate3d(0, -200%, 0)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n        }}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          {isRoot ? (\n            <PositionContextProvider\n              scope={__scopePopper}\n              hasParent\n              positionUpdateFns={positionUpdateFns}\n            >\n              <Primitive.div {...commonProps} />\n            </PositionContextProvider>\n          ) : (\n            <Primitive.div {...commonProps} />\n          )}\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ElementRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = Radix.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isDefined<T>(value: T | undefined): value is T {\n  return value !== undefined;\n}\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n"],"names":["createPopperScope","Popper","PopperAnchor","PopperContent","PopperArrow","Root","Anchor","Content","Arrow","SIDE_OPTIONS","ALIGN_OPTIONS","React","useFloating","autoUpdate","offset","shift","limitShift","hide","arrow","floatingUIarrow","flip","ArrowPrimitive","useComposedRefs","createContextScope","Primitive","useLayoutEffect","useSize","POPPER_NAME","createPopperContext","PopperProvider","usePopperContext","props","__scopePopper","children","anchor","setAnchor","useState","ANCHOR_NAME","forwardRef","forwardedRef","virtualRef","anchorProps","context","ref","useRef","composedRefs","useEffect","onAnchorChange","current","CONTENT_NAME","PopperContentProvider","useContentContext","PositionContextProvider","usePositionContext","hasParent","positionUpdateFns","Set","side","sideOffset","align","alignOffset","arrowPadding","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","avoidCollisions","contentProps","content","setContent","node","setArrow","arrowSize","arrowWidth","width","arrowHeight","height","desiredPlacement","top","right","bottom","left","boundary","Array","isArray","hasExplicitBoundaries","length","detectOverflowOptions","padding","filter","isNotNull","altBoundary","reference","floating","strategy","x","y","placement","middlewareData","update","whileElementsMounted","middleware","mainAxis","alignmentAxis","crossAxis","limiter","undefined","element","transformOrigin","isDefined","isPlaced","placedSide","placedAlign","getSideAndAlignFromPlacement","arrowX","arrowY","cannotCenterArrow","centerOffset","contentZIndex","setContentZIndex","window","getComputedStyle","zIndex","isRoot","add","delete","from","reverse","forEach","fn","requestAnimationFrame","commonProps","style","animation","opacity","referenceHidden","position","transform","Math","round","minWidth","join","ARROW_NAME","OPPOSITE_SIDE","arrowProps","contentContext","baseSide","onArrowChange","visibility","shouldHideArrow","display","value","options","name","data","rects","isArrowHidden","noArrowAlign","start","center","end","arrowXCenter","arrowYCenter","split"],"version":3,"file":"index.module.js.map"}