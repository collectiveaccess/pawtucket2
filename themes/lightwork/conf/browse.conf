cache_timeout = 0

#
# 
#
browseTypes = {
	artworks = {
		displayName = _(Artworks),
		labelSingular = _("artwork"),
 		labelPlural = _("artworks"),
		table = ca_objects,
		
		restrictToTypes = [artwork],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		#excludeFieldsFromSearch = [ca_entities.entity_id],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		sortBy = {
			Artist = ca_entity_labels.surname;ca_entity_labels.forename,		
			Catalog Number = ca_objects.accession,
			Title = ca_object_labels.name_sort,
			Date = ca_objects.date;
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Catalog Number = desc,
			Title = asc,
			Artist = asc,
			Date = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	publications = {
		displayName = _(Publications),
		labelSingular = _("publication"),
 		labelPlural = _("publications"),
		table = ca_objects,
		
		restrictToTypes = [publication],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
		},
		sortBy = {
			Title = ca_objects.idno_sort
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	artists = {
		displayName = _(Artists),
		labelSingular = _("artist"),
 		labelPlural = _("artists"),   
		table = ca_entities,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		options = {
			selectMediaUsingTypes = [artwork],
		},
		sortBy = {
			Name = ca_entities.preferred_labels.surname,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}	
}
ca_objects = {
	name = _("Objects"),
	facets = {	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrition_to_relationship_types = [artist],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("artist"),
			label_plural = _("artists"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		publication_facet = {
			type = attribute,
			element_code = pub_type,
			
			group_mode = none,
			
			label_singular = _("category"),
			label_plural = _("category"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},		
		material_facet = {
			type = attribute,
			element_code = medium,
			
			group_mode = none,
			
			label_singular = _("medium"),
			label_plural = _("medium"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		gender_facet = {
			type = attribute,
			element_code = gender,
			relative_to = ca_entities,
			
			group_mode = none,
			
			label_singular = _("Artist Gender"),
			label_plural = _("Artist Gender"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		citizenship_facet = {
			type = attribute,
			element_code = citizenship,
			relative_to = ca_entities,
			
			group_mode = none,
			
			label_singular = _("Artist Citizenship"),
			label_plural = _("Artist Citizenship"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},	
		nationality_facet = {
			type = attribute,
			element_code = nationality,
			relative_to = ca_entities,
			
			group_mode = none,
			
			label_singular = _("Artist Nationality"),
			label_plural = _("Artist Nationality"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},	
		cultural_facet = {
			type = attribute,
			element_code = cultural,
			relative_to = ca_entities,
			
			group_mode = none,
			
			label_singular = _("Artist Heritage"),
			label_plural = _("Artist Heritage"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},					
		lw_relationship_facet = {
			type = attribute,
			element_code = lw_relationship.Relationship,
			relative_to = ca_entities,
			
			group_mode = none,
			
			label_singular = _("Light Work Relationship"),
			label_plural = _("Light Work Relationship"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		lw_relationship_year_facet = {
			type = normalizedDates,
			element_code = lw_relationship.lwdate,
			normalization = years,
			relative_to = ca_entities,
			
			group_mode = none,
			
			label_singular = _("Light Work Relationship Date"),
			label_plural = _("Light Work Relationship Date"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},								
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 1,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			show_all_when_first_facet = 0,
			
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("occurrence"),
			label_plural = _("occurrences"),
			description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;â¬…&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("term"),
			label_plural = _("terms"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},
	}
}
ca_entities = {
	name = _("Entities"),
	facets = {
		artist_facet = {
			type = label,
			restrict_to_types = [],
			preferred_labels_only = 1,
			order_by_label_fields = [surname, forename, middlename],
			
			group_mode = alphabetical,
			natural_sort = 0,
			
			label_singular = _("Artist"),
			label_plural = _("Artists")			
		},	
		gender_facet = {
			type = attribute,
			element_code = gender,
			
			group_mode = none,
			
			label_singular = _("Artist Gender"),
			label_plural = _("Artist Gender"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		citizenship_facet = {
			type = attribute,
			element_code = citizenship,
			
			group_mode = none,
			
			label_singular = _("Artist Citizenship"),
			label_plural = _("Artist Citizenship"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},	
		nationality_facet = {
			type = attribute,
			element_code = nationality,
			
			group_mode = none,
			
			label_singular = _("Artist Nationality"),
			label_plural = _("Artist Nationality"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},	
		cultural_facet = {
			type = attribute,
			element_code = cultural,
			
			group_mode = none,
			
			label_singular = _("Artist Heritage"),
			label_plural = _("Artist Heritage"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},	
		lw_relationship_facet = {
			type = attribute,
			element_code = lw_relationship.Relationship,
			
			group_mode = none,
			
			label_singular = _("Light Work Relationship"),
			label_plural = _("Light Work Relationship"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		lw_relationship_year_facet = {
			type = normalizedDates,
			element_code = lw_relationship.lwdate,
			normalization = years,
			
			group_mode = none,
			
			label_singular = _("Light Work Relationship Date"),
			label_plural = _("Light Work Relationship Date"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		publication_facet = {
			type = authority,
			table = ca_objects,
			generate_facets_for_types = 0,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [publication],
			
			individual_group_display = 0,
			
			show_all_when_first_facet = 0,
			
			groupings = {
				label = _("Name"), 
			},
			
			group_mode = alphabetical,
			
			label_singular = _("Light Work Publication"),
			label_plural = _("Light Work Publications"),
			description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		},				
	}
}
views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class = 
