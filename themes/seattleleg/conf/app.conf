# -------------------
# Registered user features
# -------------------
dontAllowRegistrationAndLogin = 0
dont_approve_logins_on_registration = 1
email_notification_for_new_registrations = 1
dont_moderate_comments = 0
dont_email_notification_for_new_comments = 0

# Set this to disable the "classroom" feature
disable_classroom = 1
# Set this to disable the "lightbox" feature
disable_lightbox = 0

# ---------------------
# User submissions
# ---------------------
use_submission_interface = 0

#
# Set this if you want urls that refer to specified items to use the identifier 
# rather than CollectiveAccess internal ID. The former is more descriptive but will
# not work if you have duplicate identifiers in your catalogue!
#
use_identifiers_in_urls = 0

dont_enforce_access_settings = 0

#
# Front page set code
#
front_page_set_code = frontPage

#
# Allow PHP code in content-managed site pages
#
# By default only value tags in the form {{{tag-name}}} are allowed in Pawtucket site page templates. 
# If you need the flexibility and power afforded by direct embedding of PHP code in your templates
# set this option to a non-zero value. Note that enabling this option will allow execution of ANY
# code embedded in the template on EVERY page load. Depending upon your point of view this is either a
# feature or a security hole. It doesn't have to be a problem, but keep it in mind...
#
allow_php_in_site_page_templates = 0

# By default Pawtucket will only load third-party Javascript from sources used by standard user interface elements
# You can add any theme-specific Javascript sources here. Separate the urls for each source with a space.
content_security_policy_include = 

#
# Configuration for Excel (xlsx), CSV and tab export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
export_formats = {
	ca_objects = {
		excel = {
			name = Excel (basic information),
			type = xlsx,
			columns = {
				Type = {template = "<ifdef code='^ca_objects.type_id'>^ca_objects.type_id</ifdef>"},
				File Number = {template = "<if rule='^ca_objects.type_id =~ /Clerk/'>^ca_objects.idno</if><if rule='^ca_objects.type_id =~ /Comptroller/'>^ca_objects.idno</if><ifdef code='ca_objects.RESN'>^ca_objects.RESN%trim=1</ifdef><if rule='^ca_objects.type_id =~ /Ordinance/'><ifdef code='ca_objects.ORDN'>^ca_objects.ORDN%trim=1</ifdef></if><if rule='^ca_objects.type_id =~ /Council/'><ifdef code='ca_objects.CBN'>^ca_objects.CBN%trim=1</ifdef></if>"},
				Title = {template = "<ifdef code='^ca_objects.preferred_labels.name'>^ca_objects.preferred_labels.name</ifdef>"},
				Date = {template = ^ca_objects.search_date},
				Sponsor = {template = ^ca_objects.SPON},
				Committee = {template = ^ca_objects.COMM},
				Introduced = {template = ^ca_objects.DTIR},
				Heard In Committee = {template = ^ca_objects.DCMR},
				Filed = {template = ^ca_objects.DTF},
				Vote = {template = ^ca_objects.VOTE},
				Status = {template = ^ca_objects.STAT},
				Committee Vote = {template = ^ca_objects.CMV},
				Committee Recommendation = {template = ^ca_objects.CMR},
				Link / Electronic Copy= {template = "https://seattleleg.whirl-i-gig.com/index.php/Detail/objects/^ca_objects.object_id"},
				#Link / Electronic Copy= {template = "^ca_objects.document.doc_link, ^ca_objects.URL"},
				# Electronic Copy = {template = ^ca_objects.document.doc_link},
				Index Terms = {template = ^ca_objects.index},
				Comments = {template = ^ca_objects.MISC},
			}
		}
	}
}

#
# Configuration for Excel (xlsx) and PowerPoint (pptx) export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
# export_formats = {
# 	ca_objects = {
# 		basic_excel = {
# 			name = Excel (basic information),
# 			filename = ObjectResults,
# 			type = xlsx,
# 			columns = {
# 				Image = {
# 					template = ^ca_object_representations.media.large
# 				},
# 				Object = {
# 					template = ^ca_objects.preferred_labels.name (^ca_objects.idno)
# 				},
# 				Description = {
# 					template = ^ca_objects.description
# 				},
# 				Date = {
# 					template = ^ca_objects.creation_date
# 				}
# 			}
# 		},
# 		basic_ppt = {
# 			name = PowerPoint (basic information),
# 			filename = ObjectResults,
# 			type = pptx,
# 			columns = {
# 				Image = {
# 					template = ^ca_object_representations.media.large,
# 					width = 4in,
# 					height = 3.5in,
# 					x = 0.5in,
# 					y = 1.5in
# 				},
# 				Object = {
# 					template = ^ca_objects.preferred_labels.name (^ca_objects.idno),
# 					width = 10in,
# 					height = 1in,
# 					x = 0in,
# 					y = 0.25in,
# 					size = 20px,
# 					bold = 1,
# 					color = 000000,
# 					align = center
# 				},
# 				Description = {
# 					template = ^ca_objects.description,
# 					width = 3in,
# 					height = 5in,
# 					x = 6.5in,
# 					y = 1.5in,
# 					size = 12px,
# 					color = 000000,
# 					align = left
# 				},
# 				Date = {
# 					template = ^ca_objects.creation_date,
# 					width = 1.5in,
# 					height = 15px,
# 					x = 8.5in,
# 					y = 7.1in,
# 					size = 12px,
# 					color = 000000
# 				}
# 			}
# 		}
# 	}
# }


#
# Display template used to format information text at bottom of media overlay. Template is evaluated relative to the item with which the media is
# associated. If left blank preferred label + identifier of the item associated with the media is displayed.
#
media_overlay_titlebar_template =

#
# Representation versions to provide download option for in media viewer. If omitted then no download control is displayed
# (Uncomment the directive below to enable downloads)
#
#ca_object_representation_download_versions = [original]

#
# Configuration for image comparison interface. Set first key to table name (for now only ca_objects are supported)
# and second level keys to option names with values. 
# 
compare_images = {
	ca_objects = {
		# template to use when displaying object name within compare interface
		title_template = ^ca_objects.preferred_labels.name
	}
}

# -------------------------
# User Registration Security
# -------------------------
# 
# Configuration for registration security method
# This can either be set to sum_equation (for basic arithmetic challenge question: 4+7=?) or captcha, which implements a Google reCaptcha
# If you select reCaptcha, you will have to register the application and provide two API keys to allow google to process the captcha
# You can do so at https://www.google.com/recaptcha
# Configure keys in setup.php - __CA_GOOGLE_RECAPTCHA_KEY__ and __CA_GOOGLE_RECAPTCHA_SECRET_KEY__ - so they are not commited into git and made public
#
registration_security = captcha

# -------------------------
# User Registration Group Code
# -------------------------
# enable to allow users to join user groups with a code during registration
#
registration_show_group_code = 0


# --------------------
# Alt text templates for media
# --------------------
ca_objects_alt_text_template = "<case><ifnotdef code='ca_object_representations.preferred_labels.name'>^ca_objects.preferred_labels.name</ifnotdef><if rule='^ca_object_representations.preferred_labels.name =~ /[BLANK]/'>^ca_objects.preferred_labels.name</if><if rule='^ca_object_representations.preferred_labels.name !~ /[BLANK]/'>^ca_object_representations.preferred_labels.name</if></case>"
ca_object_representations_alt_text_template = "<case><ifnotdef code='ca_object_representations.preferred_labels.name'>^ca_objects.preferred_labels.name</ifnotdef><if rule='^ca_object_representations.preferred_labels.name =~ /[BLANK]/'>^ca_objects.preferred_labels.name</if><if rule='^ca_object_representations.preferred_labels.name !~ /[BLANK]/'>^ca_object_representations.preferred_labels.name</if></case>"

# --------------------
# Formatting of download file name.
# --------------------
# Can be one of the following:
# idno, idno_and_version, idno_and_rep_id_and_version, original_name
#
# You may also set this to a display template evaluated relative to representation being
# downloaded. Ex. "DOWNLOAD_^ca_object_representations.original_filename" will name the file
# using the originally uploaded file name prefixed with "DOWNLOAD_"; "^ca_object_representations.md5"
# will name the downloaded file with the MD5 checksum of the originally uploaded file.
# 
# Your template should not include an extension as it will be added to the end of your
# template. Values that include non-alphanumeric values such as mimetype will have those
# characters converted to underscores. You can surround tags with curly brackets {} to 
# ensure that your tags don't blend into the file name. An example template that 
# includes idno and original file name:
#
#      download_{^ca_object_representations.idno}<ifdef code='ca_object_representations.original_filename'>_{^ca_object_representations.original_filename}</ifdef>
#
# For TIFF media from object 2016.2 with an originally uploaded name of test_file.jpg this
# template will return the file name "download_2016_2_test_file.tiff"
#
# You can set the naming policy on a per-table basis (Eg. representations related to an object 
# can be named following one format and representations related to an occurrence another) using
# the <table name>_downloaded_file_naming directive (Ex. ca_objects_downloaded_file_naming = idno_and_version)
#
# You can set a global policy to be applied if a table-specific policy is not defined using the
# downloaded_file_naming directive.
# 
downloaded_file_naming = original_name

# -----------------------
# Global template values
# -----------------------
# Globals are text values that may be set in the Pawtucket web UI and substituted
# into any view template, including headers and footers. Values defined here 
# will be editable in the "Global Values Editor" (available to users with the can_edit_theme_global_values priv)
# and usable in templates under their name (Eg. {{{operating_hours}}} in the example below).
#
# Options controlling how the editor displays the value may be set for each global. Width and height control the size 
# of the element; usewysiwygeditor enables a "wysiwyg" rich text editor for formatted text.
#
global_template_values = {
	front_preamble = {
		name = Front page preamble,
		description = Front page preamble,
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	front_addendum = {
		name = Front page addendum,
		description = Front page addendum,
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	detail_text_not_online = {
		name = Detail page message when text is not available online,
		description = Detail page message when text is not available online,
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	mayor_signature_approval_date = {
		name = "Detail page modal text for mayor's signature approval date",
		description = "Detail page modal text for mayor's signature approval date",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	combined_search_description = {
		name = "Combined search form description",
		description = "Combined search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	council_bills_ordinances_search_description = {
		name = "Council Bills/Ordinances search form description",
		description = "Council bills/ordinances search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	resolutions_search_description = {
		name = "Resolutions search form description",
		description = "Resolutions search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	comptroller_clerk_files_search_description = {
		name = "Comptroller/Clerk Files search form description",
		description = "Comptroller/Clerk Files search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	agendas_search_description = {
		name = "Agendas search form description",
		description = "Agendas search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	minutes_search_description = {
		name = "Minutes search form description",
		description = "Minutes search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	committee_search_description = {
		name = "Committee search form description",
		description = "Committee search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	meeting_search_description = {
		name = "Meeting search form description",
		description = "Meeting search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	combined_results_description = {
		name = "Combined results description",
		description = "Combined results description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	council_bills_ordinances_results_description = {
		name = "Council Bills/Ordinances results description",
		description = "Council bills/ordinances results description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	resolutions_comptroller_clerk_files_result_description = {
		name = "Resolutions/Comptroller/Clerk Files search form description",
		description = "Resolutions/Comptroller/Clerk Files search form description",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	},
	results_export_info = {
		name = "Export results information",
		description = "Export results information",
		width = 600px,
		height = 100px,
		usewysiwygeditor = 1
	}
}
