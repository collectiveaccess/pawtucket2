cache_timeout = 0
# Highlight search terms in results?
do_highlighting = 0


# --- array of browseTypes keys to include in general search - this also controls the order blocks of results appear in general search
generalSearchTargets = [collections, entities, occurrences, objects]

browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		restrictToTypes = [],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, map
		views = {
			list = {
				result_caption = "<l>^ca_objects.preferred_labels</l>",
				image_format = contain, # --- contain or cover - default is cover
				list_format = image, # --- image or text where text is a simple grid of cards with no media
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
	},

}

views = {
	list = {
		icon = bi-list-task
	},
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 200

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

ca_objects = {
	name = _("Objects"),

	facets = {

		sponsor = {
			type = attribute,
			element_code = SPON,
						
			label_singular = _("Sponsor"),
			label_plural = _("Sponsor"),
		}

		comm_ref = {
			type = attribute,
			element_code = COMM,
						
			label_singular = _("Committee Referral"),
			label_plural = _("Committee Referral"),
		}

		index_terms = {
			type = attribute,
			element_code = index,
						
			label_singular = _("Index Terms"),
			label_plural = _("Index Terms"),
		}
	},
}