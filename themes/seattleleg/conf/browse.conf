cache_timeout = 0
# Highlight search terms in results?
do_highlighting = 0


# --- array of browseTypes keys to include in general search - this also controls the order blocks of results appear in general search
generalSearchTargets = [collections, entities, occurrences, objects]

browseTypes = {
	# --- combined excludes agendas and meetings
	combined = {
		displayName = _("Combined Legislative Record Search"),
		labelSingular = _("Combined Legislative Record"),
 		labelPlural = _("Combined Legislative Records"),
		table = ca_objects,
		restrictToTypes = [council_bill, ordinance, resolution, comptroller_file, clerk_file],
		# view = Search/ca_objects_advanced_search_combined_html.php, 
		view = Search/ca_objects_advanced_search_objects_html.php, 
		itemsPerPage = 10,
		
		sortBy = {
			Date = ca_objects.DTF,
			Type = ca_objects.type_id,
			Title = ca_object_labels.name,
		},

		sortDirection = {
			Date = desc,
			Type = asc,
			Title = asc
		},

		views = {
			list = {
				result_caption = "<l>^ca_objects.preferred_labels</l>",
			}
		},

		fieldBundles = {
			combined = {
				type = {
					label = Type,
					bundle = ca_objects.type_id
				},
				text = {
					label = Text,
					bundle = ca_objects.TX
				},
				sponsor = {
					label = Sponsor,
					bundle = ca_objects.SPON
				},
				committee = {
					label = Committee,
					bundle = ca_objects.COMM
				},
				index_terms = {
					label = Index terms,
					bundle = ca_objects.index
				},
				introduced = {
					label = Introduced,
					bundle = ca_objects.DTIR
				},
				passed = {
					label = Passed by council,
					bundle = ca_objects.DTSI
				},
				
			}
		},
		excludeFieldsFromSearch = [ca_objects.object_id, ca_objects.SERNUM]
	},
	bills = {
		displayName = _("Seattle City Council Bills and Ordinances"),
		labelSingular = _("Seattle City Council Bills and Ordinances"),
 		labelPlural = _("Seattle City Council Bills and Ordinances"),
		table = ca_objects,
		restrictToTypes = [council_bill, ordinance],
		sortBy = {
			Filed = ca_objects.DTF,
			Passed = ca_objects.DTSI,
			Ordinance_Number = ca_objects.ORDN,
			Title = ca_object_labels.name,
			Council_Bill_Number = ca_objects.CBN,
		},

		sortDirection = {
			Filed = desc,
			Passed = desc
			Ordinance_Number = asc,
			Title = asc,
			Council_Bill_Number = asc,
		},

		views = {
			list = {
				result_caption = "<l>^ca_objects.preferred_labels%truncate=140&ellipsis=1</l>",
			}
		},
		excludeFieldsFromSearch = [ca_objects.object_id, ca_objects.SERNUM],
	},
	resolutions = {
		displayName = _("Seattle City Council Resolutions"),
		labelSingular = _("Seattle City Council Resolutions"),
 		labelPlural = _("Seattle City Council Resolutions"),
		table = ca_objects,
		restrictToTypes = [resolution],
		
		sortBy = {
			Date = ca_objects.DTF,
			Title = ca_object_labels.name
		},

		sortDirection = {
			Date = desc,
			Title = asc
		},
		
		views = {
			list = {
				result_caption = "<l>^ca_objects.preferred_labels%truncate=140&ellipsis=1</l>",
			}
		},
		excludeFieldsFromSearch = [ca_objects.object_id, ca_objects.SERNUM]
	},
	clerk = {
		displayName = _("Seattle Comptroller/Clerk Files Index Search"),
		labelSingular = _("Seattle Comptroller/Clerk Files Index"),
 		labelPlural = _("Seattle Comptroller/Clerk Files Indexes"),
		table = ca_objects,
		restrictToTypes = [comptroller_file, clerk_file],
		
		sortBy = {
			Date = ca_objects.DTF,
			Title = ca_object_labels.name,
			Type = ca_objects.type_id,
		},

		sortDirection = {
			Date = desc,
			Title = asc,
			Type = asc
		},

		views = {
			list = {
				result_caption = "<l>^ca_objects.preferred_labels%truncate=140&ellipsis=1</l>",
			}
		},
		excludeFieldsFromSearch = [ca_objects.object_id, ca_objects.SERNUM]
	},
	minutes = {
		displayName = _("Seattle City Council Minutes"),
		labelSingular = _("Seattle City Council Minutes"),
 		labelPlural = _("Seattle City Council Minutes"),
		table = ca_objects,
		restrictToTypes = [minutes],
		# view = Search/ca_objects_advanced_search_minutes_html.php, 
		sortBy = {
			Date = ca_objects.MDAT,
			Committee = ca_objects.COMM
		},

		sortDirection = {
			Date = desc,
			Committee = asc
		},

		views = {
			list = {
				result_caption = "<l>^ca_objects.preferred_labels%truncate=140&ellipsis=1</l>",
			}
		},
		excludeFieldsFromSearch = [ca_objects.object_id, ca_objects.SERNUM]
	},
	meetings = {
		displayName = _("City Council Meeting History"),
		labelSingular = _("City Council Meeting"),
 		labelPlural = _("City Council Meeting"),
		table = ca_occurrences,
		restrictToTypes = [meeting],
		
		sortBy = {
			Date = ca_occurrences.DATE,
			Title = ca_occurrences.preferred_labels,
		},
		
		sortDirection = {
			Date = desc,
			Title = asc,
		},

		views = {
			list = {
				result_caption = "<l>^ca_occurrences.preferred_labels</l>",
			}
		}
	},

	committees = {
		displayName = _(Committees),
		labelSingular = _("Committee"),
 		labelPlural = _("Committees"),
		table = ca_entities,
		restrictToTypes = [committee],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
	
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<l>^ca_entities.preferred_labels</l>",
				image_format = contain, # --- contain or cover - default is cover
				list_format = image, # --- image or text where text is a simple grid of cards with no media
			}
		},
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
	}

}

views = {
	list = {
		icon = bi-list-task
	},
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 200

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

ca_objects = {
	name = _("Objects"),

	facets = {

		sponsor = {
			type = attribute,
			element_code = SPON,
						
			label_singular = _("Sponsor"),
			label_plural = _("Sponsor"),
		},

#		comm_ref = {
#			type = attribute,
#			element_code = COMM,
#						
#			label_singular = _("Committee Referral"),
#			label_plural = _("Committee Referral"),
#		},
#
#		index_terms = {
#			type = attribute,
#			element_code = index,
#						
#			label_singular = _("Index Terms"),
#			label_plural = _("Index Terms"),
#		}
	},
}