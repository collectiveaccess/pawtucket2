cache_timeout = 0

#
# 
#
browseTypes = {
	coins = {
		displayName = _(Coins),
		labelSingular = _("coin"),
 		labelPlural = _("coins"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			obverse_reverse = {},
			obverse = {},
			reverse = {},
			list = {},
			map = {
				data = ca_objects.mint_link.georeference,
				width = 100%,
				height = 600px,
				minZoomLevel = 2,
				maxZoomLevel = 18,
				display = {
					labelTemplate = ,
					contentTemplate = "<div style='clear:left; float:left; margin:0px 10px 10px 0px;'><l>^ca_object_representations.media.icon</l></div><l><ifdef code='ca_objects.mint'>^ca_objects.mint, </ifdef><ifdef code='ca_objects.authority'>^ca_objects.authority, </ifdef><ifdef code='ca_objects.denomination'>^ca_objects.denomination, </ifdef><ifdef code='ca_objects.date_container.date_display'>^ca_objects.date_container.date_display</ifdef></l><div style='clear:both; border-bottom:1px solid #EDEDED; margin:5px 0px 5px 0px;'></div>"
				}
			},
#			map_hoard = {
#				data = ca_objects.hoard_link.georeference,
#				width = 100%,
#				height = 600px,
#				minZoomLevel = 2,
#				maxZoomLevel = 18,
#				display = {
#					labelTemplate = ,
#					contentTemplate = "<div style='clear:left; float:left; margin:0px 10px 10px 0px;'><l>^ca_object_representations.media.icon</l></div><l><ifdef code='ca_objects.mint'>^ca_objects.mint, </ifdef><ifdef code='ca_objects.authority'>^ca_objects.authority, </ifdef><ifdef code='ca_objects.denomination'>^ca_objects.denomination, </ifdef><ifdef code='ca_objects.date_container.date_display'>^ca_objects.date_container.date_display</ifdef></l><div style='clear:both; border-bottom:1px solid #EDEDED; margin:5px 0px 5px 0px;'></div>"
#				}
#			}
		},
		sortBy = {
			"Region" = ca_objects.region_link,
			"Acquisition Date" = ca_objects.idno,
			"Numismatic Catalogue" = ca_objects.region;ca_objects.mint;ca_objects.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			"Acquisition date" = asc,
			"Numismatic Catalogue" = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	}
}

views = {
	obverse = {
		icon = fa fa-square-o
	},
	reverse = {
		icon = fa fa-square
	},
	obverse_reverse = {
		icon = fa fa-clone
	},
	list = {
		icon = fa fa-th-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = fa fa-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

ca_objects = {
	name = _("Objects"),
	facets = {
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Image"),
			label_no = _("No image"),
			
			single_value = 1,
			
			label_singular = _("image available"),
			label_plural = _("image available"),
		},
		date_facet = {
			type = normalizedDates,
			element_code = date_container.date,
			normalization = years,
			
			group_mode = slider,
			
			label_singular = _("date"),
			label_plural = _("Dates")
		},
		weight_slider_facet = {
			type = normalizedWeight,
			element_code = weight,
			
			group_mode = slider,
			units = g,
			
			label_singular = _("Weight (grams)"),
			label_plural = _("Weights (grams)")
		},
		mint_facet = {
			type = attribute,
			element_code = mint,
			
			group_mode = none,
			multiple = true,
			
			label_singular = _("mint"),
			label_plural = _("mints")
		},
		material_facet = {
			type = attribute,
			element_code = material,
			
			group_mode = none,
			multiple = true,
			
			label_singular = _("material"),
			label_plural = _("materials")
		},
		period_facet = {
			type = attribute,
			element_code = period,
			
			group_mode = none,
			multiple = true,
			
			label_singular = _("period"),
			label_plural = _("periods")
		},
		inscriptions_facet = {
			type = attribute,
			element_code = inscriptions,
			
			group_mode = none,
			multiple = true,
			
			label_singular = _("inscription"),
			label_plural = _("inscriptions")
		},
		denomination_facet = {
			type = attribute,
			element_code = denomination,
			
			group_mode = none,
			multiple = true,
			
			label_singular = _("denomination"),
			label_plural = _("denominations")
		},
		icon_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			group_mode = hierarchical,
			#group_mode = alphabetical,
			multiple = true,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp; â¬… &nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("iconographic classifications"),
			label_plural = _("iconographic classification")
		}
	}
}
