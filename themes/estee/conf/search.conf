#cache_timeout = 86400
cache_timeout = 0

#
# Defines searches to be executed on a "multisearch" – a search across several types of records at once
#
#
multisearchTypes = {
	archival = {
		displayName = _(Archival Items),
		table = ca_objects,
		view = Search/ca_objects_search_subview_html.php,
		itemsPerPage = 10,
				
		# only return root records (no children)
		#omitChildRecords = 1,
		omitChildRecordsForTypes = [component],
		
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc
		},
		restrictToTypes = [item, av_item],
				
		excludeFieldsFromSearch = [ca_objects.record_notes, ca_objects.condition_rating, ca_objects.condition_date, ca_objects.condition_note, ca_objects.condition_issues, ca_objects.value_monetary, ca_objects.value_monetary, ca_objects.value_notes, ca_objects.value_date]
	},
	archival_container = {
		displayName = _(Archival Containers),
		table = ca_objects,
		view = Search/ca_objects_search_subview_html.php,
		itemsPerPage = 10,
				
		dontExpandTypesHierarchically = 1,
		
		# only return root records (no children)
		omitChildRecords = 1,
		#omitChildRecordsForTypes = [],
		
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc
		},
		restrictToTypes = [folder],
				
		excludeFieldsFromSearch = [ca_objects.record_notes, ca_objects.condition_rating, ca_objects.condition_date, ca_objects.condition_note, ca_objects.condition_issues, ca_objects.value_monetary, ca_objects.value_monetary, ca_objects.value_notes, ca_objects.value_date]
	},
	products = {
		displayName = _(Products),
		table = ca_objects,
		view = Search/ca_objects_search_subview_html.php,
		itemsPerPage = 10,
				
		# only return root records (no children)
		#omitChildRecords = 1,
		omitChildRecordsForTypes = [component],
		
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Relevance = _natural,
		},
		sortDirection = {
			Relevance = asc,
		},
		restrictToTypes = [product, component],
				
		excludeFieldsFromSearch = [ca_objects.record_notes, ca_objects.condition_rating, ca_objects.condition_date, ca_objects.condition_note, ca_objects.condition_issues, ca_objects.value_monetary, ca_objects.value_monetary, ca_objects.value_notes, ca_objects.value_date]
	},
	#	collections = {
#		displayName = _(Collections),
#		table = ca_collections,
#		restrictToTypes = [],
#		view = Search/ca_collections_search_subview_html.php,
#		itemsPerPage = 10,
		# --- sortControlType = dropdown or list
#		sortControlType = list,
#		sortBy = {
#			Relevance = _natural,
#			Name = ca_collection_labels.name
#		},
#		sortDirection = {
#			Relevance = asc,
#			Name = asc
#		}
#	},

	occurrences = {
		displayName = _(Collection Chronology),
		table = ca_occurrences,
		restrictToTypes = [chronology],
		view = Search/ca_occurrences_search_subview_html.php,
		# --- sortControlType = dropdown or list
		sortControlType = list,
		itemsPerPage = 12,
		itemsPerColumn = 2,
		
		sortBy = {
			Relevance = _natural,
			Date = ca_occurrences.manufacture_date
		},
		sortDirection = {
			Relevance = asc,
			Date = desc
		}
	},

	sets = {
		displayName = _(Stories),
		table = ca_sets,
		restrictToTypes = [public_presentation],
		view = Search/ca_sets_search_images_subview_html.php,
		# --- sortControlType = dropdown or list
		sortControlType = list,
		itemsPerPage = 10,
		
		sortBy = {
			Relevance = _natural,
			Name = ca_set_labels.name
		},
		sortDirection = {
			Relevance = asc,
			Name = asc
		}
	}
}
advancedSearchTypes = {
	objects = {
		displayName = _(Objects),
		table = ca_objects,
		restrictToTypes = [],
		view = Search/ca_objects_advanced_search_objects_html.php, 
		itemsPerPage = 10,
		
		sortBy = {
			Entity = ca_entity_labels.surname;ca_entity_labels.forename,
			Identifier = ca_objects.idno,
			Name = ca_object_labels.name
		}
	}
}
views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

#
# Other options
#

# default number of results per page/ajax load
defaultHitsPerBlock = 36

# add a wildcard "*" to the end of all searches? 
matchOnStem = 0

# Regex character class used when indexing; values matched will be used as token delimiters
# (in other words, the search expression will be broken into words wherever the matched characters are)
indexing_tokenizer_regex = ^\\pL\\pN\\pNd/_#\\@\\&\\-\\*•

# Regex character class used when searching; values matched will be used as token delimiters
# (this is the same thing as indexing_tokenizer_regex except that it's used when searching rather than indexing)
search_tokenizer_regex = ^\\pL\\pN\\pNd/_#\\@\\&\\-\\*•
