#cache_timeout = 3600
cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("Object"),
 		labelPlural = _("Objects"),
		table = ca_objects,
		
		restrictToTypes = [object],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
			},
		},
		sortBy = {
			Date = ca_objects.date.dates_value,
			Title = ca_object_labels.name,
			Identifier = ca_objects.idno,
			Relevance = _natural
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = desc,
			Title = desc,
			Identifier = asc,
			Relevance = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			extendedInformationTemplate = <ifdef code="ca_objects.description"><div>^ca_objects.description%length=200&ellipsis=1</div><hr/></ifdef>
		},
		facetGroup = objects
	},
	manuscripts = {
		displayName = _(Manuscripts),
		labelSingular = _("Manuscript"),
 		labelPlural = _("Manuscripts"),
		table = ca_objects,
		
		restrictToTypes = [object],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
			},
		},
		sortBy = {
			Date = ca_objects.date.dates_value,
			Title = ca_object_labels.name,
			Identifier = ca_objects.idno,
			Relevance = _natural
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = desc,
			Title = desc,
			Identifier = asc,
			Relevance = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			extendedInformationTemplate = <ifdef code="ca_objects.description"><div>^ca_objects.description%length=200&ellipsis=1</div><hr/></ifdef>
		},
		baseCriteria = {
			manuscript_facet = yes1,
		},
		facetGroup = objects
	},
	library_resources = {
		displayName = _("Library Resources"),
		labelSingular = _("Library Resource"),
 		labelPlural = _("Library Resources"),
		table = ca_objects,
		
		restrictToTypes = [library_resource],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
			},
		},
		sortBy = {
			Date = ca_objects.date.dates_value,
			Title = ca_object_labels.name,
			Identifier = ca_objects.idno,
			Relevance = _natural
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = desc,
			Title = desc,
			Identifier = asc,
			Relevance = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			extendedInformationTemplate = <ifdef code="ca_objects.description"><div>^ca_objects.description%length=200&ellipsis=1</div><hr/></ifdef>
		},		
		facetGroup = library
	},
	collections = {
		displayName = _(Manuscript Collections),
		labelSingular = _("Collection"),
 		labelPlural = _("Collections"),
		table = ca_collections,
		restrictToTypes = [],
		views = {
			list = {}
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Date = ca_collections.collection_date2.collection_date_inclusive,
			Title = ca_collection_labels.name,
			Identifier = ca_collections.idno,
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc,
			Identifier = desc,
			Title = asc,
			Date = asc
		}
	},
	entities = {
		displayName = _(People & Organizations),
		labelSingular = _("Person/Organization"),
 		labelPlural = _("People & Organizations"),
		table = ca_entities,
		restrictToTypes = [bipoc_ent],
		views = {
			list = {}
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Name = ca_entity_labels.surname;ca_entity_labels.forename,
			Identifier = ca_entities.idno,
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc,
			Identifier = desc,
			Name = asc
		}
	},
	events = {
		displayName = _(Events),
		labelSingular = _("Event"),
 		labelPlural = _("Events"),
		table = ca_occurrences,
		restrictToTypes = [event],
		views = {
			list = {}
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Name = ca_occurrence_labels.name,
			Identifier = ca_occurrences.idno,
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc,
			Identifier = desc,
			Name = asc
		}
	},
	vessels = {
		displayName = _(Vessels),
		labelSingular = _("Vessel"),
 		labelPlural = _("Vessels"),
		table = ca_entities,
		restrictToTypes = [vessel],
		views = {
			list = {}
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Name = ca_entity_labels.name_sort,
			Identifier = ca_entities.idno,
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc,
			Identifier = desc,
			Name = asc
		}
	}
}

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		aat_facet = {
			type = attribute,
			element_code = aat,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Object Type"),
			label_plural = _("Object Type"),
			facet_groups = [objects]
		},
		decade_facet = { #object browse
			type = normalizedDates,
			element_code = dates_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
			facet_groups = [objects]			
		},
		year_facet = {	#objects browse
			type = normalizedDates,
			element_code = dates_value,
			normalization = years,
			
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
			facet_groups = [objects]		
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [ind,org,bipoc_ent],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Person/Organization"),
			label_plural = _("People & Organizations"),
			facet_groups = [objects]
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = ["collection"],
			
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],

			label_singular = _("Manuscript Collection"),
			label_plural = _("Manuscript Collections"),
			facet_groups = [objects]
		},
		library_decade_facet = { #object browse
			type = normalizedDates,
			element_code = publication.publication_date,
			normalization = decades,
			
			
			group_mode = none,
			
			label_singular = _("Publication Date (Decade)"),
			label_plural = _("Publication Dates (Decade)"),
			description = _("Find objects according to publication date."),
			facet_groups = [library]			
		},
		library_year_facet = {	#objects browse
			type = normalizedDates,
			element_code = publication.publication_date,
			normalization = years,
			
			requires = library_decade_facet,
			
			group_mode = none,
			
			label_singular = _("Publication Date (Decade)"),
			label_plural = _("Publication Date (Decade)"),
			description = _("Find objects according to publication date."),
			facet_groups = [library]		
		},
		library_entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_relationship_types = [artist, editor],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Author/Editor/Compiler"),
			label_plural = _("Authors/Editors/Compilers"),
			facet_groups = [library]
		},
		publisher_facet = {
			type = attribute,
			element_code = publisher,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Publisher"),
			label_plural = _("Publishers"),
			facet_groups = [library]
		},
		series_journal_facet = {
			type = attribute,
			element_code = serial_title,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Series/Journal Title"),
			label_plural = _("Series/Journal Titles"),
			facet_groups = [library]
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("Has media"),
			label_plural = _("Has media"),
			facet_groups = [objects, library]
		},
		manuscript_facet =  = {
			type = attribute,
			element_code = featured,
			
			group_mode = none,
			
			label_singular = _("Manuscript?"),
			label_plural = _("Manuscript?"),
			facet_groups = [objects]
		},
		occurrence_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Events"),
			label_plural = _("Events"),
			facet_groups = [objects],
			requires = x
		}
	}
}
# Configuration for collection browse
ca_collections = {
	name = _("Manuscript Collections"),
	facets = {
		decade_facet = {
			type = normalizedDates,
			element_code = ca_collections.collection_date2.collection_date_inclusive,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_collections.collection_date2.collection_date_inclusive,
			normalization = years,
			
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Person/Organization"),
			label_plural = _("People & Organizations"),
		},
		# --- this isn't working
		has_media_facet = {
			type = has,
			
			table = ca_objects,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Yes"),
			label_no = _("No"),
			
			single_value = 1,
			
			label_singular = _("Has digitized items"),
			label_plural = _("Has digitized items")
		}
	}
}
ca_entities = {
	name = _("Entities"),
	facets = {
		person_status_facet = {
			type = attribute,
			element_code = person_status,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Person Status"),
			label_plural = _("Person Statuses"),
			include_on_people_landing = 1
		},
		occupation_facet = {
			type = attribute,
			element_code = list_occupation,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Occupation"),
			label_plural = _("Occupations")
		},
		role_facet = {
	        type = attribute,
	        relative_to = ca_entities_x_occurrences,
	        element_code = role,
			
			label_singular = _("Role"),
			label_plural = _("Roles")
	    },
		age_facet = {
			type = attribute,
			element_code = age,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Age"),
			label_plural = _("Ages")
		},
		race_facet = {
			type = attribute,
			element_code = list_race,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Race"),
			label_plural = _("Races"),
			include_on_people_landing = 1
		},
		gender_facet = {
			type = attribute,
			element_code = gender_sex,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Gender"),
			label_plural = _("Genders"),
			include_on_people_landing = 1
		}
	}
}
ca_occurrences = {
	name = _("Events"),
	facets = {
		type_facet = {
			type = attribute,
			element_code = event_type,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Type"),
			label_plural = _("types"),
			include_on_people_landing = 1
		},
		decade_facet = {
			type = normalizedDates,
			element_code = exhibit_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades")			
		},
		year_facet = {
			type = normalizedDates,
			element_code = exhibit_date,
			normalization = years,
			
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [ind,org,bipoc_ent],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Person/Organization"),
			label_plural = _("People & Organizations")
		},
		vessel_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [vessel],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Vessel"),
			label_plural = _("Vessels")
		},
		location_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_places_x_occurrences,
			individual_group_display = 1,
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 0,
			
			indefinite_article = a,
			label_singular = _("Location"),
			label_plural = _("Locations")
		},
		rolw_facet = {
			type = attribute,
			element_code = role,
			relative_to = ca_entities_x_occurrences,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Role"),
			label_plural = _("Roles")
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = Browse Objects

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to result col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =