cache_timeout = 3600

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("Object"),
 		labelPlural = _("Objects"),
		table = ca_objects,
		
		restrictToTypes = [object],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
			},
#			list = {},
# 			map = {
# 				data = ca_objects.georeference,
# 				width = 100%,
# 				height = 600px,
# 				minZoomLevel = 2,
# 				maxZoomLevel = 15,
# 				display = {
# 					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
# 					description_template = <p>^ca_objects.description</p>,
# 					icon = <div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div>	
# 				}
# 			},
# 			timeline = {
# 				data = ca_objects.creation_date,
# 				display = {
# 					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
# 					description_template = <p>^ca_objects.description</p>,
# 					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
# 					caption_template = <em>^ca_objects.caption</em>,
# 					image = ^ca_object_representations.media.small,
# 					icon = ^ca_object_representations.media.icon
# 				}
# 			}
		},
		sortBy = {
			Date = ca_objects.date.dates_value,
			Title = ca_object_labels.name,
			Identifier = ca_objects.idno,
			Relevance = _natural
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = desc,
			Title = desc,
			Identifier = asc,
			Relevance = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			extendedInformationTemplate = <ifdef code="ca_objects.description"><div>^ca_objects.description%length=200&ellipsis=1</div><hr/></ifdef>
		}
	},
	collections = {
		displayName = _(Manuscript Collections),
		labelSingular = _("Collection"),
 		labelPlural = _("Collections"),
		table = ca_collections,
		restrictToTypes = [],
		views = {
			list = {}
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		sortBy = {
			Date = ca_collections.collection_date2.collection_date_inclusive,
			Title = ca_collection_labels.name,
			Identifier = ca_collections.idno,
			Relevance = _natural
		},
		sortDirection = {
			Relevance = asc,
			Identifier = desc,
			Title = asc,
			Date = asc
		}
	}
}

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		aat_facet = {
			type = attribute,
			element_code = aat,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			
			label_singular = _("Object Type"),
			label_plural = _("Object Type"),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = years,
			
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Person/Organization"),
			label_plural = _("People & Organizations"),
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = ["collection"],
			
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],

			label_singular = _("Manuscript Collection"),
			label_plural = _("Manuscript Collections"),
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("Has media"),
			label_plural = _("Has media")
		},
	}
}
# Configuration for collection browse
ca_collections = {
	name = _("Manuscript Collections"),
	facets = {
		decade_facet = {
			type = normalizedDates,
			element_code = ca_collections.collection_date2.collection_date_inclusive,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_collections.collection_date2.collection_date_inclusive,
			normalization = years,
			
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Person/Organization"),
			label_plural = _("People & Organizations"),
		},
		# --- this isn't working
		has_media_facet = {
			type = has,
			
			table = ca_objects,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Yes"),
			label_no = _("No"),
			
			single_value = 1,
			
			label_singular = _("Has digitized items"),
			label_plural = _("Has digitized items")
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = Browse Objects

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to result col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =