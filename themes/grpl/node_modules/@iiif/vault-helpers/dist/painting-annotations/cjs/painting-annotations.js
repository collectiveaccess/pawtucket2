"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});function w(e){return e.type==="SpecificResource"?[e.source,{selector:e.selector}]:[e,{selector:null}]}const g={},P={get(e){return e},setMetaValue([e,n,o],c){const t=P.getResourceMeta(e,n),s=t?t[o]:void 0,r=typeof c=="function"?c(s):c;g[e]={...g[e]||{},[n]:{...(g[e]||{})[n]||{},[o]:r}}},getResourceMeta:(e,n)=>{const o=g[e];if(!!o)return n?o[n]:o}};function R(e=P){function n(t){const s=t?typeof t=="string"?e.get(t):t:null;if(!s)return[];const r=e.get(s.items),i=[];for(const l of r)i.push(...e.get(l.items));return i}function o(t,s=[]){const r=Array.isArray(t)?t:n(t),i=[];let l=null;const A=[];for(const d of r){if(d.type!=="Annotation")throw new Error("getPaintables() accept either a canvas or list of annotations");const y=e.get(d.body),b=Array.isArray(y)?y:[y];for(const m of b){const[h,{selector:M}]=w(m),u=(h.type||"unknown").toLowerCase();if(u==="choice"){const f=e.get(h.items),p=s.length?s.map(a=>f.find(S=>S.id===a)).filter(Boolean):[f[0]];p.length===0&&p.push(f[0]),l={type:"single-choice",items:f.map(a=>({id:a.id,label:a.label,selected:p.indexOf(a)!==-1})),label:m.label},b.push(...p);continue}i.indexOf(u)===-1&&i.push(u),A.push({type:u,resource:h,target:d.target,selector:M})}}return{types:i,items:A,choice:l}}function c(t){const{choice:s}=o(t);return s}return{getAllPaintingAnnotations:n,getPaintables:o,extractChoices:c}}exports.createPaintingAnnotationsHelper=R;exports.parseSpecificResource=w;
//# sourceMappingURL=painting-annotations.js.map
