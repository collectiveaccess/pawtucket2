{"version":3,"file":"styles.mjs","sources":["../../../src/compat.ts","../../../src/styles.ts"],"sourcesContent":["export type CompatVault = {\n  get: import('@iiif/vault').Vault['get'];\n  setMetaValue: import('@iiif/vault').Vault['setMetaValue'];\n  getResourceMeta: import('@iiif/vault').Vault['getResourceMeta'];\n};\n\nconst metaState: any = {};\nexport const compatVault: CompatVault = {\n  get(nonRef: any) {\n    return nonRef;\n  },\n  setMetaValue([id, meta, key], value) {\n    const oldValue = compatVault.getResourceMeta(id, meta);\n    const oldValueItem = oldValue ? oldValue[key] : undefined;\n    const newValue = typeof value === 'function' ? (value as any)(oldValueItem) : value;\n    metaState[id] = {\n      ...(metaState[id] || {}),\n      [meta]: {\n        ...((metaState[id] || {})[meta] || {}),\n        [key]: newValue,\n      },\n    };\n  },\n  getResourceMeta: ((resource: any, metaKey?: any) => {\n    const resourceMeta = metaState[resource as any] as any;\n\n    if (!resourceMeta) {\n      return undefined;\n    }\n    if (!metaKey) {\n      return resourceMeta;\n    }\n\n    return resourceMeta[metaKey];\n  }) as any,\n};\n","import type { Vault } from '@iiif/vault';\nimport { Reference } from '@iiif/presentation-3';\nimport { compatVault, CompatVault } from './compat';\n\nexport type StyleDefinition = Record<string, any>;\n\nexport type StyledHelper<S extends StyleDefinition> = {\n  applyStyles<Style extends StyleDefinition = S>(resource: any, scope: string, styles: Style[string]): void;\n  getAppliedStyles<Style extends StyleDefinition = S>(resource: any): Style | undefined;\n};\n\nexport function createStylesHelper<S extends StyleDefinition>(vault: CompatVault = compatVault): StyledHelper<S> {\n  return {\n    applyStyles<Style extends StyleDefinition = S>(\n      resource: string | Reference<any>,\n      scope: string,\n      styles: Style[string]\n    ) {\n      const id = typeof resource === 'string' ? resource : resource.id;\n      return vault.setMetaValue<Style[string]>([id, 'styles', scope], styles);\n    },\n    getAppliedStyles<Style extends StyleDefinition = S>(resource: string | Reference<any>): Style | undefined {\n      const id = typeof resource === 'string' ? resource : resource.id;\n      return vault.getResourceMeta<{ styles: Style }, 'styles'>(id, 'styles');\n    },\n  };\n}\n"],"names":[],"mappings":"AAMA,MAAM,YAAiB,CAAA;AAChB,MAAM,cAA2B;AAAA,EACtC,IAAI,QAAa;AACR,WAAA;AAAA,EACT;AAAA,EACA,aAAa,CAAC,IAAI,MAAM,GAAG,GAAG,OAAO;AACnC,UAAM,WAAW,YAAY,gBAAgB,IAAI,IAAI;AAC/C,UAAA,eAAe,WAAW,SAAS,OAAO;AAChD,UAAM,WAAW,OAAO,UAAU,aAAc,MAAc,YAAY,IAAI;AAC9E,cAAU,MAAM;AAAA,MACd,GAAI,UAAU,OAAO,CAAC;AAAA,MACtB,CAAC,OAAO;AAAA,QACN,IAAK,UAAU,OAAO,CAAA,GAAI,SAAS,CAAC;AAAA,QACpC,CAAC,MAAM;AAAA,MACT;AAAA,IAAA;AAAA,EAEJ;AAAA,EACA,iBAAkB,CAAC,UAAe,YAAkB;AAClD,UAAM,eAAe,UAAU;AAE/B,QAAI,CAAC,cAAc;AACV,aAAA;AAAA,IACT;AACA,QAAI,CAAC,SAAS;AACL,aAAA;AAAA,IACT;AAEA,WAAO,aAAa;AAAA,EACtB;AACF;ACxBgB,SAAA,mBAA8C,QAAqB,aAA8B;AACxG,SAAA;AAAA,IACL,YACE,UACA,OACA,QACA;AACA,YAAM,KAAK,OAAO,aAAa,WAAW,WAAW,SAAS;AAC9D,aAAO,MAAM,aAA4B,CAAC,IAAI,UAAU,KAAK,GAAG,MAAM;AAAA,IACxE;AAAA,IACA,iBAAoD,UAAsD;AACxG,YAAM,KAAK,OAAO,aAAa,WAAW,WAAW,SAAS;AACvD,aAAA,MAAM,gBAA6C,IAAI,QAAQ;AAAA,IACxE;AAAA,EAAA;AAEJ;;"}