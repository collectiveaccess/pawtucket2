{"version":3,"file":"styles.js","sources":["../../../src/compat.ts","../../../src/styles.ts"],"sourcesContent":["export type CompatVault = {\n  get: import('@iiif/vault').Vault['get'];\n  setMetaValue: import('@iiif/vault').Vault['setMetaValue'];\n  getResourceMeta: import('@iiif/vault').Vault['getResourceMeta'];\n};\n\nconst metaState: any = {};\nexport const compatVault: CompatVault = {\n  get(nonRef: any) {\n    return nonRef;\n  },\n  setMetaValue([id, meta, key], value) {\n    const oldValue = compatVault.getResourceMeta(id, meta);\n    const oldValueItem = oldValue ? oldValue[key] : undefined;\n    const newValue = typeof value === 'function' ? (value as any)(oldValueItem) : value;\n    metaState[id] = {\n      ...(metaState[id] || {}),\n      [meta]: {\n        ...((metaState[id] || {})[meta] || {}),\n        [key]: newValue,\n      },\n    };\n  },\n  getResourceMeta: ((resource: any, metaKey?: any) => {\n    const resourceMeta = metaState[resource as any] as any;\n\n    if (!resourceMeta) {\n      return undefined;\n    }\n    if (!metaKey) {\n      return resourceMeta;\n    }\n\n    return resourceMeta[metaKey];\n  }) as any,\n};\n","import type { Vault } from '@iiif/vault';\nimport { Reference } from '@iiif/presentation-3';\nimport { compatVault, CompatVault } from './compat';\n\nexport type StyleDefinition = Record<string, any>;\n\nexport type StyledHelper<S extends StyleDefinition> = {\n  applyStyles<Style extends StyleDefinition = S>(resource: any, scope: string, styles: Style[string]): void;\n  getAppliedStyles<Style extends StyleDefinition = S>(resource: any): Style | undefined;\n};\n\nexport function createStylesHelper<S extends StyleDefinition>(vault: CompatVault = compatVault): StyledHelper<S> {\n  return {\n    applyStyles<Style extends StyleDefinition = S>(\n      resource: string | Reference<any>,\n      scope: string,\n      styles: Style[string]\n    ) {\n      const id = typeof resource === 'string' ? resource : resource.id;\n      return vault.setMetaValue<Style[string]>([id, 'styles', scope], styles);\n    },\n    getAppliedStyles<Style extends StyleDefinition = S>(resource: string | Reference<any>): Style | undefined {\n      const id = typeof resource === 'string' ? resource : resource.id;\n      return vault.getResourceMeta<{ styles: Style }, 'styles'>(id, 'styles');\n    },\n  };\n}\n"],"names":["metaState","compatVault","nonRef","id","meta","key","value","oldValue","oldValueItem","newValue","resource","metaKey","resourceMeta","createStylesHelper","vault","scope","styles"],"mappings":"4GAMA,MAAMA,EAAiB,CAAA,EACVC,EAA2B,CACtC,IAAIC,EAAa,CACR,OAAAA,CACT,EACA,aAAa,CAACC,EAAIC,EAAMC,CAAG,EAAGC,EAAO,CACnC,MAAMC,EAAWN,EAAY,gBAAgBE,EAAIC,CAAI,EAC/CI,EAAeD,EAAWA,EAASF,GAAO,OAC1CI,EAAW,OAAOH,GAAU,WAAcA,EAAcE,CAAY,EAAIF,EAC9EN,EAAUG,GAAM,CACd,GAAIH,EAAUG,IAAO,CAAC,EACtB,CAACC,GAAO,CACN,IAAKJ,EAAUG,IAAO,CAAA,GAAIC,IAAS,CAAC,EACpC,CAACC,GAAMI,CACT,CAAA,CAEJ,EACA,gBAAkB,CAACC,EAAeC,IAAkB,CAClD,MAAMC,EAAeZ,EAAUU,GAE/B,GAAI,EAACE,EAGL,OAAKD,EAIEC,EAAaD,GAHXC,CAIX,CACF,ECxBgB,SAAAC,EAA8CC,EAAqBb,EAA8B,CACxG,MAAA,CACL,YACES,EACAK,EACAC,EACA,CACA,MAAMb,EAAK,OAAOO,GAAa,SAAWA,EAAWA,EAAS,GAC9D,OAAOI,EAAM,aAA4B,CAACX,EAAI,SAAUY,CAAK,EAAGC,CAAM,CACxE,EACA,iBAAoDN,EAAsD,CACxG,MAAMP,EAAK,OAAOO,GAAa,SAAWA,EAAWA,EAAS,GACvD,OAAAI,EAAM,gBAA6CX,EAAI,QAAQ,CACxE,CAAA,CAEJ"}