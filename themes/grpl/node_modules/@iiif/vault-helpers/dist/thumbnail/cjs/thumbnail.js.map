{"version":3,"file":"thumbnail.js","sources":["../../../src/compat.ts","../../../src/thumbnail.ts"],"sourcesContent":["export type CompatVault = {\n  get: import('@iiif/vault').Vault['get'];\n  setMetaValue: import('@iiif/vault').Vault['setMetaValue'];\n  getResourceMeta: import('@iiif/vault').Vault['getResourceMeta'];\n};\n\nconst metaState: any = {};\nexport const compatVault: CompatVault = {\n  get(nonRef: any) {\n    return nonRef;\n  },\n  setMetaValue([id, meta, key], value) {\n    const oldValue = compatVault.getResourceMeta(id, meta);\n    const oldValueItem = oldValue ? oldValue[key] : undefined;\n    const newValue = typeof value === 'function' ? (value as any)(oldValueItem) : value;\n    metaState[id] = {\n      ...(metaState[id] || {}),\n      [meta]: {\n        ...((metaState[id] || {})[meta] || {}),\n        [key]: newValue,\n      },\n    };\n  },\n  getResourceMeta: ((resource: any, metaKey?: any) => {\n    const resourceMeta = metaState[resource as any] as any;\n\n    if (!resourceMeta) {\n      return undefined;\n    }\n    if (!metaKey) {\n      return resourceMeta;\n    }\n\n    return resourceMeta[metaKey];\n  }) as any,\n};\n","import {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  ChoiceBody,\n  CollectionItemSchemas,\n  CollectionNormalized,\n  ContentResource,\n  DescriptiveNormalized,\n  ManifestNormalized,\n  Reference,\n} from '@iiif/presentation-3';\nimport {\n  FixedSizeImage,\n  FixedSizeImageService,\n  getFixedSizeFromImage,\n  ImageCandidate,\n  ImageCandidateRequest,\n  ImageServiceLoader,\n  UnknownSizeImage,\n  VariableSizeImage,\n} from '@atlas-viewer/iiif-image-api';\nimport { compatVault, CompatVault } from './compat';\n\nexport function createThumbnailHelper(\n  vault: CompatVault = compatVault,\n  dependencies: { imageServiceLoader?: ImageServiceLoader } = {}\n) {\n  const imageServiceLoader = dependencies.imageServiceLoader || new ImageServiceLoader();\n\n  async function getBestThumbnailAtSize(\n    input:\n      | string\n      | Reference<CollectionItemSchemas>\n      | Reference<'Collection'>\n      | Reference<'Manifest'>\n      | Reference<'Canvas'>\n      | Reference<'Annotation'>\n      | Reference<'AnnotationPage'>\n      | Reference<'ContentResource'>\n      | CollectionNormalized\n      | ManifestNormalized\n      | CanvasNormalized\n      | AnnotationNormalized\n      | AnnotationPageNormalized\n      | ContentResource\n      | undefined,\n    request: ImageCandidateRequest,\n    dereference?: boolean,\n    candidates: Array<ImageCandidate> = [],\n    dimensions?: { width: number; height: number }\n  ): Promise<{\n    best: null | undefined | FixedSizeImage | FixedSizeImageService | VariableSizeImage | UnknownSizeImage;\n    fallback: Array<ImageCandidate>;\n    log: string[];\n  }> {\n    const thumbnailNotFound = () =>\n      imageServiceLoader.getThumbnailFromResource(undefined as any, request, dereference, candidates);\n\n    if (!input) {\n      // We might have candidates already to pick from.\n      return await imageServiceLoader.getThumbnailFromResource(undefined as any, request, dereference, candidates);\n    }\n\n    if (typeof input === 'string') {\n      const fixed = getFixedSizeFromImage(input as any);\n      if (fixed) {\n        candidates.push(fixed);\n      }\n\n      return await imageServiceLoader.getThumbnailFromResource(undefined as any, request, dereference, candidates);\n    }\n\n    // Run through from ref, just in case.\n    const fullInput:\n      | string\n      | ManifestNormalized\n      | CollectionNormalized\n      | CanvasNormalized\n      | AnnotationNormalized\n      | AnnotationPageNormalized\n      | ContentResource\n      | undefined = vault.get(input as any, { skipSelfReturn: false }) as any;\n\n    if (typeof fullInput === 'string') {\n      return { best: getFixedSizeFromImage(fullInput as any), fallback: [], log: [] };\n    }\n\n    if (!fullInput) {\n      return await thumbnailNotFound();\n    }\n\n    const parseThumbnail = async (resource: DescriptiveNormalized) => {\n      if (resource && resource.thumbnail && resource.thumbnail.length) {\n        const thumbnail = vault.get<ContentResource>(resource.thumbnail[0]);\n        const potentialThumbnails = await imageServiceLoader.getImageCandidates(thumbnail as any, dereference);\n        if (potentialThumbnails && potentialThumbnails.length) {\n          candidates.push(...potentialThumbnails);\n        }\n      }\n    };\n\n    await parseThumbnail(fullInput as any);\n\n    switch (fullInput.type) {\n      case 'Annotation': {\n        // Grab the body.\n        const contentResources = Array.isArray(fullInput.body) ? fullInput.body : [fullInput.body];\n        // @todo this could be configuration.\n        const firstContentResources = vault.get<ContentResource>(contentResources[0]);\n        if (dimensions && !(firstContentResources as any).width) {\n          (firstContentResources as any).width = dimensions.width;\n          (firstContentResources as any).height = dimensions.height;\n        }\n\n        return await imageServiceLoader.getThumbnailFromResource(\n          firstContentResources as any,\n          request,\n          dereference,\n          candidates\n        );\n      }\n\n      case 'Canvas': {\n        const canvas = fullInput as CanvasNormalized;\n\n        return getBestThumbnailAtSize(canvas.items[0], request, dereference, candidates, {\n          width: canvas.width,\n          height: canvas.height,\n        });\n      }\n\n      // Unsupported for now.\n      case 'AnnotationPage': {\n        const annotationPage = fullInput as AnnotationPageNormalized;\n        return getBestThumbnailAtSize(annotationPage.items[0], request, dereference, candidates, dimensions);\n      }\n\n      case 'Choice': {\n        const choice: ChoiceBody = fullInput as any;\n        if (!choice.items || choice.items[0]) {\n          return await thumbnailNotFound();\n        }\n        // @todo this could also be configuration, just choosing the first choice.\n        return getBestThumbnailAtSize(choice.items[0] as any, request, dereference, candidates, dimensions);\n      }\n      case 'Collection': {\n        // This one is tricky, as the manifests may not have been loaded. But we will give it a shot.\n        const collection = fullInput as CollectionNormalized;\n        const firstManifest = collection.items[0];\n        if (!firstManifest) {\n          return await thumbnailNotFound();\n        }\n        return getBestThumbnailAtSize(firstManifest, request, dereference, candidates, dimensions);\n      }\n\n      case 'Manifest': {\n        const manifest = fullInput as ManifestNormalized;\n        const firstCanvas = manifest.items[0];\n        if (!firstCanvas) {\n          return await thumbnailNotFound();\n        }\n        return getBestThumbnailAtSize(firstCanvas, request, dereference, candidates, dimensions);\n      }\n\n      case 'SpecificResource':\n      case 'Image':\n      case 'Dataset':\n      case 'Sound':\n      case 'Text':\n      case 'TextualBody':\n      case 'Video':\n        if (dimensions && !(fullInput as any).width) {\n          (fullInput as any).width = dimensions.width;\n          (fullInput as any).height = dimensions.height;\n        }\n\n        return imageServiceLoader.getThumbnailFromResource(fullInput as any, request, dereference, candidates);\n\n      // Seems unlikely these would appear, but it would be an error..\n      case 'Service': // @todo could do something with vault.\n      case 'Range':\n      case 'AnnotationCollection':\n      case 'CanvasReference':\n      case 'ContentResource':\n        return await thumbnailNotFound();\n    }\n\n    return await thumbnailNotFound();\n  }\n\n  return {\n    getBestThumbnailAtSize,\n  };\n}\n"],"names":["metaState","compatVault","nonRef","id","meta","key","value","oldValue","oldValueItem","newValue","resource","metaKey","resourceMeta","createThumbnailHelper","vault","dependencies","imageServiceLoader","ImageServiceLoader","getBestThumbnailAtSize","input","request","dereference","candidates","dimensions","thumbnailNotFound","fixed","getFixedSizeFromImage","fullInput","thumbnail","potentialThumbnails","contentResources","firstContentResources","canvas","choice","firstManifest","firstCanvas"],"mappings":"0JAMA,MAAMA,EAAiB,CAAA,EACVC,EAA2B,CACtC,IAAIC,EAAa,CACR,OAAAA,CACT,EACA,aAAa,CAACC,EAAIC,EAAMC,CAAG,EAAGC,EAAO,CACnC,MAAMC,EAAWN,EAAY,gBAAgBE,EAAIC,CAAI,EAC/CI,EAAeD,EAAWA,EAASF,GAAO,OAC1CI,EAAW,OAAOH,GAAU,WAAcA,EAAcE,CAAY,EAAIF,EAC9EN,EAAUG,GAAM,CACd,GAAIH,EAAUG,IAAO,CAAC,EACtB,CAACC,GAAO,CACN,IAAKJ,EAAUG,IAAO,CAAA,GAAIC,IAAS,CAAC,EACpC,CAACC,GAAMI,CACT,CAAA,CAEJ,EACA,gBAAkB,CAACC,EAAeC,IAAkB,CAClD,MAAMC,EAAeZ,EAAUU,GAE/B,GAAI,EAACE,EAGL,OAAKD,EAIEC,EAAaD,GAHXC,CAIX,CACF,ECXO,SAASC,EACdC,EAAqBb,EACrBc,EAA4D,CAAA,EAC5D,CACA,MAAMC,EAAqBD,EAAa,oBAAsB,IAAIE,EAAmB,mBAErF,eAAeC,EACbC,EAgBAC,EACAC,EACAC,EAAoC,GACpCC,EAKC,CACD,MAAMC,EAAoB,IACxBR,EAAmB,yBAAyB,OAAkBI,EAASC,EAAaC,CAAU,EAEhG,GAAI,CAACH,EAEH,OAAO,MAAMH,EAAmB,yBAAyB,OAAkBI,EAASC,EAAaC,CAAU,EAGzG,GAAA,OAAOH,GAAU,SAAU,CACvB,MAAAM,EAAQC,wBAAsBP,CAAY,EAChD,OAAIM,GACFH,EAAW,KAAKG,CAAK,EAGhB,MAAMT,EAAmB,yBAAyB,OAAkBI,EAASC,EAAaC,CAAU,CAC7G,CAGA,MAAMK,EAQUb,EAAM,IAAIK,EAAc,CAAE,eAAgB,GAAO,EAE7D,GAAA,OAAOQ,GAAc,SAChB,MAAA,CAAE,KAAMD,EAAAA,sBAAsBC,CAAgB,EAAG,SAAU,CAAC,EAAG,IAAK,CAAA,GAG7E,GAAI,CAACA,EACH,OAAO,MAAMH,EAAkB,EAejC,OAFA,MAVuB,MAAOd,GAAoC,CAChE,GAAIA,GAAYA,EAAS,WAAaA,EAAS,UAAU,OAAQ,CAC/D,MAAMkB,EAAYd,EAAM,IAAqBJ,EAAS,UAAU,EAAE,EAC5DmB,EAAsB,MAAMb,EAAmB,mBAAmBY,EAAkBP,CAAW,EACjGQ,GAAuBA,EAAoB,QAClCP,EAAA,KAAK,GAAGO,CAAmB,CAE1C,CAAA,GAGmBF,CAAgB,EAE7BA,EAAU,UACX,aAAc,CAEX,MAAAG,EAAmB,MAAM,QAAQH,EAAU,IAAI,EAAIA,EAAU,KAAO,CAACA,EAAU,IAAI,EAEnFI,EAAwBjB,EAAM,IAAqBgB,EAAiB,EAAE,EACxE,OAAAP,GAAc,CAAEQ,EAA8B,QAC/CA,EAA8B,MAAQR,EAAW,MACjDQ,EAA8B,OAASR,EAAW,QAG9C,MAAMP,EAAmB,yBAC9Be,EACAX,EACAC,EACAC,CAAA,CAEJ,KAEK,SAAU,CACb,MAAMU,EAASL,EAEf,OAAOT,EAAuBc,EAAO,MAAM,GAAIZ,EAASC,EAAaC,EAAY,CAC/E,MAAOU,EAAO,MACd,OAAQA,EAAO,MAAA,CAChB,CACH,KAGK,iBAEH,OAAOd,EADgBS,EACsB,MAAM,GAAIP,EAASC,EAAaC,EAAYC,CAAU,MAGhG,SAAU,CACb,MAAMU,EAAqBN,EAC3B,MAAI,CAACM,EAAO,OAASA,EAAO,MAAM,GACzB,MAAMT,EAAkB,EAG1BN,EAAuBe,EAAO,MAAM,GAAWb,EAASC,EAAaC,EAAYC,CAAU,CACpG,KACK,aAAc,CAGX,MAAAW,EADaP,EACc,MAAM,GACvC,OAAKO,EAGEhB,EAAuBgB,EAAed,EAASC,EAAaC,EAAYC,CAAU,EAFhF,MAAMC,EAAkB,CAGnC,KAEK,WAAY,CAET,MAAAW,EADWR,EACY,MAAM,GACnC,OAAKQ,EAGEjB,EAAuBiB,EAAaf,EAASC,EAAaC,EAAYC,CAAU,EAF9E,MAAMC,EAAkB,CAGnC,KAEK,uBACA,YACA,cACA,YACA,WACA,kBACA,QACC,OAAAD,GAAc,CAAEI,EAAkB,QACnCA,EAAkB,MAAQJ,EAAW,MACrCI,EAAkB,OAASJ,EAAW,QAGlCP,EAAmB,yBAAyBW,EAAkBP,EAASC,EAAaC,CAAU,MAGlG,cACA,YACA,2BACA,sBACA,kBACH,OAAO,MAAME,EAAkB,EAGnC,OAAO,MAAMA,EAAkB,CACjC,CAEO,MAAA,CACL,uBAAAN,CAAA,CAEJ"}