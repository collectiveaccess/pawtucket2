{"version":3,"file":"ranges.js","sources":["../../../src/compat.ts","../../../src/ranges.ts"],"sourcesContent":["export type CompatVault = {\n  get: import('@iiif/vault').Vault['get'];\n  setMetaValue: import('@iiif/vault').Vault['setMetaValue'];\n  getResourceMeta: import('@iiif/vault').Vault['getResourceMeta'];\n};\n\nconst metaState: any = {};\nexport const compatVault: CompatVault = {\n  get(nonRef: any) {\n    return nonRef;\n  },\n  setMetaValue([id, meta, key], value) {\n    const oldValue = compatVault.getResourceMeta(id, meta);\n    const oldValueItem = oldValue ? oldValue[key] : undefined;\n    const newValue = typeof value === 'function' ? (value as any)(oldValueItem) : value;\n    metaState[id] = {\n      ...(metaState[id] || {}),\n      [meta]: {\n        ...((metaState[id] || {})[meta] || {}),\n        [key]: newValue,\n      },\n    };\n  },\n  getResourceMeta: ((resource: any, metaKey?: any) => {\n    const resourceMeta = metaState[resource as any] as any;\n\n    if (!resourceMeta) {\n      return undefined;\n    }\n    if (!metaKey) {\n      return resourceMeta;\n    }\n\n    return resourceMeta[metaKey];\n  }) as any,\n};\n","import { Vault } from '@iiif/vault';\nimport { ManifestNormalized, RangeNormalized, Reference } from '@iiif/presentation-3';\nimport { CompatVault, compatVault } from './compat';\n\nexport function createRangeHelper(vault: CompatVault = compatVault) {\n  return {\n    findFirstCanvasFromRange: (range: RangeNormalized) => findFirstCanvasFromRange(vault, range),\n    findAllCanvasesInRange: (range: RangeNormalized) => findAllCanvasesInRange(vault, range),\n    findManifestSelectedRange: (manifest: ManifestNormalized, canvasId: string) =>\n      findManifestSelectedRange(vault, manifest, canvasId),\n    findSelectedRange: (range: RangeNormalized, canvasId: string) => findSelectedRange(vault, range, canvasId),\n  };\n}\n\nexport function findFirstCanvasFromRange(vault: CompatVault, range: RangeNormalized): null | Reference<'Canvas'> {\n  for (const inner of range.items) {\n    if (inner.type === 'Canvas') {\n      return inner as Reference<'Canvas'>;\n    }\n    if (inner.type === 'Range') {\n      const found = findFirstCanvasFromRange(vault, vault.get(inner));\n      if (found) {\n        return found;\n      }\n    }\n  }\n  return null;\n}\n\nexport function findAllCanvasesInRange(vault: CompatVault, range: RangeNormalized): Array<Reference<'Canvas'>> {\n  const found: Reference<'Canvas'>[] = [];\n  for (const inner of range.items) {\n    if (inner.type === 'Canvas') {\n      if (inner.id.indexOf('#') !== -1) {\n        found.push({ id: inner.id.split('#')[0], type: 'Canvas' });\n      } else {\n        found.push(inner as Reference<'Canvas'>);\n      }\n    }\n    if (inner.type === 'Range') {\n      found.push(...findAllCanvasesInRange(vault, vault.get(inner)));\n    }\n    if ((inner as any).type === 'SpecificResource') {\n      const sourceId = typeof (inner as any).source === 'string' ? (inner as any).source : (inner as any).source.id;\n      found.push({ id: sourceId, type: 'Canvas' });\n    }\n  }\n  return found;\n}\n\nexport function findManifestSelectedRange(\n  vault: CompatVault,\n  manifest: ManifestNormalized,\n  canvasId: string\n): null | RangeNormalized {\n  for (const range of manifest.structures) {\n    const found = findSelectedRange(vault, vault.get(range), canvasId);\n    if (found) {\n      return found;\n    }\n  }\n\n  return null;\n}\n\nexport function findSelectedRange(\n  vault: CompatVault,\n  range: RangeNormalized,\n  canvasId: string\n): null | RangeNormalized {\n  for (const inner of range.items) {\n    const parsedId = inner.id?.split('#')[0];\n    if ((inner as any).type === 'SpecificResource' && (inner as any).source === canvasId) {\n      return range;\n    }\n    if (inner.type === 'Canvas' && canvasId === parsedId) {\n      return range;\n    }\n    if (inner.type === 'Range') {\n      const found = findSelectedRange(vault, vault.get(inner), canvasId);\n      if (found) {\n        return found;\n      }\n    }\n  }\n  return null;\n}\n"],"names":["metaState","compatVault","nonRef","id","meta","key","value","oldValue","oldValueItem","newValue","resource","metaKey","resourceMeta","createRangeHelper","vault","range","findFirstCanvasFromRange","findAllCanvasesInRange","manifest","canvasId","findManifestSelectedRange","findSelectedRange","inner","found","sourceId","parsedId","_a"],"mappings":"4GAMA,MAAMA,EAAiB,CAAA,EACVC,EAA2B,CACtC,IAAIC,EAAa,CACR,OAAAA,CACT,EACA,aAAa,CAACC,EAAIC,EAAMC,CAAG,EAAGC,EAAO,CACnC,MAAMC,EAAWN,EAAY,gBAAgBE,EAAIC,CAAI,EAC/CI,EAAeD,EAAWA,EAASF,GAAO,OAC1CI,EAAW,OAAOH,GAAU,WAAcA,EAAcE,CAAY,EAAIF,EAC9EN,EAAUG,GAAM,CACd,GAAIH,EAAUG,IAAO,CAAC,EACtB,CAACC,GAAO,CACN,IAAKJ,EAAUG,IAAO,CAAA,GAAIC,IAAS,CAAC,EACpC,CAACC,GAAMI,CACT,CAAA,CAEJ,EACA,gBAAkB,CAACC,EAAeC,IAAkB,CAClD,MAAMC,EAAeZ,EAAUU,GAE/B,GAAI,EAACE,EAGL,OAAKD,EAIEC,EAAaD,GAHXC,CAIX,CACF,EC/BgB,SAAAC,EAAkBC,EAAqBb,EAAa,CAC3D,MAAA,CACL,yBAA2Bc,GAA2BC,EAAyBF,EAAOC,CAAK,EAC3F,uBAAyBA,GAA2BE,EAAuBH,EAAOC,CAAK,EACvF,0BAA2B,CAACG,EAA8BC,IACxDC,EAA0BN,EAAOI,EAAUC,CAAQ,EACrD,kBAAmB,CAACJ,EAAwBI,IAAqBE,EAAkBP,EAAOC,EAAOI,CAAQ,CAAA,CAE7G,CAEgB,SAAAH,EAAyBF,EAAoBC,EAAoD,CACpG,UAAAO,KAASP,EAAM,MAAO,CAC3B,GAAAO,EAAM,OAAS,SACV,OAAAA,EAEL,GAAAA,EAAM,OAAS,QAAS,CAC1B,MAAMC,EAAQP,EAAyBF,EAAOA,EAAM,IAAIQ,CAAK,CAAC,EAC9D,GAAIC,EACK,OAAAA,CAEX,CACF,CACO,OAAA,IACT,CAEgB,SAAAN,EAAuBH,EAAoBC,EAAoD,CAC7G,MAAMQ,EAA+B,CAAA,EAC1B,UAAAD,KAASP,EAAM,MAWnB,GAVDO,EAAM,OAAS,WACbA,EAAM,GAAG,QAAQ,GAAG,IAAM,GACtBC,EAAA,KAAK,CAAE,GAAID,EAAM,GAAG,MAAM,GAAG,EAAE,GAAI,KAAM,QAAU,CAAA,EAEzDC,EAAM,KAAKD,CAA4B,GAGvCA,EAAM,OAAS,SACXC,EAAA,KAAK,GAAGN,EAAuBH,EAAOA,EAAM,IAAIQ,CAAK,CAAC,CAAC,EAE1DA,EAAc,OAAS,mBAAoB,CACxC,MAAAE,EAAW,OAAQF,EAAc,QAAW,SAAYA,EAAc,OAAUA,EAAc,OAAO,GAC3GC,EAAM,KAAK,CAAE,GAAIC,EAAU,KAAM,SAAU,CAC7C,CAEK,OAAAD,CACT,CAEgB,SAAAH,EACdN,EACAI,EACAC,EACwB,CACb,UAAAJ,KAASG,EAAS,WAAY,CACvC,MAAMK,EAAQF,EAAkBP,EAAOA,EAAM,IAAIC,CAAK,EAAGI,CAAQ,EACjE,GAAII,EACK,OAAAA,CAEX,CAEO,OAAA,IACT,CAEgB,SAAAF,EACdP,EACAC,EACAI,EACwB,OACb,UAAAG,KAASP,EAAM,MAAO,CAC/B,MAAMU,GAAWC,EAAAJ,EAAM,KAAN,YAAAI,EAAU,MAAM,KAAK,GAItC,GAHKJ,EAAc,OAAS,oBAAuBA,EAAc,SAAWH,GAGxEG,EAAM,OAAS,UAAYH,IAAaM,EACnC,OAAAV,EAEL,GAAAO,EAAM,OAAS,QAAS,CAC1B,MAAMC,EAAQF,EAAkBP,EAAOA,EAAM,IAAIQ,CAAK,EAAGH,CAAQ,EACjE,GAAII,EACK,OAAAA,CAEX,CACF,CACO,OAAA,IACT"}