var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
var index_umd = { exports: {} };
(function(module, exports) {
  var __defProp = Object.defineProperty, __defNormalProp = (e, t, i) => t in e ? __defProp(e, t, { enumerable: true, configurable: true, writable: true, value: i }) : e[t] = i, __publicField = (e, t, i) => (__defNormalProp(e, "symbol" != typeof t ? t + "" : t, i), i);
  !function(e, t) {
    t(exports);
  }(commonjsGlobal, function(e) {
    const t = "http://library.stanford.edu/iiif/image-api/compliance.html#level1", i = "http://library.stanford.edu/iiif/image-api/compliance.html#level2", r = "http://library.stanford.edu/iiif/image-api/conformance.html#level1", n = "http://library.stanford.edu/iiif/image-api/conformance.html#level2", s = "http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level1", a = "http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2", o = "http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level1", c = "http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level2", l = "http://iiif.io/api/image/1/level1.json", p = "http://iiif.io/api/image/1/profiles/level1.json", h = "http://iiif.io/api/image/1/level2.json", u = "http://iiif.io/api/image/1/profiles/level2.json", v = "http://iiif.io/api/image/2/level1.json", f = "http://iiif.io/api/image/2/profiles/level1.json", m = "http://iiif.io/api/image/2/level2.json", y = "http://iiif.io/api/image/2/profiles/level2.json", g = "level1", d = "level2", A = "http://iiif.io/api/image/2/level1", b = "http://iiif.io/api/image/2/level2", C = [A, b, t, i, r, n, s, a, o, c, l, p, h, u, v, f, m, y, g, d], x = ["http://iiif.io/api/image/2/level0", A, b, "http://library.stanford.edu/iiif/image-api/compliance.html#level0", t, i, "http://library.stanford.edu/iiif/image-api/conformance.html#level0", r, n, "http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level0", s, a, "http://library.stanford.edu/iiif/image-api/1.1/conformance.html#level0", o, c, "http://iiif.io/api/image/1/level0.json", "http://iiif.io/api/image/1/profiles/level0.json", l, p, h, u, "http://iiif.io/api/image/2/level0.json", "http://iiif.io/api/image/2/profiles/level0.json", v, f, m, y, "level0", g, d], w = ["sc:Collection", "sc:Manifest", "sc:Canvas", "sc:AnnotationList", "oa:Annotation", "sc:Range", "sc:Layer", "sc:Sequence", "oa:Choice", "Service", "ContentResource"];
    class L {
      constructor(e2, t2 = {}) {
        __publicField(this, "traversals"), __publicField(this, "options"), this.traversals = { collection: [], manifest: [], canvas: [], annotationList: [], sequence: [], annotation: [], contentResource: [], choice: [], range: [], service: [], layer: [], ...e2 }, this.options = { convertPropsToArray: true, mergeMemberProperties: true, allowUndefinedReturn: false, ...t2 };
      }
      static all(e2) {
        return new L({ collection: [e2], manifest: [e2], canvas: [e2], annotationList: [e2], sequence: [e2], annotation: [e2], contentResource: [e2], choice: [e2], range: [e2], service: [e2], layer: [e2] });
      }
      traverseCollection(e2) {
        return this.traverseType(this.traverseDescriptive(this.traverseLinking(this.traverseCollectionItems(e2))), this.traversals.collection);
      }
      traverseCollectionItems(e2) {
        if (this.options.mergeMemberProperties) {
          const t2 = [...(e2.manifests || []).map((e3) => "string" == typeof e3 ? { "@id": e3, "@type": "sc:Manifest" } : e3), ...(e2.collections || []).map((e3) => "string" == typeof e3 ? { "@id": e3, "@type": "sc:Collection" } : e3), ...e2.members || []];
          delete e2.collections, delete e2.manifests, e2.members = t2;
        }
        return e2.manifests && (e2.manifests = e2.manifests.map((e3) => this.traverseManifest("string" == typeof e3 ? { "@id": e3, "@type": "sc:Manifest" } : e3))), e2.collections && (e2.collections = e2.collections.map((e3) => this.traverseCollection("string" == typeof e3 ? { "@id": e3, "@type": "sc:Collection" } : e3))), e2.members && (e2.members = e2.members.map((e3) => "string" == typeof e3 ? e3 : this.traverseUnknown(e3))), e2;
      }
      traverseManifest(e2) {
        return this.traverseType(this.traverseDescriptive(this.traverseLinking(this.traverseManifestItems(e2))), this.traversals.manifest);
      }
      traverseManifestItems(e2) {
        return e2.sequences && (e2.sequences = e2.sequences.map((e3) => this.traverseSequence(e3))), e2.structures && (e2.structures = e2.structures.map((e3) => this.traverseRange(e3))), e2;
      }
      traverseSequence(e2) {
        return this.traverseType(this.traverseDescriptive(this.traverseLinking(this.traverseSequenceItems(e2))), this.traversals.sequence);
      }
      traverseSequenceItems(e2) {
        return e2.canvases && (e2.canvases = e2.canvases.map((e3) => this.traverseCanvas(e3))), e2;
      }
      traverseCanvas(e2) {
        return this.traverseType(this.traverseDescriptive(this.traverseLinking(this.traverseCanvasItems(e2))), this.traversals.canvas);
      }
      traverseCanvasItems(e2) {
        return e2.images && (e2.images = e2.images.map((e3) => this.traverseAnnotation(e3))), e2.otherContent && (e2.otherContent = e2.otherContent.map((e3) => this.traverseAnnotationList(e3))), e2;
      }
      traverseRange(e2) {
        return this.traverseType(this.traverseDescriptive(this.traverseLinking(this.traverseRangeItems(e2))), this.traversals.range);
      }
      traverseRangeItems(e2) {
        if (this.options.mergeMemberProperties) {
          const t2 = [...(e2.ranges || []).map((e3) => "string" == typeof e3 ? { "@id": e3, "@type": "sc:Range" } : e3), ...(e2.canvases || []).map((e3) => "string" == typeof e3 ? { "@id": e3, "@type": "sc:Canvas" } : e3), ...e2.members || []];
          delete e2.ranges, delete e2.canvases, e2.members = t2.length ? t2.map((e3) => this.traverseUnknown(e3)) : void 0;
        }
        return e2;
      }
      traverseAnnotationList(e2) {
        const t2 = "string" == typeof e2 ? { "@id": e2, "@type": "sc:AnnotationList" } : e2;
        return this.traverseType(this.traverseDescriptive(this.traverseAnnotationListItems(t2)), this.traversals.annotationList);
      }
      traverseAnnotationListItems(e2) {
        return e2.resources && (e2.resources = e2.resources.map((e3) => this.traverseAnnotation(e3))), e2;
      }
      traverseAnnotation(e2) {
        return this.traverseType(this.traverseDescriptive(this.traverseLinking(this.traverseAnnotationItems(e2))), this.traversals.annotation);
      }
      traverseAnnotationItems(e2) {
        return e2.resource && (Array.isArray(e2.resource) ? e2.resource = e2.resource.map((e3) => this.traverseContentResource(e3)) : e2.resource = this.traverseContentResource(e2.resource)), e2.on, e2;
      }
      traverseLayer(e2) {
        return this.traverseType(this.traverseLinking(this.traverseLayerItems(e2)), this.traversals.layer);
      }
      traverseLayerItems(e2) {
        return e2.otherContent && (e2.otherContent = e2.otherContent.map((e3) => this.traverseAnnotationList(e3))), e2;
      }
      traverseChoice(e2) {
        return this.traverseType(this.traverseChoiceItems(e2), this.traversals.choice);
      }
      traverseChoiceItems(e2) {
        return e2.default && "rdf:nil" !== e2.default && (e2.default = this.traverseContentResource(e2.default)), e2.item && "rdf:nil" !== e2.item && (e2.item = e2.item.map((e3) => this.traverseContentResource(e3))), e2;
      }
      traverseService(e2) {
        return this.traverseType(this.traverseLinking(e2), this.traversals.service);
      }
      traverseContentResource(e2) {
        return "oa:Choice" === e2["@type"] ? this.traverseChoice(e2) : this.traverseType(this.traverseDescriptive(this.traverseLinking(e2)), this.traversals.contentResource);
      }
      traverseUnknown(e2) {
        if (!e2["@type"] || "string" == typeof e2)
          return e2;
        switch (function(e3) {
          if (null == e3)
            throw new Error("Null or undefined is not a valid entity.");
          if (Array.isArray(e3))
            throw new Error("Array is not a valid entity");
          if ("object" != typeof e3)
            throw new Error(typeof e3 + " is not a valid entity");
          if ("string" == typeof e3["@type"]) {
            const t2 = w.indexOf(e3["@type"]);
            if (-1 !== t2)
              return w[t2];
          }
          if (e3.profile)
            return "Service";
          if (e3.format)
            return "ContentResource";
          if (e3["@type"])
            return "ContentResource";
          throw new Error("Resource type is not known");
        }(e2)) {
          case "sc:Collection":
            return this.traverseCollection(e2);
          case "sc:Manifest":
            return this.traverseManifest(e2);
          case "sc:Canvas":
            return this.traverseCanvas(e2);
          case "sc:Sequence":
            return this.traverseSequence(e2);
          case "sc:Range":
            return this.traverseRange(e2);
          case "oa:Annotation":
            return this.traverseAnnotation(e2);
          case "sc:AnnotationList":
            return this.traverseAnnotationList(e2);
          case "sc:Layer":
            return this.traverseLayer(e2);
          case "Service":
            return this.traverseService(e2);
          case "oa:Choice":
            return this.traverseChoice(e2);
          case "ContentResource":
            return this.traverseContentResource(e2);
        }
        return e2.profile ? this.traverseService(e2) : e2;
      }
      traverseImageResource(e2) {
        const t2 = Array.isArray(e2), i2 = Array.isArray(e2) ? e2 : [e2], r2 = [];
        for (const n2 of i2)
          "string" == typeof n2 ? r2.push(this.traverseContentResource({ "@id": n2, "@type": "dctypes:Image" })) : r2.push(this.traverseContentResource(n2));
        return t2 || this.options.convertPropsToArray ? r2 : r2[0];
      }
      traverseDescriptive(e2) {
        return e2.thumbnail && (e2.thumbnail = this.traverseImageResource(e2.thumbnail)), e2.logo && (e2.logo = this.traverseImageResource(e2.logo)), e2;
      }
      traverseOneOrMoreServices(e2) {
        const t2 = Array.isArray(e2), i2 = Array.isArray(e2) ? e2 : [e2], r2 = [];
        for (const n2 of i2)
          r2.push(this.traverseService(n2));
        return t2 || this.options.convertPropsToArray ? r2 : r2[0];
      }
      traverseLinking(e2) {
        return e2.related && (e2.related = this.traverseOneOrManyType(e2.related, this.traversals.contentResource)), e2.rendering && (e2.rendering = this.traverseOneOrManyType(e2.rendering, this.traversals.contentResource)), e2.service && (e2.service = this.traverseOneOrMoreServices(e2.service)), e2.seeAlso && (e2.seeAlso = this.traverseOneOrManyType(e2.seeAlso, this.traversals.contentResource)), e2.within && ("string" == typeof e2.within || (e2.within = this.traverseOneOrManyType(e2.within, this.traversals.contentResource))), e2.startCanvas && ("string" == typeof e2.startCanvas ? e2.startCanvas = this.traverseType({ "@id": e2.startCanvas, "@type": "sc:Canvas" }, this.traversals.canvas) : e2.startCanvas && this.traverseType(e2.startCanvas, this.traversals.canvas)), e2.contentLayer && ("string" == typeof e2.contentLayer ? e2.contentLayer = this.traverseLayer({ "@id": e2.contentLayer, "@type": "sc:Layer" }) : e2.contentLayer = this.traverseLayer(e2.contentLayer)), e2;
      }
      traverseOneOrManyType(e2, t2) {
        if (!Array.isArray(e2)) {
          if (!this.options.convertPropsToArray)
            return this.traverseType(e2, t2);
          e2 = [e2];
        }
        return e2.map((e3) => this.traverseType(e3, t2));
      }
      traverseType(e2, t2) {
        return t2.reduce((e3, t3) => {
          const i2 = t3(e3);
          return void 0 !== i2 || this.options.allowUndefinedReturn ? i2 : e3;
        }, e2);
      }
    }
    const S = "Attribution", j = "http://example.org/provider", R = "Unknown";
    function I(e2, t2 = "none") {
      if (!e2)
        return {};
      const i2 = Array.isArray(e2) ? e2 : [e2], r2 = {};
      for (const n2 of i2) {
        if ("string" == typeof n2) {
          r2[t2] = r2[t2] ? r2[t2] : [], r2[t2].push(n2 || "");
          continue;
        }
        if (!n2["@language"]) {
          r2[t2] = r2[t2] ? r2[t2] : [], r2[t2].push(n2["@value"] || "");
          continue;
        }
        const e3 = n2["@language"];
        r2[e3] = r2[e3] ? r2[e3] : [], r2[e3].push(n2["@value"] || "");
      }
      return r2;
    }
    function T(e2) {
      return Array.isArray(e2) ? T(e2.find((e3) => "string" == typeof e3)) : -1 !== x.indexOf(e2) ? "level2" : -1 !== C.indexOf(e2) ? "level1" : "string" == typeof e2 ? e2 : void 0;
    }
    function k(e2) {
      for (const t2 of ["sc", "oa", "dcterms", "dctypes", "iiif"])
        if (e2.startsWith(`${t2}:`))
          return e2.slice(t2.length + 1);
      return e2;
    }
    const O = ["Collection", "Manifest", "Annotation", "AnnotationPage", "Range", "Service"];
    function M(e2) {
      const t2 = e2["@id"] || e2.id;
      let i2 = e2["@type"] || e2.type;
      const r2 = e2.profile || void 0, n2 = e2["@context"] || void 0;
      if (r2) {
        const e3 = function(e4) {
          switch (e4) {
            case "http://iiif.io/api/image/2/level0.json":
            case "http://iiif.io/api/image/2/level1.json":
            case "http://iiif.io/api/image/2/level2.json":
              return "ImageService2";
            case "http://iiif.io/api/auth/1/kiosk":
            case "http://iiif.io/api/auth/1/login":
            case "http://iiif.io/api/auth/1/clickthrough":
            case "http://iiif.io/api/auth/1/external":
            case "http://iiif.io/api/auth/0/kiosk":
            case "http://iiif.io/api/auth/0/login":
            case "http://iiif.io/api/auth/0/clickthrough":
            case "http://iiif.io/api/auth/0/external":
              return "AuthCookieService1";
            case "http://iiif.io/api/auth/1/token":
            case "http://iiif.io/api/auth/0/token":
              return "AuthTokenService1";
            case "http://iiif.io/api/auth/1/logout":
            case "http://iiif.io/api/auth/0/logout":
              return "AuthLogoutService1";
            case "http://iiif.io/api/search/1/search":
            case "http://iiif.io/api/search/0/search":
              return "SearchService1";
            case "http://iiif.io/api/search/1/autocomplete":
            case "http://iiif.io/api/search/0/autocomplete":
              return "AutoCompleteService1";
          }
        }(r2);
        if (e3)
          return e3;
      }
      if (n2) {
        const e3 = function(e4) {
          const t3 = Array.isArray(e4) ? e4 : [e4];
          for (const i3 of t3)
            switch (i3) {
              case "http://iiif.io/api/image/2/context.json":
              case "http://library.stanford.edu/iiif/image-api/1.1/compliance.html#level2":
                return "ImageService2";
              case "http://iiif.io/api/image/1/context.json":
              case "http://library.stanford.edu/iiif/image-api/1.1/context.json":
                return "ImageService1";
              case "http://iiif.io/api/annex/openannotation/context.json":
                return "ImageApiSelector";
            }
        }(n2);
        if (e3)
          return e3;
      }
      if (i2) {
        if (Array.isArray(i2)) {
          if (-1 !== i2.indexOf("oa:CssStylesheet"))
            return "CssStylesheet";
          if (-1 !== i2.indexOf("cnt:ContentAsText"))
            return "TextualBody";
          i2 = i2[0];
        }
        for (const e3 of ["sc", "oa", "dcterms", "dctypes", "iiif"])
          if (i2.startsWith(`${e3}:`)) {
            i2 = i2.slice(e3.length + 1);
            break;
          }
        switch (i2) {
          case "Layer":
            return "AnnotationCollection";
          case "AnnotationList":
            return "AnnotationPage";
          case "cnt:ContentAsText":
            return "TextualBody";
        }
      }
      if (i2 && -1 !== O.indexOf(i2))
        return i2;
      if (e2.format) {
        if (e2.format.startsWith("image/"))
          return "Image";
        if (e2.format.startsWith("text/"))
          return "Text";
        if ("application/pdf" === e2.format)
          return "Text";
        if (e2.format.startsWith("application/"))
          return "Dataset";
      }
      return t2 && (t2.endsWith(".jpg") || t2.endsWith(".png") || t2.endsWith(".jpeg")) ? "Image" : i2 || "unknown";
    }
    const q = /http(s)?:\/\/(creativecommons.org|rightsstatements.org)[^"'\\<\n]+/gm;
    function P(e2) {
      const t2 = e2.match(q);
      return t2 ? t2[0] : e2;
    }
    const _ = ["http://iiif.io/api/presentation/2/context.json", "http://iiif.io/api/image/2/context.json", "http://iiif.io/api/image/1/context.json", "http://library.stanford.edu/iiif/image-api/1.1/context.json", "http://iiif.io/api/search/1/context.json", "http://iiif.io/api/search/0/context.json", "http://iiif.io/api/auth/1/context.json", "http://iiif.io/api/auth/0/context.json", "http://iiif.io/api/annex/openannotation/context.json"];
    function D(e2) {
      if (e2) {
        const t2 = Array.isArray(e2) ? e2 : [e2], i2 = [];
        for (const e3 of t2)
          "http://iiif.io/api/presentation/2/context.json" === e3 && i2.push("http://iiif.io/api/presentation/3/context.json"), -1 === _.indexOf(e3) && i2.push(e3);
        if (t2.length)
          return 1 === i2.length ? i2[0] : i2;
      }
    }
    function U(e2) {
      for (const t2 in e2)
        void 0 !== e2[t2] && null !== e2[t2] || delete e2[t2];
      return e2;
    }
    let $ = 0;
    function W(e2, t2) {
      const i2 = encodeURI(e2.id || e2["@id"] || "").trim();
      return i2 && t2 ? `${i2}/${t2}` : i2 || ($++, `http://example.org/${e2["@type"]}${t2 ? `/${t2}` : ""}/${$}`);
    }
    function E(e2) {
      const t2 = [...e2.behavior || []];
      let i2;
      return e2.viewingHint && t2.push(e2.viewingHint), Array.isArray(e2.motivation) ? i2 = e2.motivation.map(k) : e2.motivation && (i2 = k(e2.motivation)), { "@context": e2["@context"] ? D(e2["@context"]) : void 0, id: (e2["@id"] || W(e2)).trim(), type: M(e2), behavior: t2.length ? t2 : void 0, height: e2.height ? e2.height : void 0, width: e2.width ? e2.width : void 0, motivation: i2, viewingDirection: e2.viewingDirection, profile: e2.profile, format: e2.format ? e2.format : void 0, duration: void 0, timeMode: void 0 };
    }
    function F(e2) {
      const [t2, i2] = function(e3, t3 = "Rights/License", i3 = "none") {
        let r3 = null;
        const n3 = [], s2 = Array.isArray(e3) ? e3 : [e3];
        for (const a2 of s2) {
          const e4 = a2 ? P(a2) : void 0;
          !e4 || -1 === e4.indexOf("creativecommons.org") && -1 === e4.indexOf("rightsstatements.org") ? e4 && n3.push({ label: { [i3]: [t3] }, value: { [i3]: [e4] } }) : r3 = e4.startsWith("https://") ? `http://${e4.slice(8)}` : e4;
        }
        return [r3, n3];
      }(e2.license), r2 = [...e2.metadata ? (n2 = e2.metadata, n2 ? n2.map((e3) => ({ label: I(e3.label), value: I(e3.value) })) : []) : [], ...i2];
      var n2;
      return { rights: t2, metadata: r2.length ? r2 : void 0, label: e2.label ? I(e2.label) : void 0, requiredStatement: e2.attribution ? { label: I(S), value: I(e2.attribution) } : void 0, navDate: e2.navDate, summary: e2.description ? I(e2.description) : void 0, thumbnail: e2.thumbnail };
    }
    function H(e2) {
      if (!e2.within)
        return;
      const t2 = Array.isArray(e2.within) ? e2.within : [e2.within], i2 = [];
      for (const r2 of t2)
        if ("string" == typeof r2) {
          if (r2 && "sc:Manifest" === e2["@type"])
            i2.push({ id: r2, type: "Collection" });
        } else
          r2["@id"] && i2.push({ id: r2["@id"], type: M(r2) });
      return i2.length ? i2 : void 0;
    }
    function N(e2) {
      const t2 = e2.related ? Array.isArray(e2.related) ? e2.related : [e2.related] : [], i2 = e2.contentLayer;
      return { provider: e2.logo || t2.length ? [{ id: j, type: "Agent", homepage: t2.length ? [t2[0]] : void 0, logo: e2.logo ? Array.isArray(e2.logo) ? e2.logo : [e2.logo] : void 0, label: I(R) }] : void 0, partOf: H(e2), rendering: e2.rendering, seeAlso: e2.seeAlso, start: e2.startCanvas, service: e2.service ? (r2 = e2.service, Array.isArray(r2) ? r2 : [r2]) : void 0, supplementary: i2 ? [i2] : void 0 };
      var r2;
    }
    function B(e2) {
      const t2 = e2;
      return U({ ...E(t2), ...F(t2), ...N(t2), ...(i2 = t2, { chars: i2.chars, format: i2.format ? i2.format : void 0, language: i2.language }) });
      var i2;
    }
    const z = new L({ collection: [function(e2) {
      return U({ ...E(e2), ...F(e2), ...N(e2), items: e2.members });
    }], manifest: [function(e2) {
      const t2 = [], i2 = [];
      for (const n2 of e2.sequences || [])
        n2.canvases.length && t2.push(...n2.canvases), n2.behavior && i2.push(...n2.behavior);
      const r2 = E(e2);
      return i2.length && (r2.behavior ? r2.behavior.push(...i2) : r2.behavior = i2), U({ ...r2, ...F(e2), ...N(e2), items: t2, structures: e2.structures });
    }], canvas: [function(e2) {
      return U({ ...E(e2), ...F(e2), ...N(e2), annotations: e2.otherContent && e2.otherContent.length ? e2.otherContent : void 0, items: e2.images && e2.images.length ? [{ id: W(e2, "annotation-page"), type: "AnnotationPage", items: e2.images }] : void 0 });
    }], annotationList: [function(e2) {
      return U({ ...E(e2), ...F(e2), ...N(e2), items: e2.resources && e2.resources.length ? e2.resources : void 0 });
    }], sequence: [function(e2) {
      return e2.canvases && 0 !== e2.canvases.length ? { canvases: e2.canvases, behavior: e2.viewingHint ? [e2.viewingHint] : [] } : { canvases: [], behavior: [] };
    }], annotation: [function(e2) {
      return U({ ...E(e2), ...F(e2), ...N(e2), target: function e3(t2) {
        if (Array.isArray(t2)) {
          if (t2.length > 1)
            return { type: "List", items: t2.map(e3) };
          t2 = t2[0];
        }
        if ("string" == typeof t2)
          return encodeURI(t2).trim();
        if ("@type" in t2) {
          let e4;
          if ("string" == typeof t2.full)
            e4 = t2.full;
          else if ("dctypes:Image" === t2.full["@type"])
            e4 = { id: t2.full["@id"], type: "Image" };
          else {
            if ("sc:Canvas" !== t2.full["@type"])
              throw new Error(`Unsupported source type on annotation: ${t2.full["@type"]}`);
            e4 = { id: t2.full["@id"], type: "Canvas" };
          }
          return { type: "SpecificResource", source: e4, selector: G(t2.selector) };
        }
        return encodeURI(t2["@id"]).trim();
      }(e2.on), body: Array.isArray(e2.resource) ? e2.resource.map(B) : B(e2.resource) });
    }], contentResource: [B], choice: [function(e2) {
      const t2 = [];
      return e2.default && "rdf:nil" !== e2.default && t2.push(e2.default), e2.item && "rdf:nil" !== e2.item && t2.push(...e2.item), { ...E(e2), ...F(e2), items: t2 };
    }], range: [function(e2) {
      return U({ ...E(e2), ...F(e2), ...N(e2), items: e2.members });
    }], service: [function(e2) {
      const { "@id": t2, "@type": i2, "@context": r2, profile: n2, ...s2 } = e2, a2 = {};
      return t2 && (a2["@id"] = t2), a2["@type"] = M(e2), "unknown" === a2["@type"] && (r2 && r2.length && (a2["@context"] = r2), a2["@type"] = "Service"), n2 && (a2.profile = T(n2)), U({ ...a2, ...s2 });
    }], layer: [function(e2) {
      return U({ ...E(e2), ...F(e2), ...N(e2) });
    }] });
    function G(e2) {
      if ((Array.isArray(e2["@type"]) && e2["@type"].includes("oa:SvgSelector") || "oa:SvgSelector" == e2["@type"]) && ("chars" in e2 || "value" in e2))
        return { type: "SvgSelector", value: "chars" in e2 ? e2.chars : e2.value };
      if ("oa:FragmentSelector" === e2["@type"])
        return { type: "FragmentSelector", value: e2.value };
      if ("oa:Choice" === e2["@type"])
        return [G(e2.default), ...(Array.isArray(e2.item) ? e2.item : [e2.item]).map(G)];
      if ("iiif:ImageApiSelector" == e2["@type"])
        return { type: "ImageApiSelector", region: "region" in e2 ? e2.region : void 0, rotation: "rotation" in e2 ? e2.rotation : void 0 };
      throw new Error(`Unsupported selector type: ${e2["@type"]}`);
    }
    const J = function(e2) {
      return e2 && e2["@context"] && ("http://iiif.io/api/presentation/2/context.json" === e2["@context"] || -1 !== e2["@context"].indexOf("http://iiif.io/api/presentation/2/context.json") || "http://www.shared-canvas.org/ns/context.json" === e2["@context"]) || "http://iiif.io/api/image/2/context.json" === e2["@context"] ? z.traverseUnknown(e2) : e2;
    };
    e.upgrade = J, Object.defineProperties(e, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
  });
})(index_umd, index_umd.exports);
function fetchAndUpgrade(input, init) {
  return fetch(input, init).then((resp) => resp.json()).then(index_umd.exports.upgrade);
}
export { fetchAndUpgrade as fetch };
//# sourceMappingURL=fetch.mjs.map
