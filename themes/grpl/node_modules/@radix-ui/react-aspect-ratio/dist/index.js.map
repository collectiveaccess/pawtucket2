{"mappings":";;;;;;;;;;;;;A;;;ACKA;;oGAEA,CAEA,MAAMI,0BAAI,GAAG,aAAb,AAAA;AAQA,MAAMJ,yCAAW,GAAA,aAAGE,CAAAA,uBAAA,CAClB,CAACI,KAAD,EAAQC,YAAR,GAAyB;IACvB,MAAM,SAAEC,KAAK,GAAG,CAAV,G,OAAiBC,KAAjB,CAAA,EAAwB,GAAGC,gBAAH,EAAxB,GAAgDJ,KAAtD,AAAM;IACN,OAAA,aACE,CAAA,0BADF,CAAA,KAAA,EAAA;QAEI,KAAK,EAAE;YACL,qCAAA;YACAK,QAAQ,EAAE,UAFL;YAGL,2CAAA;YACAC,KAAK,EAAE,MAJF;YAKLC,aAAa,EAAG,CAAA,EAAE,GAAA,GAAML,KAAM,CAA9BK,CAAAA,CAAAA;SANJ;QAQE,iCAAA,EAAgC,EAAhC;KARF,EAAA,aAUE,CAAA,0BAAA,CAAC,sCAAD,CAAW,GAAX,EAAA,2DAAA,CAAA,EAAA,EACMH,gBADN,EAVF;QAYI,GAAG,EAAEH,YAFP;QAGE,KAAK,EAAE;YACL,GAAGE,KADE;YAEL,mCAAA;YACAE,QAAQ,EAAE,UAHL;YAILG,GAAG,EAAE,CAJA;YAKLC,KAAK,EAAE,CALF;YAMLC,MAAM,EAAE,CANH;YAOLC,IAAI,EAAE,CAANA;SAPK;KAHT,CAAA,CAVF,CADF,CAWI;CAdY,CAApB,AA6BG;AAGH,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yCAAA,EAAA;IAAA,WAAA,EAAA,0BAAA;CAAA,CAAA,CAAA;AAEA,oGAAA,CAEA,MAAMhB,yCAAI,GAAGD,yCAAb,AAAA;;ADrDA","sources":["packages/react/aspect-ratio/src/index.ts","packages/react/aspect-ratio/src/AspectRatio.tsx"],"sourcesContent":["export {\n  AspectRatio,\n  //\n  Root,\n} from './AspectRatio';\nexport type { AspectRatioProps } from './AspectRatio';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n * AspectRatio\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'AspectRatio';\n\ntype AspectRatioElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface AspectRatioProps extends PrimitiveDivProps {\n  ratio?: number;\n}\n\nconst AspectRatio = React.forwardRef<AspectRatioElement, AspectRatioProps>(\n  (props, forwardedRef) => {\n    const { ratio = 1 / 1, style, ...aspectRatioProps } = props;\n    return (\n      <div\n        style={{\n          // ensures inner element is contained\n          position: 'relative',\n          // ensures padding bottom trick maths works\n          width: '100%',\n          paddingBottom: `${100 / ratio}%`,\n        }}\n        data-radix-aspect-ratio-wrapper=\"\"\n      >\n        <Primitive.div\n          {...aspectRatioProps}\n          ref={forwardedRef}\n          style={{\n            ...style,\n            // ensures children expand in ratio\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n          }}\n        />\n      </div>\n    );\n  }\n);\n\nAspectRatio.displayName = NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = AspectRatio;\n\nexport {\n  AspectRatio,\n  //\n  Root,\n};\nexport type { AspectRatioProps };\n"],"names":["AspectRatio","Root","React","Primitive","NAME","forwardRef","props","forwardedRef","ratio","style","aspectRatioProps","position","width","paddingBottom","top","right","bottom","left"],"version":3,"file":"index.js.map"}