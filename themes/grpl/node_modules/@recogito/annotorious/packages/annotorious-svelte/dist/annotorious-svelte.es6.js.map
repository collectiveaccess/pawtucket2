{"version":3,"file":"annotorious-svelte.es6.js","sources":["../../annotorious-core/src/state/SvelteStore.ts"],"sourcesContent":["import type { Annotation, Annotator, AnnotatorState } from '../model';\nimport type { Store } from './Store';\nimport type { StoreChangeEvent } from './StoreObserver';\n\ntype Subscriber<T extends Annotation> = (annotation: T[]) => void; \n\nexport interface SvelteStore<T extends Annotation> extends Store<T> {\n\n  subscribe(onChange: Subscriber<T>): void;\n\n}\n\nexport interface SvelteAnnotatorState<T extends Annotation> extends AnnotatorState<T> {\n\n  store: SvelteStore<T>\n\n}\n\nexport interface SvelteAnnotator<T extends Annotation> extends Annotator<T> {\n\n  state: SvelteAnnotatorState<T>\n\n}\n\n/** \n * A simple wrapper around the event-based store implementation\n * that adds a Svelte shim, for use with the reactive '$' notation.\n * Other frameworks might not actually need this. But it's pretty\n * convenient for everyone using Svelte, as well as for the\n * basic (Svelte-based) Annotorious standard implementation.\n */\nexport const toSvelteStore = <T extends Annotation>(store: Store<T>): SvelteStore<T> => {\n\n  const subscribe = (onChange: Subscriber<T>) => {\n\n    // Register a store observer on behalf of the subscriber\n    const shim = (event: StoreChangeEvent<T>) => onChange(event.state);\n    store.observe(shim);\n\n    // Immediately call the subscriber function with the\n    // current store value, according to the Svelte contract.\n    // https://stackoverflow.com/questions/68220955/how-does-svelte-unsubscribe-actually-work\n    onChange(store.all());\n\n    // Return the unsubscribe function\n    return () => store.unobserve(shim);\n  }\n\n  return {\n    ...store,\n    subscribe\n  }\n\n}"],"names":["toSvelteStore","store","onChange","shim","event"],"mappings":"AA+Ba,MAAAA,IAAgB,CAAuBC,OAiB3C;AAAA,EACL,GAAGA;AAAA,EACH,WAjBgB,CAACC,MAA4B;AAG7C,UAAMC,IAAO,CAACC,MAA+BF,EAASE,EAAM,KAAK;AACjE,WAAAH,EAAM,QAAQE,CAAI,GAKTD,EAAAD,EAAM,KAAK,GAGb,MAAMA,EAAM,UAAUE,CAAI;AAAA,EAAA;AAKjC;"}