{"version":3,"file":"annotorious.js","sources":["../../../node_modules/svelte/internal/index.mjs","../src/model/core/Shape.ts","../src/model/core/shapeUtils.ts","../src/model/core/ellipse/ellipseUtils.ts","../src/model/core/polygon/polygonUtils.ts","../src/model/core/rectangle/rectangleUtils.ts","../src/model/w3c/fragment/FragmentSelector.ts","../src/model/w3c/svg/SVG.ts","../src/model/w3c/svg/SVGSelector.ts","../../../node_modules/uuid/dist/esm-browser/rng.js","../../../node_modules/uuid/dist/esm-browser/stringify.js","../../../node_modules/uuid/dist/esm-browser/native.js","../../../node_modules/uuid/dist/esm-browser/v4.js","../../../node_modules/dequal/lite/index.mjs","../../../node_modules/svelte/store/index.mjs","../../annotorious-core/src/state/Hover.ts","../../annotorious-core/src/state/Selection.ts","../../annotorious-core/src/utils/annotationUtils.ts","../../annotorious-core/src/utils/diffAnnotations.ts","../../annotorious-core/src/state/StoreObserver.ts","../../annotorious-core/src/state/Store.ts","../../annotorious-core/src/state/SvelteStore.ts","../../annotorious-core/src/state/Viewport.ts","../../annotorious-core/src/lifecycle/Lifecycle.ts","../../annotorious-core/src/model/FormatAdapter.ts","../../annotorious-core/src/model/Annotator.ts","../../../node_modules/nanoid/index.browser.js","../../annotorious-core/src/model/User.ts","../../annotorious-core/src/model/W3CAnnotation.ts","../../annotorious-core/src/presence/ColorPalette.ts","../../annotorious-core/src/presence/AppearanceProvider.ts","../../../node_modules/nanoevents/index.js","../../annotorious-core/src/presence/PresenceState.ts","../src/model/w3c/W3CImageFormatAdapter.ts","../src/annotation/editors/polygon/PolygonEditor.svelte","../src/annotation/editors/rectangle/RectangleEditor.svelte","../src/annotation/editors/editorsRegistry.ts","../src/annotation/editors/Handle.ts","../src/annotation/editors/Editor.svelte","../src/annotation/utils/styling.ts","../src/annotation/editors/EditorMount.svelte","../src/annotation/tools/ToolMount.svelte","../src/annotation/tools/rectangle/RubberbandRectangle.svelte","../src/annotation/utils/math.ts","../src/annotation/utils/responsive.ts","../src/annotation/utils/touch.ts","../src/annotation/tools/polygon/RubberbandPolygon.svelte","../src/annotation/tools/drawingToolsRegistry.ts","../src/annotation/shapes/Ellipse.svelte","../src/annotation/shapes/Polygon.svelte","../src/annotation/shapes/Rectangle.svelte","../src/annotation/Transform.ts","../src/annotation/SVGAnnotationLayerPointerEvent.ts","../src/annotation/SVGAnnotationLayer.svelte","../../../node_modules/quickselect/index.js","../../../node_modules/rbush/index.js","../src/state/spatialTree.ts","../src/state/ImageAnnotatorState.ts","../src/themes/smart/setTheme.ts","../src/AnnotoriousOpts.ts","../src/Annotorious.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\nfunction is_promise(value) {\n    return !!value && (typeof value === 'object' || typeof value === 'function') && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\nfunction split_css_unit(value) {\n    const split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n    return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];\n}\nconst contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\n/**\n * Resize observer singleton.\n * One listener per element only!\n * https://groups.google.com/a/chromium.org/g/blink-dev/c/z6ienONUb5A/m/F5-VcUZtBAAJ\n */\nclass ResizeObserverSingleton {\n    constructor(options) {\n        this.options = options;\n        this._listeners = 'WeakMap' in globals ? new WeakMap() : undefined;\n    }\n    observe(element, listener) {\n        this._listeners.set(element, listener);\n        this._getObserver().observe(element, this.options);\n        return () => {\n            this._listeners.delete(element);\n            this._observer.unobserve(element); // this line can probably be removed\n        };\n    }\n    _getObserver() {\n        var _a;\n        return (_a = this._observer) !== null && _a !== void 0 ? _a : (this._observer = new ResizeObserver((entries) => {\n            var _a;\n            for (const entry of entries) {\n                ResizeObserverSingleton.entries.set(entry.target, entry);\n                (_a = this._listeners.get(entry.target)) === null || _a === void 0 ? void 0 : _a(entry);\n            }\n        }));\n    }\n}\n// Needs to be written like this to pass the tree-shake-test\nResizeObserverSingleton.entries = 'WeakMap' in globals ? new WeakMap() : undefined;\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n    return style.sheet;\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentNode !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    if (node.parentNode) {\n        node.parentNode.removeChild(node);\n    }\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction comment(content) {\n    return document.createComment(content);\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_immediate_propagation(fn) {\n    return function (event) {\n        event.stopImmediatePropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set && always_set_through_set_attribute.indexOf(key) === -1) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data_map(node, data_map) {\n    Object.keys(data_map).forEach((key) => {\n        set_custom_element_data(node, key, data_map[key]);\n    });\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction set_dynamic_element_data(tag) {\n    return (/-/.test(tag)) ? set_custom_element_data_map : set_attributes;\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction init_binding_group(group) {\n    let _inputs;\n    return {\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            _inputs.forEach(input => group.push(input));\n        },\n        /* remove */ r() {\n            _inputs.forEach(input => group.splice(group.indexOf(input), 1));\n        }\n    };\n}\nfunction init_binding_group_dynamic(group, indexes) {\n    let _group = get_binding_group(group);\n    let _inputs;\n    function get_binding_group(group) {\n        for (let i = 0; i < indexes.length; i++) {\n            group = group[indexes[i]] = group[indexes[i]] || [];\n        }\n        return group;\n    }\n    function push() {\n        _inputs.forEach(input => _group.push(input));\n    }\n    function remove() {\n        _inputs.forEach(input => _group.splice(_group.indexOf(input), 1));\n    }\n    return {\n        /* update */ u(new_indexes) {\n            indexes = new_indexes;\n            const new_group = get_binding_group(group);\n            if (new_group !== _group) {\n                remove();\n                _group = new_group;\n                push();\n            }\n        },\n        /* push */ p(...inputs) {\n            _inputs = inputs;\n            push();\n        },\n        /* remove */ r: remove\n    };\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction claim_comment(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 8, (node) => {\n        node.data = '' + data;\n        return undefined;\n    }, () => comment(data), true);\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    text.data = data;\n}\nfunction set_data_contenteditable(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable(text, data);\n    }\n    else {\n        set_data(text, data);\n    }\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value == null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value, mounting) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    if (!mounting || value !== undefined) {\n        select.selectedIndex = -1; // no option should be selected\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked');\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_iframe_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n            // make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n            // see https://github.com/sveltejs/svelte/issues/4233\n            fn();\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nconst resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'content-box' });\nconst resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'border-box' });\nconst resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton({ box: 'device-pixel-content-box' });\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nfunction head_selector(nodeId, head) {\n    const result = [];\n    let started = 0;\n    for (const node of head.childNodes) {\n        if (node.nodeType === 8 /* comment node */) {\n            const comment = node.textContent.trim();\n            if (comment === `HEAD_${nodeId}_END`) {\n                started -= 1;\n                result.push(node);\n            }\n            else if (comment === `HEAD_${nodeId}_START`) {\n                started += 1;\n                result.push(node);\n            }\n        }\n        else if (started > 0) {\n            result.push(node);\n        }\n    }\n    return result;\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            /** #7364  target for <template> may be provided as #document-fragment(11) */\n            else\n                this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));\n            this.t = target.tagName !== 'TEMPLATE' ? target : target.content;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\nfunction construct_svelte_component(component, props) {\n    return new component(props);\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { ownerNode } = info.stylesheet;\n            // there is no ownerNode if it runs on jsdom.\n            if (ownerNode)\n                detach(ownerNode);\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs#run-time-svelte-beforeupdate\n */\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs#run-time-svelte-onmount\n */\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n */\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs#run-time-svelte-ondestroy\n */\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * https://svelte.dev/docs#run-time-svelte-createeventdispatcher\n */\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-setcontext\n */\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-getcontext\n */\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs#run-time-svelte-getallcontexts\n */\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs#run-time-svelte-hascontext\n */\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nlet render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    // Do not reenter flush while dirty components are updated, as this can\n    // result in an infinite loop. Instead, let the inner flush handle it.\n    // Reentrancy is ok afterwards for bindings etc.\n    if (flushidx !== 0) {\n        return;\n    }\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        try {\n            while (flushidx < dirty_components.length) {\n                const component = dirty_components[flushidx];\n                flushidx++;\n                set_current_component(component);\n                update(component.$$);\n            }\n        }\n        catch (e) {\n            // reset dirty state to not end up in a deadlocked state and then rethrow\n            dirty_components.length = 0;\n            flushidx = 0;\n            throw e;\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n */\nfunction flush_render_callbacks(fns) {\n    const filtered = [];\n    const targets = [];\n    render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));\n    targets.forEach((c) => c());\n    render_callbacks = filtered;\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    const options = { direction: 'in' };\n    let config = fn(node, params, options);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config(options);\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    const options = { direction: 'out' };\n    let config = fn(node, params, options);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config(options);\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    const options = { direction: 'both' };\n    let config = fn(node, params, options);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config(options);\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    const updates = [];\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            // defer updates until all the DOM shuffling is done\n            updates.push(() => block.p(child_ctx, dirty));\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    run_all(updates);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst _boolean_attributes = [\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'inert',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n];\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n */\nconst boolean_attributes = new Set([..._boolean_attributes]);\n\n/** regex of all html void element names */\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules. Otherwise you may need to fix a <${name}>.`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${escape_attribute_value(style_object[key])};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n            // if the component was destroyed immediately\n            // it will update the `$$.on_destroy` reference to `null`.\n            // the destructured on_destroy may still reference to the old array\n            if (component.$$.on_destroy) {\n                component.$$.on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        flush_render_callbacks($$.after_update);\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: [],\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            if (!is_function(callback)) {\n                return noop;\n            }\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        if (!is_function(callback)) {\n            return noop;\n        }\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    if (has_stop_immediate_propagation)\n        modifiers.push('stopImmediatePropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_contenteditable_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction set_data_maybe_contenteditable_dev(text, data, attr_value) {\n    if (~contenteditable_truthy_values.indexOf(attr_value)) {\n        set_data_contenteditable_dev(text, data);\n    }\n    else {\n        set_data_dev(text, data);\n    }\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        console.warn(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\nfunction construct_svelte_component_dev(component, props) {\n    const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';\n    try {\n        const instance = new component(props);\n        if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {\n            throw new Error(error_message);\n        }\n        return instance;\n    }\n    catch (err) {\n        const { message } = err;\n        if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {\n            throw new Error(error_message);\n        }\n        else {\n            throw err;\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, ResizeObserverSingleton, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_iframe_resize_listener, add_location, add_render_callback, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_comment, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, comment, component_subscribe, compute_rest_props, compute_slots, construct_svelte_component, construct_svelte_component_dev, contenteditable_truthy_values, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, flush_render_callbacks, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, head_selector, identity, init, init_binding_group, init_binding_group_dynamic, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, resize_observer_border_box, resize_observer_content_box, resize_observer_device_pixel_content_box, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_custom_element_data_map, set_data, set_data_contenteditable, set_data_contenteditable_dev, set_data_dev, set_data_maybe_contenteditable, set_data_maybe_contenteditable_dev, set_dynamic_element_data, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, split_css_unit, spread, src_url_equal, start_hydrating, stop_immediate_propagation, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import type { AbstractSelector } from '@annotorious/core';\n\nexport interface Shape extends AbstractSelector {\n\n  type: ShapeType;\n\n  geometry: Geometry;\n\n}\n\nexport enum ShapeType {\n\n  ELLIPSE = 'ELLIPSE',\n\n  POLYGON = 'POLYGON',\n\n  RECTANGLE = 'RECTANGLE'\n\n}\n\nexport interface Geometry {\n\n  bounds: Bounds;\n\n}\n\nexport interface Bounds {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n}","import type { Bounds, Shape, ShapeType } from './Shape';\n\nexport interface ShapeUtil<T extends Shape> {\n\n  area: (shape: T) => number;\n\n  intersects: (shape: T, x: number, y: number) => boolean;\n\n}\n\nconst Utils: { [key: string]: ShapeUtil<any> } = {};\n\n/**\n * Registers a new ShapeUtil for a given shape type.\n * @param type the shape type\n * @param util the ShapeUtil implementation for this shape type\n */\nexport const registerShapeUtil = (type: ShapeType | string, util: ShapeUtil<any>) =>\n  (Utils[type] = util);\n\n/**\n * Computes the area of the given shape. Delegates to the corresponding ShapeUtil.\n * @param shape the shape\n */\nexport const computeArea = (shape: Shape) => Utils[shape.type].area(shape);\n\n/**\n * Tests if the given shape intersects the given point. Delegates to\n * the corresponding ShapeUtil.\n * @param shape the shape\n * @param x point x coord\n * @param y point y coord\n * @returns true if shape and point intersect\n */\nexport const intersects = (shape: Shape, x: number, y: number): boolean =>\n  Utils[shape.type].intersects(shape, x, y);\n\n/**\n * Computes Bounds from a given list of points.\n * @param points the points\n * @returns the Bounds\n */\nexport const boundsFromPoints = (points: Array<[number, number]>): Bounds => {\n  let minX = Infinity;\n  let minY = Infinity;\n  let maxX = -Infinity;\n  let maxY = -Infinity;\n\n  points.forEach(([x, y]) => {\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n  });\n\n  return { minX, minY, maxX, maxY };\n};","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Ellipse } from './Ellipse';\n\nconst EllipseUtil: ShapeUtil<Ellipse> = {\n\n  area: (e: Ellipse): number => Math.PI * e.geometry.rx * e.geometry.ry,\n\n  intersects: (e: Ellipse, x: number, y: number): boolean => {\n    const { cx, cy, rx, ry } = e.geometry;\n\n    // For future use\n    const rot = 0;\n\n    const cos = Math.cos(rot);\n    const sin = Math.sin(rot);\n  \n    const dx  = x - cx;\n    const dy  = y - cy;\n  \n    const tdx = cos * dx + sin * dy;\n    const tdy = sin * dx - cos * dy;\n  \n    return (tdx * tdx) / (rx * rx) + (tdy * tdy) / (ry * ry) <= 1;\n  }\n};\n\nregisterShapeUtil(ShapeType.ELLIPSE, EllipseUtil);","import { ShapeType } from '../Shape';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\nimport type { Polygon } from './Polygon';\n\nconst PolygonUtil: ShapeUtil<Polygon> = {\n\n  area: (polygon: Polygon): number => {\n    const { points } = polygon.geometry;\n\n    let area = 0;\n    let j = points.length - 1;\n\n    for (let i = 0; i < points.length; i++) {\n      area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n      j = i;\n    }\n\n    return Math.abs(0.5 * area);\n  },\n\n  intersects: (polygon: Polygon, x: number, y: number): boolean => {\n    // Based on https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html/pnpoly.html\n    const { points } = polygon.geometry;\n\n    let inside = false;\n\n    for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n      const xi = points[i][0],\n        yi = points[i][1];\n      const xj = points[j][0],\n        yj = points[j][1];\n\n      const intersect = yi > y != yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;\n\n      if (intersect) inside = !inside;\n    }\n\n    return inside;\n  }\n  \n};\n\nregisterShapeUtil(ShapeType.POLYGON, PolygonUtil);","import { ShapeType } from '../Shape';\nimport type { Rectangle } from './Rectangle';\nimport { registerShapeUtil, type ShapeUtil } from '../shapeUtils';\n\nexport const RectangleUtil: ShapeUtil<Rectangle> = {\n\n  area: (rect: Rectangle): number => rect.geometry.w * rect.geometry.h,\n\n  intersects: (rect: Rectangle, x: number, y: number): boolean =>\n    x >= rect.geometry.x &&\n    x <= rect.geometry.x + rect.geometry.w &&\n    y >= rect.geometry.y &&\n    y <= rect.geometry.y + rect.geometry.h\n    \n};\n\nregisterShapeUtil(ShapeType.RECTANGLE, RectangleUtil);","import type { W3CSelector } from '@annotorious/core';\nimport { ShapeType } from '../../core';\nimport type { Rectangle, RectangleGeometry } from '../../core';\n\nexport interface FragmentSelector extends W3CSelector {\n\n  type: 'FragmentSelector';\n\n  conformsTo: 'http://www.w3.org/TR/media-frags/',\n\n  value: string;\n  \n}\n\nexport const parseFragmentSelector = (\n  fragmentOrSelector: FragmentSelector | string,\n  invertY = false\n): Rectangle => {\n\n  const fragment =\n    typeof fragmentOrSelector === 'string' ? fragmentOrSelector : fragmentOrSelector.value;\n\n  const regex = /^(xywh)=(pixel|percent)?:?(.+?),(.+?),(.+?),(.+)*/g;\n\n  const matches = [...fragment.matchAll(regex)][0];\n  const [_, prefix, unit, a, b, c, d] = matches;\n\n  if (prefix !== 'xywh') throw new Error('Unsupported MediaFragment: ' + fragment);\n\n  if (unit && unit !== 'pixel') throw new Error(`Unsupported MediaFragment unit: ${unit}`);\n\n  const [x, y, w, h] = [a, b, c, d].map(parseFloat);\n\n  return {\n    type: ShapeType.RECTANGLE,\n    geometry: {\n      x,\n      y,\n      w,\n      h,\n      bounds: {\n        minX: x,\n        minY: invertY ? y - h : y,\n        maxX: x + w,\n        maxY: invertY ? y : y + h\n      }\n    }\n  }\n};\n\nexport const serializeFragmentSelector = (geometry: RectangleGeometry): FragmentSelector => {\n  const { x, y, w, h } = geometry;\n  \n  return {\n    type: 'FragmentSelector',\n    conformsTo: 'http://www.w3.org/TR/media-frags/',\n    value: `xywh=pixel:${x},${y},${w},${h}`\n  };\n};","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nexport const sanitize = (doc: Element | Document) => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = (el: Element) => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\n/** Helper that forces an un-namespaced node to SVG **/\nexport const insertSVGNamespace = (originalDoc: Document): Element => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n","import type { W3CSelector } from '@annotorious/core';\nimport { boundsFromPoints, ShapeType } from '../../core';\nimport type { Ellipse, EllipseGeometry, Polygon, PolygonGeometry, Shape } from '../../core';\nimport { SVG_NAMESPACE, insertSVGNamespace, sanitize } from './SVG';\n\nexport interface SVGSelector extends W3CSelector {\n\n  type: 'SvgSelector';\n\n  value: string;\n  \n}\n\nconst parseSVGXML = (value: string): Element => {\n  const parser = new DOMParser();\n\n  const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n  // SVG needs a namespace declaration - check if it's set or insert if not\n  const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n  const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n  if (isPrefixDeclared || isDefaultNamespaceSVG) {\n    return sanitize(doc).firstChild as Element;\n  } else {\n    return sanitize(insertSVGNamespace(doc)).firstChild as Element;\n  }\n}\n\nconst parseSVGPolygon = (value: string): Polygon => {\n  const [a, b, str] = value.match(/(<polygon points=[\"|'])([^(\"|')]*)/) || [];\n\n  if (!str) return;\n\n  const points = str.split(' ').map((p) => p.split(',').map(parseFloat));\n\n  return {\n    type: ShapeType.POLYGON,\n    geometry: {\n      points,\n      bounds: boundsFromPoints(points as [number, number][])\n    }\n  };\n}\n\nconst parseSVGEllipse = (value: string): Ellipse => {\n  const doc = parseSVGXML(value);\n\n  const cx = parseFloat(doc.getAttribute('cx'));\n  const cy = parseFloat(doc.getAttribute('cy'));\n  const rx = parseFloat(doc.getAttribute('rx'));\n  const ry = parseFloat(doc.getAttribute('ry'));\n\n  const bounds = {\n    minX: cx - rx,\n    minY: cy - ry,\n    maxX: cx + rx,\n    maxY: cy + ry\n  };\n\n  return {\n    type: ShapeType.ELLIPSE,\n    geometry: {\n      cx,\n      cy,\n      rx,\n      ry,\n      bounds\n    }\n  };\n}\n\nexport const parseSVGSelector = <T extends Shape>(valueOrSelector: SVGSelector | string): T => {\n  const value = typeof valueOrSelector === 'string' ? valueOrSelector : valueOrSelector.value;\n\n  if (value.includes('<polygon points='))\n    return parseSVGPolygon(value) as unknown as T;\n  else if (value.includes('<ellipse ')) \n    return parseSVGEllipse(value) as unknown as T;\n}\n\nexport const serializeSVGSelector = (shape: Shape): SVGSelector => {\n  let value: string;\n\n  if (shape.type === ShapeType.POLYGON) {\n    const geom = shape.geometry as PolygonGeometry;\n    const { points } = geom;\n    value = `<svg><polygon points=\"${points.map((xy) => xy.join(',')).join(' ')}\" /></svg>`;\n  } else if (shape.type === ShapeType.ELLIPSE) {\n    const geom = shape.geometry as EllipseGeometry;\n    value = `<svg><ellipse cx=\"${geom.cx}\" cy=\"${geom.cy}\" rx=\"${geom.rx}\" ry=\"${geom.ry}\" /></svg>`\n  }\n\n  if (value) {\n    return { type: 'SvgSelector', value };\n  } else {\n    throw `Unsupported shape type: ${shape.type}`;\n  }\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","var has = Object.prototype.hasOwnProperty;\n\nexport function dequal(foo, bar) {\n\tvar ctor, len;\n\tif (foo === bar) return true;\n\n\tif (foo && bar && (ctor=foo.constructor) === bar.constructor) {\n\t\tif (ctor === Date) return foo.getTime() === bar.getTime();\n\t\tif (ctor === RegExp) return foo.toString() === bar.toString();\n\n\t\tif (ctor === Array) {\n\t\t\tif ((len=foo.length) === bar.length) {\n\t\t\t\twhile (len-- && dequal(foo[len], bar[len]));\n\t\t\t}\n\t\t\treturn len === -1;\n\t\t}\n\n\t\tif (!ctor || typeof foo === 'object') {\n\t\t\tlen = 0;\n\t\t\tfor (ctor in foo) {\n\t\t\t\tif (has.call(foo, ctor) && ++len && !has.call(bar, ctor)) return false;\n\t\t\t\tif (!(ctor in bar) || !dequal(foo[ctor], bar[ctor])) return false;\n\t\t\t}\n\t\t\treturn Object.keys(bar).length === len;\n\t\t}\n\t}\n\n\treturn foo !== foo && bar !== bar;\n}\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier} [start]\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=} start\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0 && stop) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let started = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (started) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        started = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n            // We need to set this to false because callbacks can still happen despite having unsubscribed:\n            // Callbacks might already be placed in the queue which doesn't know it should no longer\n            // invoke this derived store.\n            started = false;\n        };\n    });\n}\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * @param store - store to make readonly\n */\nfunction readonly(store) {\n    return {\n        subscribe: store.subscribe.bind(store)\n    };\n}\n\nexport { derived, readable, readonly, writable };\n","import { writable } from 'svelte/store';\nimport type { Annotation } from '../model';\nimport type { Store } from './Store';\n\nexport type HoverState<T extends Annotation> = ReturnType<typeof createHoverState<T>>;\n\nexport const createHoverState = <T extends Annotation>(store: Store<T>) => {\n\n  const { subscribe, set } = writable<string>(null);\n\n  let currentHover: string = null;\n\n  subscribe(updated => currentHover = updated);\n\n  // Track store delete and update events\n  store.observe(( { changes }) => {    \n    if (currentHover) {\n      const isDeleted = changes.deleted.some(a => a.id === currentHover);\n      if (isDeleted)\n        set(null);\n    \n      const updated = changes.updated.find(({ oldValue }) => oldValue.id === currentHover);\n      if (updated)\n        set(updated.newValue.id);\n    }\n  });\n\n  return { \n    get current() { return currentHover },\n    subscribe, \n    set \n  };\n\n}\n","import { writable } from 'svelte/store';\nimport type {  Annotation } from '../model';\nimport type { Store } from './Store';\n   \nexport type Selection = {\n\n  selected: { id: string, editable?: boolean }[],\n\n  pointerEvent?: PointerEvent;\n\n}\n\nexport type SelectionState<T extends Annotation> = ReturnType<typeof createSelectionState<T>>;\n\nexport enum PointerSelectAction {\n\n  EDIT = 'EDIT', // Make annotation target(s) editable on pointer select\n  \n  HIGHLIGHT = 'HIGHLIGHT',  // Just hightlight on select, but don't make editable\n\n  NONE = 'NONE' // Click won't select - annotation is completely inert\n\n}\n\nconst EMPTY: Selection = { selected: [] };\n\nexport const createSelectionState = <T extends Annotation>(\n  store: Store<T>,\n  selectAction: PointerSelectAction | ((a: Annotation) => PointerSelectAction) = PointerSelectAction.EDIT\n) => {\n  const { subscribe, set } = writable<Selection>(EMPTY);\n\n  let currentSelection: Selection = EMPTY;\n\n  subscribe(updated => currentSelection = updated);\n\n  const clear = () => set(EMPTY);\n\n  const isEmpty = () => currentSelection.selected?.length === 0;\n\n  const isSelected = (annotationOrId: T | string) => {\n    if (currentSelection.selected.length === 0)\n      return false;\n\n    const id = typeof annotationOrId === 'string' ? annotationOrId : annotationOrId.id;\n    return currentSelection.selected.some(i => i.id === id);\n  }\n\n  // TODO enable CTRL select\n  const clickSelect = (id: string, pointerEvent: PointerEvent) => {\n    const annotation = store.getAnnotation(id);\n    if (annotation) {\n      const action = onPointerSelect(annotation, selectAction);\n      if (action === PointerSelectAction.EDIT)\n        set({ selected: [{ id, editable: true }], pointerEvent }); \n      else if (action === PointerSelectAction.HIGHLIGHT)\n        set({ selected: [{ id }], pointerEvent }); \n      else\n        set({ selected: [], pointerEvent });\n    } else {\n      console.warn('Invalid selection: ' + id);\n    }\n  }\n\n  const setSelected = (idOrIds: string | string[], editable: boolean = true) => {\n    const ids = Array.isArray(idOrIds) ? idOrIds : [idOrIds];\n\n    // Remove invalid\n    const annotations = \n      ids.map(id => store.getAnnotation(id)).filter(a => a); \n\n    set({ selected: annotations.map(({ id }) => ({ id, editable })) });\n    \n    if (annotations.length !== ids.length)\n      console.warn('Invalid selection', idOrIds);\n  }\n\n  const removeFromSelection = (ids: string[]) => {\n    if (currentSelection.selected.length === 0)\n      return false;\n\n    const { selected } = currentSelection;\n\n    // Checks which of the given annotations are actually in the selection\n    const toRemove = selected.filter(({ id  }) => ids.includes(id))\n\n    if (toRemove.length > 0)\n      set({ selected: selected.filter(({ id }) => !ids.includes(id)) });\n  }\n\n  // Track store delete and update events\n  store.observe(({ changes }) =>\n    removeFromSelection(changes.deleted.map(a => a.id)));\n\n  return { \n    clear, \n    clickSelect, \n    get selected() { return currentSelection ? [...currentSelection.selected ] : null},\n    get pointerEvent() { return currentSelection ? currentSelection.pointerEvent : null },\n    isEmpty, \n    isSelected, \n    setSelected, \n    subscribe \n  };\n\n}\n\nexport const onPointerSelect = (\n  annotation: Annotation, \n  action?: PointerSelectAction | ((a: Annotation) => PointerSelectAction)\n): PointerSelectAction => (typeof action === 'function') ?\n    (action(annotation) || PointerSelectAction.EDIT) : \n    (action || PointerSelectAction.EDIT);\n","import { v4 as uuidv4 } from 'uuid';\nimport type { Annotation, AnnotationBody, User } from '../model';\n\n/**\n * Returns all users listed as creators or updaters in any parts of this\n * annotation.\n */\nexport const getContributors = (annotation: Annotation): User[] => {\n  const { creator, updatedBy } = annotation.target;\n\n  const bodyCollaborators = annotation.bodies.reduce((users, body) =>  (\n    [...users, body.creator, body.updatedBy]\n  ), [] as User[]);\n\n  return [\n    creator,\n    updatedBy,\n    ...bodyCollaborators\n  ].filter(u => u); // Remove undefined\n}\n\nexport const createBody = (\n  annotation: Annotation, \n  payload: { [key: string]: any },\n  created?: Date,\n  creator?: User\n): AnnotationBody => ({\n  id: uuidv4(),\n  annotation: annotation.id,\n  created: created || new Date(),\n  creator,\n  ...payload\n});","import { dequal } from 'dequal/lite';\nimport type { Update } from '../state';\nimport type { Annotation } from '../model';\n\nconst getAddedBodies = (oldValue: Annotation, newValue: Annotation) => {\n  const oldBodyIds = new Set(oldValue.bodies.map(b => b.id));\n  return newValue.bodies.filter(b => !oldBodyIds.has(b.id));\n}\n\nconst getRemovedBodies = (oldValue: Annotation, newValue: Annotation) => {\n  const newBodyIds = new Set(newValue.bodies.map(b => b.id));\n  return oldValue.bodies.filter(b => !newBodyIds.has(b.id));\n}\n\nconst getChangedBodies = (oldValue: Annotation, newValue: Annotation) => \n  newValue.bodies\n    .map(newBody => {\n      const oldBody = oldValue.bodies.find(b => b.id === newBody.id);\n      return { newBody, oldBody: oldBody && !dequal(oldBody, newBody) ? oldBody : undefined }\n    })\n    .filter(({ oldBody }) => oldBody);\n\nconst hasTargetChanged = (oldValue: Annotation, newValue: Annotation) => \n  !dequal(oldValue.target, newValue.target);\n\nexport const diffAnnotations = <T extends Annotation = Annotation>(oldValue: T, newValue: T): Update<T> => ({\n  oldValue, \n  newValue,\n  bodiesCreated: getAddedBodies(oldValue, newValue),\n  bodiesDeleted: getRemovedBodies(oldValue, newValue),\n  bodiesUpdated: getChangedBodies(oldValue, newValue),\n  targetUpdated: hasTargetChanged(oldValue, newValue) ? { oldTarget: oldValue.target, newTarget: newValue.target } : undefined\n});","import type { Annotation, AnnotationBody, AnnotationTarget } from '../model';\n\n/** Interface for listening to changes in the annotation store **/\nexport interface StoreObserver<T extends Annotation> { \n\n  onChange: { (event: StoreChangeEvent<T>): void };\n\n  options: StoreObserveOptions;\n\n}\n\n/** A change event fired when the store state changes **/\nexport interface StoreChangeEvent<T extends Annotation> {\n\n  origin: Origin;\n\n  changes: ChangeSet<T>;\n\n  state: T[];\n\n}\n\nexport interface ChangeSet<T extends Annotation> {\n\n  created?: T[];\n\n  deleted?: T[];\n\n  updated?: Update<T>[];\n\n}\n\nexport interface Update<T extends Annotation> {\n\n  oldValue: T;\n\n  newValue: T;\n\n  bodiesCreated?: AnnotationBody[];\n\n  bodiesDeleted?: AnnotationBody[];\n\n  bodiesUpdated?: Array<{ oldBody: AnnotationBody, newBody: AnnotationBody }>;\n\n  targetUpdated?: { oldTarget: AnnotationTarget, newTarget: AnnotationTarget};\n\n}\n\n/** Options to control which events the observer wants to get notified about **/\nexport interface StoreObserveOptions {\n\n  // Observe changes on targets, bodies or both?\n  ignore?: Ignore;\n\n  // Observe changes on one more specific annotations\n  annotations?: string | string[];\n\n  // Observer changes only for a specific origin\n  origin?: Origin\n\n}\n\n/** Allows the observer to ignore certain event types **/\nexport enum Ignore { \n\n  // Don't notify this observer for changes that involve bodies only\n  BODY_ONLY = 'BODY_ONLY',\n\n  // Don't notify for changes on targets only\n  TARGET_ONLY = 'TARGET_ONLY'\n\n}\n\n/** Allows the observer to listen only for events that originated locally or from a remote source **/\nexport enum Origin { \n  \n  LOCAL = 'LOCAL', \n  \n  REMOTE = 'REMOTE' \n\n}\n\n/** Tests if this observer should be notified about this event **/\nexport const shouldNotify = <T extends Annotation>(observer: StoreObserver<T>, event: StoreChangeEvent<T>) => {\n  const { changes, origin } = event;\n\n  const isRelevantOrigin = \n    !observer.options.origin || observer.options.origin === origin;\n\n  if (!isRelevantOrigin)\n    return false;\n\n  if (observer.options.ignore) {\n    const { ignore } = observer.options;\n\n    // Shorthand\n    const has = (arg: any[]) => arg?.length > 0;\n\n    const hasAnnotationChanges =\n      has(changes.created) || has(changes.deleted);\n\n    if (!hasAnnotationChanges) {\n      const hasBodyChanges =\n        changes.updated?.some(u => has(u.bodiesCreated) || has(u.bodiesDeleted) || has(u.bodiesUpdated));\n    \n      const hasTargetChanges = \n        changes.updated?.some(u => u.targetUpdated);\n\n      if (ignore === Ignore.BODY_ONLY && hasBodyChanges && !hasTargetChanges)\n        return false;\n\n      if (ignore === Ignore.TARGET_ONLY && hasTargetChanges && !hasBodyChanges)\n        return false;\n    }\n  }\n\n  if (observer.options.annotations) {\n    // This observer has a filter set on specific annotations - check affected\n    const affectedAnnotations = new Set([\n      ...changes.created.map(a => a.id),\n      ...changes.deleted.map(a => a.id),\n      ...changes.updated.map(({ oldValue }) => oldValue.id)\n    ]);\n\n    const observed = Array.isArray(observer.options.annotations) ?\n      observer.options.annotations : [ observer.options.annotations ];\n\n    return Boolean(observed.find(id => affectedAnnotations.has(id)));\n  } else {\n    return true;\n  }\n\n}\n\nexport const mergeChanges = <T extends Annotation>(event: StoreChangeEvent<T>, toMerge: StoreChangeEvent<T>) => {\n  if (event.origin !== toMerge.origin)\n    throw 'Cannot merge events from different origins';\n\n  return {\n    origin: toMerge.origin,\n    changes: {\n      // TODO filter created that were deleted in the same go\n      created: [...(event.changes.created || []), ...(toMerge.changes.created || []) ],\n      deleted: [...(event.changes.deleted || []), ...(toMerge.changes.deleted || []) ] \n      // TODO merge updates\n    },\n    state: toMerge.state\n  }\n}","import type { Annotation, AnnotationBody, AnnotationTarget } from '../model';\nimport { diffAnnotations } from '../utils';\nimport { Origin, shouldNotify, type Update, type ChangeSet } from './StoreObserver';\nimport type { StoreObserver, StoreChangeEvent, StoreObserveOptions } from './StoreObserver';\n\n// Shorthand\ntype AnnotationBodyIdentifier = { id: string, annotation: string }; \n\nexport type Store<T extends Annotation> = ReturnType<typeof createStore<T>>;\n\nconst isAnnotation = <T extends Annotation>(arg: any): arg is T => arg.id !== undefined;\n\nexport const createStore = <T extends Annotation>() => {\n\n  const annotationIndex = new Map<string, T>();\n\n  const bodyIndex = new Map<string, string>();\n\n  const observers: StoreObserver<T>[] = [];\n\n  const observe = (onChange: { (event: StoreChangeEvent<T>): void }, options: StoreObserveOptions = {}) =>\n    observers.push({ onChange, options });\n\n  const unobserve = (onChange: { (event: StoreChangeEvent<T>): void }) => {\n    const idx = observers.findIndex(observer => observer.onChange == onChange);\n    if (idx > -1)\n      observers.splice(idx, 1);\n  }\n\n  const emit = (origin: Origin, changes: ChangeSet<T>) => {\n    const event: StoreChangeEvent<T> = {\n      origin,\n      changes: {\n        created: changes.created || [],\n        updated: changes.updated || [],\n        deleted: changes.deleted || []\n      },\n      state: [...annotationIndex.values()]\n    };\n\n    observers.forEach(observer => {\n      if (shouldNotify(observer, event))\n        observer.onChange(event);\n    });\n  }\n\n  const addAnnotation = (annotation: T, origin = Origin.LOCAL) => {\n    const existing = annotationIndex.get(annotation.id);\n\n    if (existing) {\n      throw Error(`Cannot add annotation ${annotation.id} - exists already`);\n    } else {\n      annotationIndex.set(annotation.id, annotation);\n\n      annotation.bodies.forEach(b => bodyIndex.set(b.id, annotation.id));\n      emit(origin, { created: [annotation] });\n    }\n  }\n\n  const updateAnnotation = (arg1: string | T, arg2: T | Origin = Origin.LOCAL, arg3 = Origin.LOCAL) => {\n    const origin: Origin = isAnnotation(arg2) ? arg3 : arg2;\n\n    const updated: T = typeof arg1 === 'string' ? arg2 as T : arg1;\n\n    const oldId: string = typeof arg1 === 'string' ? arg1 : arg1.id;\n    const oldValue = annotationIndex.get(oldId);\n\n    if (oldValue) {\n      const update: Update<T> = diffAnnotations(oldValue, updated);\n\n      if (oldId === updated.id) {\n        annotationIndex.set(oldId, updated);\n      } else {\n        annotationIndex.delete(oldId);\n        annotationIndex.set(updated.id, updated);\n      }\n\n      oldValue.bodies.forEach(b => bodyIndex.delete(b.id));\n      updated.bodies.forEach(b => bodyIndex.set(b.id, updated.id));\n\n      emit(origin, { updated: [update] })\n    } else {\n      throw Error(`Cannot update annotation ${oldId} - does not exist`);\n    }\n  }\n\n  const addBody = (body: AnnotationBody, origin = Origin.LOCAL) => {\n    const oldValue = annotationIndex.get(body.annotation);\n    if (oldValue) {\n      const newValue = { \n        ...oldValue,\n        bodies: [ ...oldValue.bodies, body ]\n      };\n\n      annotationIndex.set(oldValue.id, newValue);\n\n      bodyIndex.set(body.id, newValue.id);\n\n      const update: Update<T> = {\n        oldValue, newValue, bodiesCreated: [ body ]\n      };\n\n      emit(origin, { updated: [update] });\n    } else {\n      console.warn(`Attempt to add body to missing annotation: ${body.annotation}`);\n    }\n  }\n\n  const all = () => [...annotationIndex.values()];\n\n  const clear = (origin = Origin.LOCAL) => { \n    const all = [...annotationIndex.values()];\n\n    annotationIndex.clear();\n    bodyIndex.clear();\n\n    emit(origin, { deleted: all });\n  }\n\n  const bulkAddAnnotation = (annotations: T[], replace = true, origin = Origin.LOCAL) => {\n    if (replace) {\n      // Delete existing first\n      const deleted = [...annotationIndex.values()];\n      annotationIndex.clear();\n      bodyIndex.clear();\n\n      annotations.forEach(annotation => {\n        annotationIndex.set(annotation.id, annotation);\n        annotation.bodies.forEach(b => bodyIndex.set(b.id, annotation.id));\n      });\n\n      emit(origin, { created: annotations, deleted });\n    } else {\n      // Don't allow overwriting of existing annotations\n      const existing = annotations.reduce((all, next) => {\n        const existing = annotationIndex.get(next.id);\n        return existing ? [...all, existing ] : all;\n      }, []);\n\n      if (existing.length > 0)\n        throw Error(`Bulk insert would overwrite the following annotations: ${existing.map(a => a.id).join(', ')}`);\n\n      annotations.forEach(annotation => {\n        annotationIndex.set(annotation.id, annotation);\n        annotation.bodies.forEach(b => bodyIndex.set(b.id, annotation.id));\n      });\n\n      emit(origin, { created: annotations });\n    }\n  }\n\n  const deleteOneAnnotation = (annotationOrId: T | string) => {\n    const id = typeof annotationOrId === 'string' ? annotationOrId : annotationOrId.id;\n\n    const existing = annotationIndex.get(id);\n    if (existing) {\n      annotationIndex.delete(id);\n      existing.bodies.forEach(b => bodyIndex.delete(b.id));\n      return existing;\n    } else {\n      console.warn(`Attempt to delete missing annotation: ${id}`);\n    }\n  }\n\n  const deleteAnnotation = (annotationOrId: T | string, origin = Origin.LOCAL) => {\n    const deleted = deleteOneAnnotation(annotationOrId);\n    if (deleted)\n      emit(origin, { deleted: [ deleted  ]});\n  }\n\n  const bulkDeleteAnnotation = (annotationsOrIds: (T | string)[], origin = Origin.LOCAL) => {\n    const deleted = annotationsOrIds.reduce((deleted, arg) => {\n      const existing = deleteOneAnnotation(arg);\n      return existing ? [...deleted, existing] : deleted;\n    }, [] as T[]);\n\n    if (deleted.length > 0)\n      emit(origin, { deleted });\n  }\n \n  const deleteBody = (body: AnnotationBodyIdentifier, origin = Origin.LOCAL) => {\n    const oldAnnotation = annotationIndex.get(body.annotation);\n\n    if (oldAnnotation) {\n      const oldBody = oldAnnotation.bodies.find(b => b.id === body.id);\n\n      if (oldBody) {\n        bodyIndex.delete(oldBody.id);\n\n        const newAnnotation = {\n          ...oldAnnotation,\n          bodies: oldAnnotation.bodies.filter(b => b.id !== body.id)\n        };\n\n        annotationIndex.set(oldAnnotation.id, newAnnotation);\n\n        const update: Update<T> = {\n          oldValue: oldAnnotation, newValue: newAnnotation, bodiesDeleted: [oldBody]\n        };\n\n        emit(origin, { updated: [update] });\n      } else {\n        console.warn(`Attempt to delete missing body ${body.id} from annotation ${body.annotation}`);\n      }\n    } else {\n      console.warn(`Attempt to delete body from missing annotation ${body.annotation}`);\n    }\n  }\n\n  const getAnnotation = (id: string): T | undefined => {\n    const a = annotationIndex.get(id);\n    return a ? {...a} : undefined;\n  }\n\n  const getBody = (id: string): AnnotationBody | undefined => {\n    const annotationId = bodyIndex.get(id);\n    if (annotationId) {\n      const annotation = getAnnotation(annotationId);\n      const body = annotation.bodies.find(b => b.id === id);\n      if (body) {\n        return body;\n      } else {\n        console.error(`Store integrity error: body ${id} in index, but not in annotation`);\n      }\n    } else {\n      console.warn(`Attempt to retrieve missing body: ${id}`);\n    }\n  }\n\n  const updateOneBody = (oldBodyId: AnnotationBodyIdentifier, newBody: AnnotationBody) => {\n    if (oldBodyId.annotation !== newBody.annotation)\n      throw 'Annotation integrity violation: annotation ID must be the same when updating bodies';\n\n    const oldAnnotation = annotationIndex.get(oldBodyId.annotation);\n    if (oldAnnotation) {\n      const oldBody = oldAnnotation.bodies.find(b => b.id === oldBodyId.id);\n\n      const newAnnotation = { \n        ...oldAnnotation,\n        bodies: oldAnnotation.bodies.map(b => b.id === oldBody.id ? newBody : b)\n      };\n\n      annotationIndex.set(oldAnnotation.id, newAnnotation);\n\n      if (oldBody.id !== newBody.id) {\n        bodyIndex.delete(oldBody.id);\n        bodyIndex.set(newBody.id, newAnnotation.id);\n      }\n\n      return {\n        oldValue: oldAnnotation, \n        newValue: newAnnotation,\n        bodiesUpdated: [{ oldBody, newBody }]\n      }\n    } else {\n      console.warn(`Attempt to add body to missing annotation ${oldBodyId.annotation}`);\n    }\n  }\n\n  const updateBody = (oldBodyId: AnnotationBodyIdentifier, newBody: AnnotationBody, origin = Origin.LOCAL) => {\n    const update = updateOneBody(oldBodyId, newBody);\n    emit(origin, { updated: [ update ]} );\n  }\n\n  const bulkUpdateBodies = (bodies: AnnotationBody[], origin = Origin.LOCAL) => {\n    const updated = bodies.map(b => updateOneBody({ id: b.id, annotation: b.annotation }, b));\n    emit(origin, { updated });\n  }\n\n  const updateOneTarget = (target: AnnotationTarget): Update<T> => {\n    const oldValue = annotationIndex.get(target.annotation);\n    \n    if (oldValue) {\n      const newValue = { \n        ...oldValue, \n        target: {\n          ...oldValue.target,\n          ...target \n        }\n      };\n\n      annotationIndex.set(oldValue.id, newValue);\n\n      return {\n        oldValue, newValue, targetUpdated: { \n          oldTarget: oldValue.target,\n          newTarget: target\n        }\n      };\n    } else {\n      console.warn(`Attempt to update target on missing annotation: ${target.annotation}`);\n    }\n  }\n\n  const updateTarget = (target: AnnotationTarget, origin = Origin.LOCAL) => {\n    const update = updateOneTarget(target);\n    if (update)\n      emit(origin, { updated: [ update ]} );\n  }\n\n  const bulkUpdateTargets = (targets: AnnotationTarget[], origin = Origin.LOCAL) => {\n    const updated = targets.map(updateOneTarget).filter(val => val);\n    if (updated.length > 0)\n      emit(origin, { updated });\n  }\n\n\treturn {\n    addAnnotation,\n    addBody,\n    all,\n    bulkAddAnnotation,\n    bulkDeleteAnnotation,\n    bulkUpdateBodies,\n    bulkUpdateTargets,\n    clear,\n    deleteAnnotation,\n    deleteBody,\n    getAnnotation,\n    getBody,\n    observe,\n    unobserve,\n    updateAnnotation,\n    updateBody,\n    updateTarget\n\t};\n\n}","import type { Annotation, Annotator, AnnotatorState } from '../model';\nimport type { Store } from './Store';\nimport type { StoreChangeEvent } from './StoreObserver';\n\ntype Subscriber<T extends Annotation> = (annotation: T[]) => void; \n\nexport interface SvelteStore<T extends Annotation> extends Store<T> {\n\n  subscribe(onChange: Subscriber<T>): void;\n\n}\n\nexport interface SvelteAnnotatorState<T extends Annotation> extends AnnotatorState<T> {\n\n  store: SvelteStore<T>\n\n}\n\nexport interface SvelteAnnotator<T extends Annotation> extends Annotator<T> {\n\n  state: SvelteAnnotatorState<T>\n\n}\n\n/** \n * A simple wrapper around the event-based store implementation\n * that adds a Svelte shim, for use with the reactive '$' notation.\n * Other frameworks might not actually need this. But it's pretty\n * convenient for everyone using Svelte, as well as for the\n * basic (Svelte-based) Annotorious standard implementation.\n */\nexport const toSvelteStore = <T extends Annotation>(store: Store<T>): SvelteStore<T> => {\n\n  const subscribe = (onChange: Subscriber<T>) => {\n\n    // Register a store observer on behalf of the subscriber\n    const shim = (event: StoreChangeEvent<T>) => onChange(event.state);\n    store.observe(shim);\n\n    // Immediately call the subscriber function with the\n    // current store value, according to the Svelte contract.\n    // https://stackoverflow.com/questions/68220955/how-does-svelte-unsubscribe-actually-work\n    onChange(store.all());\n\n    // Return the unsubscribe function\n    return () => store.unobserve(shim);\n  }\n\n  return {\n    ...store,\n    subscribe\n  }\n\n}","import { writable } from 'svelte/store';\n\nexport type ViewportState = ReturnType<typeof createViewportState>;\n\nexport const createViewportState = () => {\n\n  const { subscribe, set } = writable<string[]>([]);\n\n  return { \n    subscribe, \n    set\n  };\n\n}\n","import { dequal } from 'dequal/lite';\nimport type { Annotation, FormatAdapter } from '../model';\nimport { Origin } from '../state';\nimport type { HoverState, SelectionState, Store, ViewportState } from '../state';\nimport type { LifecycleEvents } from './LifecycleEvents';\n\nexport type Lifecycle<I extends Annotation, E extends unknown> = \n  ReturnType<typeof createLifecyleObserver<I, E>>;\n\nexport const createLifecyleObserver = <I extends Annotation, E extends unknown>(\n  store: Store<I>,\n  selectionState: SelectionState<I>, \n  hoverState: HoverState<I>,\n  viewportState?: ViewportState,\n  adapter?: FormatAdapter<I, E>,\n  autoSave?: boolean\n) => {\n  const observers: Map<keyof LifecycleEvents, Function[]> = new Map();\n\n  // The currently selected annotations, in the state when they were selected \n  let initialSelection: I[] = [];\n\n  let currentHover: string | undefined;\n\n  let idleTimeout: ReturnType<typeof setTimeout>;\n\n  const on = <T extends keyof LifecycleEvents>(event: T, callback: LifecycleEvents<E>[T]) => {\n    if (observers.has(event)) {\n      observers.get(event).push(callback);\n    } else {\n      observers.set(event, [callback]);\n    }\n  }\n\n  const off = <T extends keyof LifecycleEvents<E>>(event: T, callback: LifecycleEvents<E>[T]) => {\n    const callbacks = observers.get(event);\n    if (callbacks) {\n      const idx = callbacks.indexOf(callback);\n      if (idx > 0)\n        callbacks.splice(callbacks.indexOf(callback), 1);\n    }\n  }\n\n  const emit = (event: keyof LifecycleEvents<E>, arg0: I | I[], arg1?: I | PointerEvent) => {\n    if (observers.has(event)) {\n      setTimeout(() => {\n        observers.get(event).forEach(callback => { \n          if (adapter) {\n            const serialized0 = Array.isArray(arg0) ? \n              arg0.map(a => adapter.serialize(a)) : adapter.serialize(arg0);\n            \n            const serialized1: E | PointerEvent | undefined =\n              arg1 ? arg1 instanceof PointerEvent ? arg1 : adapter.serialize(arg1) : undefined;\n\n            callback(serialized0 as E & E[], serialized1); \n          } else {\n            callback(arg0 as E & E[], arg1 as unknown as E);  \n          }\n        });\n      }, 1);\n    }\n  }\n\n  const onIdleUpdate = () => {\n    const { selected } = selectionState;\n\n    // User idle after activity - fire update events for selected\n    // annotations that changed\n    const updatedSelected = selected.map(({ id }) => store.getAnnotation(id));\n\n    updatedSelected.forEach(updated => {\n      const initial = initialSelection.find(a => a.id === updated.id);\n      if (!initial || !dequal(initial, updated)) {\n        emit('updateAnnotation', updated, initial);\n      }\n    });\n\n    initialSelection = initialSelection.map(initial => {\n      const updated = updatedSelected.find(({ id }) => id === initial.id);\n      return updated ? updated : initial\n    });\n  }\n\n  selectionState.subscribe(({ selected })=> {\n    if (initialSelection.length === 0 && selected.length === 0)\n      return;\n\n    if (initialSelection.length === 0 && selected.length > 0) {\n      // A new selection was made - store the editable annotation as initial state\n      initialSelection = selected.map(({ id }) => store.getAnnotation(id));\n    } else if (initialSelection.length > 0 && selected.length === 0) {\n      // Deselect!\n      initialSelection.forEach(initial => {\n        const updatedState = store.getAnnotation(initial.id);  \n        \n        if (updatedState && !dequal(updatedState, initial)) {\n          emit('updateAnnotation', updatedState, initial);\n        }\n      });\n\n      initialSelection = [];\n    } else {\n      // Changed selection\n      const initialIds = new Set(initialSelection.map(a => a.id));\n      const selectedIds = new Set(selected.map(({ id }) => id));\n\n      // Fire update events for deselected annotations that have changed\n      const deselected = initialSelection.filter(a => !selectedIds.has(a.id));\n      deselected.forEach(initial => {\n        const updatedState = store.getAnnotation(initial.id);\n\n        if (updatedState && !dequal(updatedState, initial))\n          emit('updateAnnotation', updatedState, initial);\n      });\n\n      initialSelection = [\n        // Remove annotations that were deselected\n        ...initialSelection.filter(a => selectedIds.has(a.id)),\n        // Add editable annotations that were selected\n        ...selected.filter(({ id }) => !initialIds.has(id))\n          .map(({ id }) => store.getAnnotation(id))\n      ];\n    }\n\n    emit('selectionChanged', initialSelection);\n  });\n\n  hoverState.subscribe(id => {\n    if (!currentHover && id) {\n      emit('mouseEnterAnnotation', store.getAnnotation(id));\n    } else if (currentHover && !id) {\n      emit('mouseLeaveAnnotation', store.getAnnotation(currentHover));\n    } else if (currentHover && id) {\n      emit('mouseLeaveAnnotation', store.getAnnotation(currentHover));\n      emit('mouseEnterAnnotation', store.getAnnotation(id));\n    }\n\n    currentHover = id;\n  });\n\n  viewportState?.subscribe(ids => \n    emit('viewportIntersect', ids.map(store.getAnnotation)));\n\n  store.observe(event => {\n    // autoSave option triggers update events on idleness\n    if (autoSave) {\n      if (idleTimeout)\n        clearTimeout(idleTimeout);\n\n      idleTimeout = setTimeout(onIdleUpdate, 1000);\n    }\n\n    // Local CREATE and DELETE events are applied immediately\n    const { created, deleted } = event.changes;\n    created.forEach(a => emit('createAnnotation', a));\n    deleted.forEach(a => emit('deleteAnnotation', a));\n\n    // Updates are only applied immediately if they involve body changes\n    const updatesWithBody = event.changes.updated.filter(u => [\n      ...(u.bodiesCreated || []),\n      ...(u.bodiesDeleted || []),\n      ...(u.bodiesUpdated || [])\n    ].length > 0);\n\n    // Emit an update with the new annototation and the stored initial state\n    updatesWithBody.forEach(({ oldValue, newValue }) => {\n      const initial = initialSelection.find(a => a.id === oldValue.id) || oldValue;\n\n      // Record the update as the new last known state\n      initialSelection = initialSelection\n        .map(a => a.id === oldValue.id ? newValue : a);\n\n      emit('updateAnnotation', newValue, initial);\n    });\n  }, { origin: Origin.LOCAL });\n\n  // Track remote changes - these should update the initial state\n  store.observe(event => {\n    if (initialSelection) {\n      const selectedIds = new Set(initialSelection.map(a => a.id));\n\n      const relevantUpdates = event.changes.updated\n        .filter(({ newValue }) => selectedIds.has(newValue.id))\n        .map(({ newValue }) => newValue);\n\n      if (relevantUpdates.length > 0) {\n        initialSelection = initialSelection.map(selected => {\n          const updated = relevantUpdates.find(updated => updated.id === selected.id);\n          return updated ? updated : selected;\n        })\n      }\n    }\n  }, { origin: Origin.REMOTE });\n\n  return { on, off, emit }\n\n}","import type { Annotation } from './Annotation';\n\nexport interface FormatAdapter<A extends Annotation, T extends unknown> {\n\n  parse(serialized: T): ParseResult<A>;\n\n  serialize(core: A): T;\n\n}\n\nexport interface ParseResult<A extends Annotation> {\n\n  parsed?: A;\n  \n  error?: Error;\n\n}\n\nexport const serializeAll = \n  <A extends Annotation, T extends unknown>(adapter: FormatAdapter<A, T>) =>\n    (annotations: A[]) => annotations.map(a => adapter.serialize(a));\n\nexport const parseAll = \n  <A extends Annotation, T extends unknown>(adapter: FormatAdapter<A, T>) =>\n    (serialized: T[]) => serialized.reduce((result, next) => {\n      const { parsed, error } = adapter.parse(next);\n\n      return error ? {\n        parsed: result.parsed,\n        failed: [...result.failed, next ]\n      } : {\n        parsed: [...result.parsed, parsed ],\n        failed: result.failed\n      }\n    }, { parsed: [], failed: [] });\n  ","import type { Annotation } from './Annotation';\nimport type { User } from './User';\nimport type { PresenceProvider } from '../presence';\nimport { Origin, type HoverState, type SelectionState, type Store, type ViewportState } from '../state';\nimport type { LifecycleEvents } from '../lifecycle';\nimport { parseAll, type FormatAdapter } from './FormatAdapter';\nimport type { DrawingStyle } from './DrawingStyle';\n\n/**\n * Base annotator interface.\n * I ... internal core data model \n * E ... external adapted representation\n */\nexport interface Annotator<I extends Annotation = Annotation, E extends unknown = Annotation> {\n\n  style: DrawingStyle | ((annotation: I) => DrawingStyle) | undefined;\n\n  addAnnotation(annotation: E): void;\n\n  clearAnnotations(): void;\n\n  destroy(): void;\n\n  getAnnotationById(id: string): E | undefined;\n\n  getAnnotations(): E[];\n\n  getUser(): User;\n\n  loadAnnotations(url: string): Promise<E[]>;\n\n  removeAnnotation(arg: E | string): E;\n\n  setAnnotations(annotations: E[]): void;\n\n  setPresenceProvider?(provider: PresenceProvider): void;\n\n  setSelected(arg?: string | string[]): void;\n\n  setUser(user: User): void;\n\n  updateAnnotation(annotation: E): E;\n  \n  on<T extends keyof LifecycleEvents<E>>(event: T, callback: LifecycleEvents<E>[T]): void;\n\n  off<T extends keyof LifecycleEvents<E>>(event: T, callback: LifecycleEvents<E>[T]): void;\n\n  state: AnnotatorState<I>;\n\n}\n\nexport interface AnnotatorState<A extends Annotation> {\n\n  store: Store<A>;\n\n  selection: SelectionState<A>;\n\n  hover: HoverState<A>;\n\n  viewport: ViewportState;\n\n}\n\nexport const createBaseAnnotator = <I extends Annotation, E extends unknown>(\n  store: Store<I>, \n  adapter?: FormatAdapter<I, E>\n) => {\n\n  const addAnnotation = (annotation: E) => {\n    if (adapter) {\n      const { parsed, error } = adapter.parse(annotation);\n      if (parsed) {\n        store.addAnnotation(parsed, Origin.REMOTE);\n      } else {\n        console.error(error);\n      }\n    } else {\n      store.addAnnotation(annotation as unknown as I, Origin.REMOTE);\n    }\n  }\n\n  const clearAnnotations = () => store.clear();\n\n  const getAnnotationById = (id: string): E | undefined => {\n    const annotation = store.getAnnotation(id);\n    return (adapter && annotation) ?\n      adapter.serialize(annotation) as E : annotation as unknown as E;\n  }\n\n  const getAnnotations = () =>\n    (adapter ? store.all().map(adapter.serialize) : store.all()) as E[];\n\n  const loadAnnotations = (url: string) =>\n    fetch(url)\n      .then((response) => response.json())\n      .then((annotations) => {\n        setAnnotations(annotations);\n        return annotations;\n      });\n\n  const removeAnnotation = (arg: E | string): E => {\n    if (typeof arg === 'string') {\n      const annotation = store.getAnnotation(arg);\n      store.deleteAnnotation(arg);\n\n      return adapter ? adapter.serialize(annotation) : annotation as unknown as E;\n    } else {\n      const annotation = adapter ? adapter.parse(arg).parsed : (arg as unknown as I);\n      store.deleteAnnotation(annotation);\n      return arg;\n    }\n  }\n\n  const setAnnotations = (annotations: E[]) => {\n    if (adapter) {\n      const { parsed, failed } = parseAll(adapter)(annotations);\n\n      if (failed.length > 0)\n        console.warn(`Discarded ${failed.length} invalid annotations`, failed);\n\n      store.bulkAddAnnotation(parsed, true, Origin.REMOTE);\n    } else {\n      store.bulkAddAnnotation(annotations as unknown as I[], true, Origin.REMOTE);\n    }\n  }\n\n  const updateAnnotation = (updated: E): E => {\n    if (adapter) {\n      const crosswalked = adapter.parse(updated).parsed;\n      const previous = adapter.serialize(store.getAnnotation(crosswalked.id));\n      store.updateAnnotation(crosswalked);\n      return previous;\n    } else {\n      const previous = store.getAnnotation((updated as unknown as I).id);\n      store.updateAnnotation(updated as unknown as I);\n      return previous as unknown as E;\n    }\n  }\n\n  return { \n    addAnnotation,\n    clearAnnotations,\n    getAnnotationById,\n    getAnnotations,\n    loadAnnotations,\n    removeAnnotation,\n    setAnnotations,\n    updateAnnotation\n  }\n\n}","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { customAlphabet } from 'nanoid';\n\nexport interface User {\n\n  id: string;\n\n  isGuest?: boolean;\n\n  name?: string;\n\n  avatar?: string;\n\n}\n\nexport const createAnonymousGuest = () => {\n  const nanoid = customAlphabet('1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_', 20);\n  \n  return { isGuest: true, id: nanoid() }\n}","import type { AnnotationBody } from './Annotation';\n\nexport interface W3CAnnotation {\n\n  '@context': 'http://www.w3.org/ns/anno.jsonld';\n\n  type: 'Annotation';\n\n  id: string;\n\n  body: W3CAnnotationBody | W3CAnnotationBody[]\n\n  target: W3CAnnotationTarget | W3CAnnotationTarget[];\n\n  [key: string]: any;\n\n}\n\nexport interface W3CAnnotationBody {\n\n  id?: string;\n\n  type?: string;\n\n  purpose?: string;\n\n  value?: string;\n\n  source?: string;\n\n  created?: Date;\n\n  creator?: {\n\n    type?: string;\n\n    id: string;\n\n    name?: string;\n\n  };\n\n}\n\nexport interface W3CAnnotationTarget {\n\n  source: string;\n\n  selector?: W3CSelector | W3CSelector[];\n\n}\n\nexport interface W3CSelector {\n\n  type: string;\n\n  conformsTo?: string;\n\n  value: string;\n}\n\n// https://stackoverflow.com/questions/6122571/simple-non-secure-hash-function-for-javascript\nconst hashCode = (obj: Object): string => {\n  const str = JSON.stringify(obj);\n\n  let hash = 0;\n\n  for (let i = 0, len = str.length; i < len; i++) {\n      let chr = str.charCodeAt(i);\n      hash = (hash << 5) - hash + chr;\n      hash |= 0; // Convert to 32bit integer\n  }\n\n  return `${hash}`;\n}\n\n/**\n * Helper to crosswalk the W3C annotation body to a list of core AnnotationBody objects.\n */\nexport const parseW3CBodies = (\n  body: W3CAnnotationBody | W3CAnnotationBody[], \n  annotationId: string\n): AnnotationBody[] => (Array.isArray(body) ? body : [body]).map(body => {\n\n  // Exctract properties that conform to the internal model, but keep custom props\n  const { id, type, purpose, value, created, creator, ...rest} = body;\n\n  // The internal model strictly requires IDs. (Because multi-user scenarios\n  // will have problems without them.) In the W3C model, bodys *may* have IDs.\n  // We'll create ad-hoc IDs for bodies without IDs, but want to make sure that\n  // generating the ID is idempotent: the same body should always get the same ID.\n  // This will avoid unexpected results when checking for equality.  \n  return {\n    id: id || hashCode(body),\n    annotation: annotationId,\n    type,\n    purpose,\n    value,\n    created,\n    creator: creator ? \n      typeof creator === 'object' ? { ...creator }: creator :\n      undefined,\n    ...rest\n  }\n\n});\n\nexport const serializeW3CBodies = (bodies: AnnotationBody[]): W3CAnnotationBody[] => \n  bodies.map(b => {\n    const w3c = { ...b };\n    delete w3c.annotation;\n    delete w3c.id;\n    return w3c;\n  });\n\n","// SEABORN_BRIGHT\nexport const DEFAULT_PALETTE: Palette = [\n  '#ff7c00', // orange\n  '#1ac938', // green\n  '#e8000b', // red\n  '#8b2be2', // purple\n  '#9f4800', // brown\n  '#f14cc1', // pink\n  '#ffc400', // khaki\n  '#00d7ff', // cyan\n  '#023eff'  // blue\n];\n\nexport type Palette = string[];","import type { User } from '../model';\nimport type { Appearance } from './Appearance';\nimport type { PresentUser } from './PresentUser';\nimport { DEFAULT_PALETTE } from './ColorPalette';\n\nexport interface AppearanceProvider {\n\n  addUser(presenceKey: string, user: User): Appearance;\n\n  removeUser(user: PresentUser): void;\n\n}\n\nexport const defaultColorProvider = () => {\n\n  const unassignedColors = [...DEFAULT_PALETTE];\n\n  const assignRandomColor = () => {\n    const rnd = Math.floor(Math.random() * unassignedColors.length);\n    const color = unassignedColors[rnd];\n\n    unassignedColors.splice(rnd, 1);\n\n    return color;\n  }\n\n  const releaseColor = (color: string) =>\n    unassignedColors.push(color);\n\n  return { assignRandomColor, releaseColor };\n\n}\n\nexport const createDefaultAppearenceProvider = () => {\n\n  const colorProvider = defaultColorProvider();\n\n  const addUser = (presenceKey: string, user: User): Appearance => {\n    const color = colorProvider.assignRandomColor();\n\n    return {\n      label: user.name || user.id,\n      avatar: user.avatar,\n      color\n    };\n  }\n\n  const removeUser = (user: PresentUser) =>\n    colorProvider.releaseColor(user.appearance.color);\n\n  return { addUser, removeUser }\n  \n}","export let createNanoEvents = () => ({\n  emit(event, ...args) {\n    let callbacks = this.events[event] || []\n    for (let i = 0, length = callbacks.length; i < length; i++) {\n      callbacks[i](...args)\n    }\n  },\n  events: {},\n  on(event, cb) {\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\n    return () => {\n      this.events[event] = this.events[event]?.filter(i => cb !== i)\n    }\n  }\n})\n","import { nanoid } from 'nanoid';\nimport { createNanoEvents, type Unsubscribe } from 'nanoevents';\nimport type { User } from '../model';\nimport type { PresentUser } from './PresentUser';\nimport type { PresenceEvents } from './PresenceEvents';\nimport { createDefaultAppearenceProvider } from './AppearanceProvider';\nimport type { AppearanceProvider } from './AppearanceProvider';\n\nexport interface PresenceState {\n\n  // Get users currently present to this room\n  getPresentUsers(): PresentUser[];\n\n  // Notify of a given present user's activity on the given annotations\n  notifyActivity(presenceKey: string, annotationIds: string[]): void;\n\n  // Add a listener for the given presence event\n  on<E extends keyof PresenceEvents>(event: E, callback: PresenceEvents[E]): Unsubscribe;\n\n  // Initial sync - which users are present under which keys\n  syncUsers(state: { presenceKey: string, user: User }[]): void;\n\n  // Update the selection state for the given prresent user\n  updateSelection(presenceKey: string, selection: string[] | null): void;\n\n}\n\nconst isListEqual = (listA: any[], listB: any[]) => \n  listA.every(a => listA.includes(a)) && listB.every(b => listA.includes(b));\n\n// This client's presence key\nexport const PRESENCE_KEY = nanoid();\n\nexport const createPresenceState = (\n  appearanceProvider: AppearanceProvider = createDefaultAppearenceProvider()\n): PresenceState => {\n\n  const emitter = createNanoEvents<PresenceEvents>();\n\n  const presentUsers = new Map<string, PresentUser>();\n\n  const selectionStates = new Map<string, string[]>();\n\n  const addUser = (presenceKey: string, user: User) => {\n    if (presentUsers.has(presenceKey)) {\n      console.warn('Attempt to add user that is already present', presenceKey, user);\n      return;    \n    }\n\n    const appearance = appearanceProvider.addUser(presenceKey, user);\n\n    presentUsers.set(presenceKey, { \n      ...user,\n      presenceKey,\n      appearance\n    });\n  }\n\n  const removeUser = (presenceKey: string) => {\n    const user = presentUsers.get(presenceKey);\n    if (!user) {\n      console.warn('Attempt to remove user that is not present', presenceKey);\n      return;\n    }\n\n    appearanceProvider.removeUser(user);\n\n    presentUsers.delete(presenceKey);\n  }\n\n  const syncUsers = (state: { presenceKey: string, user: User }[]) => {\n    // const keys = new Set(others.map(s => s.presenceKey));\n    const keys = new Set(state.map(s => s.presenceKey));\n\n    // These users need to be added to the presentUsers list\n    // const toAdd = others.filter(({ presenceKey }) => !presentUsers.has(presenceKey));\n    const toAdd = state.filter(({ presenceKey }) => !presentUsers.has(presenceKey));\n\n    // These users need to be dropped from the list\n    const toRemove = Array.from(presentUsers.values()).filter(presentUser =>\n      !keys.has(presentUser.presenceKey));\n\n    toAdd.forEach(({ presenceKey, user }) => addUser(presenceKey, user));\n\n    toRemove.forEach(user => {\n      const { presenceKey } = user;\n\n      // If this user has a selection, fire deselect event\n      if (selectionStates.has(presenceKey))\n        emitter.emit('selectionChange', user, null);\n\n      removeUser(presenceKey)\n    });\n\n    if (toAdd.length > 0 || toRemove.length > 0)\n      emitter.emit('presence', getPresentUsers());\n  }\n\n  const notifyActivity = (presenceKey: string, annotationIds: string[]) => {    \n    const user = presentUsers.get(presenceKey);\n    \n    if (!user) {\n      console.warn('Activity notification from user that is not present');\n      return;\n    }\n\n    const currentSelection = selectionStates.get(presenceKey);\n\n    // Was there a selection change we might have missed?\n    if (!currentSelection || !isListEqual(currentSelection, annotationIds)) {\n      selectionStates.set(presenceKey, annotationIds);\n      emitter.emit('selectionChange', user, annotationIds);\n    }\n  }\n\n  const updateSelection = (presenceKey: string, selection: string[] | null) => {\n    const from = presentUsers.get(presenceKey);\n    if (!from) {\n      console.warn('Selection change for user that is not present', presenceKey);\n      return;\n    }\n\n    if (selection)\n      selectionStates.set(presenceKey, selection);\n    else \n      selectionStates.delete(presenceKey);\n\n    emitter.emit('selectionChange', from, selection);\n  }\n\n  const getPresentUsers = () =>\n    [...Array.from(presentUsers.values())];\n    \n  const on = <E extends keyof PresenceEvents>(event: E, callback: PresenceEvents[E]) =>\n    emitter.on(event, callback);\n\n  return {\n    getPresentUsers,\n    notifyActivity,\n    on,\n    syncUsers,\n    updateSelection\n  }\n\n}","import { v4 as uuidv4 } from 'uuid';\nimport { parseW3CBodies, serializeW3CBodies } from '@annotorious/core';\nimport type { FormatAdapter, ParseResult, W3CAnnotation, W3CAnnotationBody } from '@annotorious/core';\nimport { ShapeType } from '../core';\nimport type { ImageAnnotation, RectangleGeometry } from '../core';\nimport type { FragmentSelector } from './fragment';\nimport { parseFragmentSelector, serializeFragmentSelector } from './fragment';\nimport type { SVGSelector } from './svg';\nimport { parseSVGSelector, serializeSVGSelector } from './svg';\n\nexport type W3CImageFormatAdapter = FormatAdapter<ImageAnnotation, W3CAnnotation>;\n\nexport const W3CImageFormat = (\n  source: string,\n  invertY: boolean = false\n): W3CImageFormatAdapter => {\n\n  const parse = (serialized: W3CAnnotation) =>\n    parseW3CImageAnnotation(serialized, invertY);\n\n  const serialize = (annotation: ImageAnnotation) =>\n    serializeW3CImageAnnotation(annotation, source);\n\n  return { parse, serialize }\n}\n\nexport const parseW3CImageAnnotation = (\n  annotation: W3CAnnotation, \n  invertY: boolean = false\n): ParseResult<ImageAnnotation> => {\n  const annotationId = annotation.id || uuidv4();\n\n  const bodies = parseW3CBodies(annotation.body, annotationId);\n\n  const target = Array.isArray(annotation.target) ? annotation.target[0] : annotation.target;\n\n  const w3cSelector = Array.isArray(target.selector) ? target.selector[0] : target.selector;\n\n  const selector = \n    w3cSelector.type === 'FragmentSelector' ?\n      parseFragmentSelector(w3cSelector as FragmentSelector, invertY) :\n    w3cSelector.type === 'SvgSelector' ?\n      parseSVGSelector(w3cSelector as SVGSelector) : undefined;\n\n  return selector ? { \n    parsed:{\n      id: annotationId,\n      bodies,\n      target: {\n        annotation: annotationId,\n        selector\n      }\n    }\n  } : {\n    error: Error(`Unknown selector type: ${selector.type}`)\n  };\n\n}\n\nexport const serializeW3CImageAnnotation = (\n  annotation: ImageAnnotation, \n  source: string\n): W3CAnnotation => {\n  const shape = annotation.target.selector;\n\n  const selector =\n    shape.type == ShapeType.RECTANGLE ?\n      serializeFragmentSelector(shape.geometry as RectangleGeometry) :\n      serializeSVGSelector(shape);\n\n  return {\n    '@context': 'http://www.w3.org/ns/anno.jsonld',\n    id: annotation.id,\n    type: 'Annotation',\n    body: serializeW3CBodies(annotation.bodies),\n    target: {\n      source,\n      selector\n    }\n  };\n};\n","<script type=\"ts\">\n  import { boundsFromPoints } from '../../../model';\n  import type { Polygon } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor, Handle } from '..';\n\n  /** Props */\n  export let shape: Polygon;\n  export let computedStyle: string = undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  $: handleSize = 10 / viewportScale;\n\n  const editor = (polygon: Polygon, handle: Handle, delta: [number, number]) => {\n    let points: [number, number][];\n\n    if (handle === Handle.SHAPE) {\n      points = polygon.geometry.points.map(([x, y]) => [x + delta[0], y + delta[1]]);\n    } else {\n      points = polygon.geometry.points.map(([x, y], idx) =>\n        handle === Handle(idx) ? [x + delta[0], y + delta[1]] : [x, y]\n      );\n    }\n\n    const bounds = boundsFromPoints(points);\n\n    return {\n      ...polygon,\n      geometry: { points, bounds }\n    }\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:change \n  on:grab\n  on:release\n  let:grab={grab}>\n\n  <polygon\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab(Handle.SHAPE)}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon\n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab(Handle.SHAPE)}\n    points={geom.points.map(xy => xy.join(',')).join(' ')} />\n\n  {#each geom.points as point, idx}\n    <rect \n      class=\"a9s-corner-handle\"\n      on:pointerdown={grab(Handle(idx))}\n      x={point[0] - handleSize / 2} y={point[1] - handleSize / 2} height={handleSize} width={handleSize} />\n  {/each}\n</Editor>","<script type=\"ts\">\n  import type { Rectangle } from '../../../model';\n  import type { Transform } from '../../Transform';\n  import { Editor, Handle } from '..';\n\n  /** Props */\n  export let shape: Rectangle;\n  export let computedStyle: string = undefined;\n  export let transform: Transform;\n  export let viewportScale: number = 1;\n\n  $: geom = shape.geometry;\n\n  $: handleSize = 10 / viewportScale;\n\n  const editor = (rectangle: Rectangle, handle: Handle, delta: [number, number]) => {\n    const initialBounds = rectangle.geometry.bounds;\n\n    let [x0, y0] = [initialBounds.minX, initialBounds.minY];\n    let [x1, y1] = [initialBounds.maxX, initialBounds.maxY];\n\n    const [dx, dy] = delta;\n\n    if (handle === Handle.SHAPE) {\n      x0 += dx;\n      x1 += dx;\n      y0 += dy;\n      y1 += dy;\n    } else {\n      switch (handle) {\n        case Handle.TOP:\n        case Handle.TOP_LEFT:\n        case Handle.TOP_RIGHT: {\n          y0 += dy;\n          break;\n        }\n\n        case Handle.BOTTOM:\n        case Handle.BOTTOM_LEFT:\n        case Handle.BOTTOM_RIGHT: {\n          y1 += dy;\n          break;\n        }\n      }\n\n      switch (handle) {\n        case Handle.LEFT:\n        case Handle.TOP_LEFT:\n        case Handle.BOTTOM_LEFT: {\n          x0 += dx;\n          break;\n        }\n\n        case Handle.RIGHT:\n        case Handle.TOP_RIGHT:\n        case Handle.BOTTOM_RIGHT: {\n          x1 += dx;\n          break;\n        }\n      }\n    }\n\n    const x = Math.min(x0, x1);\n    const y = Math.min(y0, y1);\n    const w = Math.abs(x1 - x0);\n    const h = Math.abs(y1 - y0);\n\n    return {\n      ...rectangle,\n      geometry: {\n        x, y, w, h,\n        bounds: {\n          minX: x,\n          minY: y,\n          maxX: x + w,\n          maxY: y + h\n        }\n      }\n    };\n  }\n</script>\n\n<Editor\n  shape={shape}\n  transform={transform}\n  editor={editor}\n  on:grab\n  on:change \n  on:release\n  let:grab={grab}>\n\n  <rect \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    on:pointerdown={grab(Handle.SHAPE)}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-inner a9s-shape-handle\"\n    style={computedStyle}\n    on:pointerdown={grab(Handle.SHAPE)}\n    x={geom.x} y={geom.y} width={geom.w} height={geom.h} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-top\" \n    on:pointerdown={grab(Handle.TOP)}\n    x={geom.x} y={geom.y} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-right\"\n    on:pointerdown={grab(Handle.RIGHT)}\n    x={geom.x + geom.w} y={geom.y} height={geom.h} width={1}/>\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-bottom\" \n    on:pointerdown={grab(Handle.BOTTOM)}\n    x={geom.x} y={geom.y + geom.h} height={1} width={geom.w} />\n\n  <rect \n    class=\"a9s-edge-handle a9s-edge-handle-left\" \n    on:pointerdown={grab(Handle.LEFT)}\n    x={geom.x} y={geom.y} height={geom.h} width={1} />\n\n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-topleft\"\n    on:pointerdown={grab(Handle.TOP_LEFT)}\n    x={geom.x - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\n\n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-topright\"\n    on:pointerdown={grab(Handle.TOP_RIGHT)}\n    x={geom.x + geom.w - handleSize / 2} y={geom.y - handleSize / 2} height={handleSize} width={handleSize} />\n  \n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-bottomright\"\n    on:pointerdown={grab(Handle.BOTTOM_RIGHT)}\n    x={geom.x + geom.w - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\n    \n  <rect \n    class=\"a9s-corner-handle a9s-corner-handle-bottomleft\"\n    on:pointerdown={grab(Handle.BOTTOM_LEFT)}\n    x={geom.x - handleSize / 2} y={geom.y + geom.h - handleSize / 2} height={handleSize} width={handleSize} />\n</Editor>","import { ShapeType, type Shape } from '../../model';\nimport type { SvelteComponent } from 'svelte';\nimport { PolygonEditor } from './polygon';\nimport { RectangleEditor } from './rectangle';\n\nconst REGISTERED = new Map<ShapeType, typeof SvelteComponent>([\n  [ShapeType.RECTANGLE, RectangleEditor],\n  [ShapeType.POLYGON, PolygonEditor]\n]);\n\nexport const getEditor = (shape: Shape) => REGISTERED.get(shape.type);\n\nexport const registerEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n  REGISTERED.set(shapeType, editor);","export type Handle = string;\n\nexport const Handle = (value: string | number) => `HANDLE-${value}`;\n\nHandle.SHAPE = 'SHAPE';\n\nHandle.TOP = 'TOP';\n\nHandle.RIGHT = 'RIGHT';\n\nHandle.BOTTOM = 'BOTTOM';\n\nHandle.LEFT = 'LEFT';\n\nHandle.TOP_LEFT = 'TOP_LEFT';\n\nHandle.TOP_RIGHT = 'TOP_RIGHT';\n\nHandle.BOTTOM_RIGHT = 'BOTTOM_RIGHT';\n\nHandle.BOTTOM_LEFT = 'BOTTOM_LEFT';","<script type=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { Shape } from '../../model';\n  import type { Handle } from './Handle';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ grab: undefined, release: undefined, change: Shape }>();\n\n  /** Props */\n  export let shape: Shape;\n  export let editor: (shape: Shape, handle: Handle, delta: [number, number]) => Shape;\n  export let transform: Transform;\n\n  let grabbedHandle: Handle = null;\n\n  let origin: [number, number];\n\n  let initialShape: Shape = null;\n\n  const onGrab = (handle: Handle) => (evt: PointerEvent) => {\n    grabbedHandle = handle;\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n    initialShape = shape;\n\n    const target = evt.target as Element;\n    target.setPointerCapture(evt.pointerId);\n\n    dispatch('grab');\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    if (grabbedHandle) {\n      const [x, y] = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      const delta: [number, number] = [x - origin[0], y - origin[1]];\n\n      shape = editor(initialShape, grabbedHandle, delta);\n      \n      dispatch('change', shape);\n    }\n  }\n\n  const onRelease = (evt: PointerEvent) => {\n    const target = evt.target as Element;\n    target.releasePointerCapture(evt.pointerId);\n\n    grabbedHandle = null;\n\n    initialShape = shape;\n    \n    dispatch('release');\n  }\n</script>\n\n<g\n  class=\"a9s-annotation selected\"\n  on:pointerup={onRelease}\n  on:pointermove={onPointerMove}>\n\n  <slot grab={onGrab} />\n</g>","import type { DrawingStyle } from '@annotorious/core';\nimport type { ImageAnnotation } from '../../model';\n\nexport const computeStyle = (annotation: ImageAnnotation, style?: DrawingStyle | ((a: ImageAnnotation) => DrawingStyle)) => {\n  const computed = typeof style === 'function' ? style(annotation) : style;\n\n  if (computed) {\n    const { fill, fillOpacity } = computed;\n\n    let css = '';\n    \n    if (fill)\n      css += `fill:${fill};stroke:${fill};`;\n    \n    css += `fill-opacity:${fillOpacity || '0.25'};`;\n\n    return css;\n  }\n}","<script lang=\"ts\">\n  import type { DrawingStyle } from '@annotorious/core';\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\n  import type { ImageAnnotation, Shape } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  import type { Transform } from '../Transform';\n\n  const dispatch = createEventDispatcher<{ change: Shape }>();\n\n  /** Props */\n  export let annotation: ImageAnnotation;\n  export let editor: typeof SvelteComponent;\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\n  export let target: SVGGElement;\n  export let transform: Transform;\n  export let viewportScale: number;\n\n  let editorComponent: SvelteComponent;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  $: if (editorComponent) editorComponent.$set({ transform });\n\n  $: if (editorComponent) editorComponent.$set({ viewportScale });\n\n  onMount(() => {\n    editorComponent = new editor({\n      target,\n      props: { shape: annotation.target.selector, computedStyle, transform, viewportScale }\n    });\n\n    editorComponent.$on('change', event => {\n      editorComponent.$$set({ shape: event.detail });\n      dispatch('change', event.detail)\n    });\n\n    return () => {\n      editorComponent.$destroy();\n    }\n  });\n</script>","<script lang=\"ts\">\n  import { createEventDispatcher, onMount, type SvelteComponent } from 'svelte';\n  import type { Transform } from '../Transform';\n  import type { Shape } from 'src/model';\n\n  const dispatch = createEventDispatcher<{ create: Shape }>();\n\n  export let target: SVGGElement;\n\n  export let tool: typeof SvelteComponent;\n  \n  export let transform: Transform;\n\n  export let viewportScale: number;\n\n  let toolComponent: SvelteComponent;\n\n  $: if (toolComponent) toolComponent.$set({ transform });\n\n  $: if (toolComponent) toolComponent.$set({ viewportScale });\n\n  onMount(() => {\n    toolComponent = new tool({\n      target,\n      props: { transform, viewportScale }\n    });\n\n    toolComponent.$on('create', \n      event => dispatch('create', event.detail));\n\n    return () => {\n      toolComponent.$destroy();\n    }\n  });\n</script>","<script type=\"ts\">\n  import { createEventDispatcher, onMount } from 'svelte';\n  import { ShapeType, type Rectangle } from '../../../model';\n  import type { Transform } from '../..';\n\n  const dispatch = createEventDispatcher<{ create: Rectangle }>();\n  \n  export let transform: Transform;\n  \n  let container: SVGGElement;\n\n  let origin: [x: number, y: number]; \n\n  let anchor: [number, number];\n\n  let x: number, y: number, w: number, h: number;\n\n  const onPointerDown = (evt: PointerEvent) => {\n    origin = transform.elementToImage(evt.offsetX, evt.offsetY);\n    anchor = origin;\n\n    x = origin[0];\n    y = origin[1];\n    w = 1;\n    h = 1;\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    if (origin) {\n      anchor = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      x = Math.min(anchor[0], origin[0]);\n      y = Math.min(anchor[1], origin[1]);\n      w = Math.abs(anchor[0] - origin[0]);\n      h = Math.abs(anchor[1] - origin[1]);\n    }\n  }\n    \n  const onPointerUp = () => {\n    // Require 4x4 pixels minimum\n    if (w * h > 15) {\n      const shape: Rectangle = {\n        type: ShapeType.RECTANGLE, \n        geometry: {\n          bounds: {\n            minX: x, \n            minY: y,\n            maxX: x + w,\n            maxY: y + h\n          },\n          x, y, w, h\n        }\n      }\n\n      dispatch('create', shape);\n    }\n\n    origin = null;\n    anchor = null;\n  }\n\n  onMount(() => {\n    const svg = container.closest('svg');\n\n    svg.addEventListener('pointerdown', onPointerDown);\n    svg.addEventListener('pointermove', onPointerMove);\n    svg.addEventListener('pointerup', onPointerUp);\n\n    return () => {\n      svg.removeEventListener('pointerdown', onPointerDown);\n      svg.removeEventListener('pointermove', onPointerMove);\n      svg.removeEventListener('pointerup', onPointerUp); \n    }\n  });\n</script>\n\n<g \n  bind:this={container}\n  class=\"a9s-annotation a9s-rubberband\">\n  \n  {#if origin}\n    <rect\n      class=\"a9s-outer\"\n      x={x} \n      y={y} \n      width={w} \n      height={h} />\n\n    <rect\n      class=\"a9s-inner\"\n      x={x} \n      y={y} \n      width={w} \n      height={h} />\n  {/if}\n</g>","export const distance = (a: [number, number], b: [number, number]): number => {\n  const dx = Math.abs(b[0] - a[0]);\n  const dy = Math.abs(b[1] - a[1]);\n\n  return Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n}","import { writable } from 'svelte/store';\n\nconst setSize = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGElement) => {\n  const { naturalWidth, naturalHeight } = (image as HTMLImageElement);\n\n  if (!naturalWidth && !naturalHeight) {\n    // Might be because a) the image has not loaded yet, or b) because it's not \n    // an image element (but maybe a CANVAS etc.)! Allow for both possibilities.\n    const { width, height } = image;\n\n    svg.setAttribute('viewBox', `0 0 ${width} ${height}`);\n\n    image.addEventListener('load', event => {\n      const img = event.target as HTMLImageElement;\n      svg.setAttribute('viewBox', `0 0 ${img.naturalWidth} ${img.naturalHeight}`);\n    });\n  } else {\n    svg.setAttribute('viewBox', `0 0 ${naturalWidth} ${naturalHeight}`);\n  }\n\n}\n\nexport const enableResponsive = (image: HTMLImageElement | HTMLCanvasElement, svg: SVGSVGElement) => {\n\n  setSize(image, svg);\n\n  const { subscribe, set } = writable(1);\n\n  let resizeObserver: ResizeObserver;\n\n  if (window.ResizeObserver) {\n    resizeObserver = new ResizeObserver(() => {\n      const svgBounds = svg.getBoundingClientRect();\n\n      const { width, height } = svg.viewBox.baseVal;\n  \n      const scale = Math.max(\n        svgBounds.width / width,\n        svgBounds.height / height\n      );\n  \n      set(scale);\n    });\n  \n    resizeObserver.observe(svg.parentElement);\n  }\n\n  const destroy = () => {\n    if (resizeObserver)\n      resizeObserver.disconnect();\n  }\n\n  return { destroy, subscribe };\n\n}\n\n","export const isTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;","<script type=\"ts\">\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { boundsFromPoints, ShapeType, type Polygon } from '../../../model';\n  import { distance } from '../../utils';\n  import type { Transform } from '../..';\n\n  const dispatch = createEventDispatcher<{ create: Polygon }>();\n\n  export let transform: Transform;\n\n  export let viewportScale = 1;\n\n  let container: SVGGElement;\n\n  let points: [number, number][] = [];\n  \n  let cursor: [number, number] = null;\n\n  let isClosable: boolean = false;\n\n  const CLOSE_DISTANCE = 20;\n\n  $: handleSize = 10 / viewportScale;\n\n  const onPointerDown = (evt: PointerEvent) => {\n    const point = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n    if (points.length === 0)\n      points.push(point);\n\n    cursor = point;\n  }\n\n  const onPointerMove = (evt: PointerEvent) => {\n    if (points.length > 0) {\n      cursor = transform.elementToImage(evt.offsetX, evt.offsetY);\n\n      if (points.length >  2) {\n        const d = distance(cursor, points[0]) * viewportScale;\n        isClosable = d < CLOSE_DISTANCE;\n      }\n    }\n  }\n\n  const onPointerUp = (evt: PointerEvent) => {\n    // Require minimum drag of 4px\n    if (points.length === 1) {\n      const dist = distance(points[0], cursor);\n\n      if (dist <= 4) {\n        // Cancel\n        points = [];\n        cursor = null;\n\n        return;\n      }\n    }\n\n    // Stop click event from propagating if we're drawing\n    evt.stopImmediatePropagation();\n\n    if (isClosable) {\n      const shape: Polygon = {\n        type: ShapeType.POLYGON, \n        geometry: {\n          bounds: boundsFromPoints(points),\n          points: [...points]\n        }\n      }\n\n      points = [];\n      cursor = null;\n    \n      dispatch('create', shape);\n    } else {\n      points.push(cursor);\n    }\n  }\n\n  const onDblClick = () => {\n    const p = [...points, cursor];\n    const shape: Polygon = {\n        type: ShapeType.POLYGON, \n        geometry: {\n          bounds: boundsFromPoints(p),\n          points: p\n        }\n      }\n\n      points = [];\n      cursor = null;\n    \n      dispatch('create', shape);\n  }\n\n  onMount(() => {\n    const svg = container.closest('svg');\n\n    svg.addEventListener('pointerdown', onPointerDown, true);\n    svg.addEventListener('pointermove', onPointerMove);\n    svg.addEventListener('pointerup', onPointerUp, true);\n    svg.addEventListener('dblclick', onDblClick, true);\n\n    return () => {\n      svg.removeEventListener('pointerdown', onPointerDown, true);\n      svg.removeEventListener('pointermove', onPointerMove, true);\n      svg.removeEventListener('pointerup', onPointerUp, true);\n      svg.removeEventListener('dblclick', onDblClick, true);\n    }\n  });\n</script>\n\n<g \n  bind:this={container}\n  class=\"a9s-annotation a9s-rubberband\">\n\n  {#if cursor}\n    {@const coords = (isClosable ? points : [...points, cursor]).map(xy => xy.join(',')).join(' ')}\n      <polygon \n        class=\"a9s-outer\"\n        points={coords} />\n\n      <polygon \n        class=\"a9s-inner\"\n        points={coords} />\n        \n    {#if isClosable}\n      <rect \n        class=\"a9s-corner-handle\"\n        x={points[0][0] - handleSize / 2} \n        y={points[0][1] - handleSize / 2} \n        height={handleSize} \n        width={handleSize} />\n    {/if}\n  {/if}\n</g>","import type { SvelteComponent } from 'svelte';\nimport { RubberbandRectangle } from './rectangle';\nimport { RubberbandPolygon } from './polygon';\n\nexport type DrawingTool = 'rectangle' | 'polygon' | string;\n\nconst REGISTERED = new Map<DrawingTool, typeof SvelteComponent>([\n  ['rectangle', RubberbandRectangle],\n  ['polygon', RubberbandPolygon]\n]);\n\nexport const listTools = () => [...REGISTERED.keys()];\n\nexport const getTool = (name: string) => REGISTERED.get(name);\n  \nexport const registerTool = (name: string, tool: typeof SvelteComponent) =>\n  REGISTERED.set(name, tool);\n","<script type=\"ts\">\n  import type { DrawingStyle } from '@annotorious/core';\n  import type { Geometry, EllipseGeometry, ImageAnnotation } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props */\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { cx, cy, rx, ry } = geom as EllipseGeometry;\n</script>\n\n<g data-id={annotation.id}>\n  <ellipse\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n\n  <ellipse\n    class=\"a9s-inner\"\n    style={computedStyle}\n    cx={cx} \n    cy={cy} \n    rx={rx} \n    ry={ry} />\n</g>\n","<script type=\"ts\">\n  import type { DrawingStyle } from '@annotorious/core';\n  import type { Geometry, ImageAnnotation, PolygonGeometry } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props **/\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { points } = geom as PolygonGeometry;\n</script>\n\n<g data-id={annotation.id}>\n  <polygon \n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    points={points.map(xy => xy.join(',')).join(' ')} />\n\n  <polygon \n    class=\"a9s-inner\"\n    style={computedStyle}\n    points={points.map(xy => xy.join(',')).join(' ')} />\n</g>","<script type=\"ts\">\n  import type { DrawingStyle } from '@annotorious/core';\n  import type { Geometry, ImageAnnotation, RectangleGeometry } from '../../model';\n  import { computeStyle } from '../utils/styling';\n  \n  /** Props **/\n  export let annotation: ImageAnnotation;\n  export let geom: Geometry;\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\n\n  $: computedStyle = computeStyle(annotation, style);\n\n  const { x, y, w, h } = geom as RectangleGeometry;\n</script>\n\n<g data-id={annotation.id}>\n  <rect\n    class=\"a9s-outer\"\n    style={computedStyle ? 'display:none;' : undefined}\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n\n  <rect\n    class=\"a9s-inner\"\n    style={computedStyle}\n    x={x} \n    y={y} \n    width={w} \n    height={h} />\n</g>\n","export interface Transform { \n\n  elementToImage: (offsetX: number, offsetY: number) => [ number, number ] \n\n}\n\nexport const IdentityTransform: Transform = {\n\n  elementToImage:  (offsetX: number, offsetY: number) => ([ offsetX, offsetY ])\n\n}\n\nexport const createSVGTransform = (svg: SVGSVGElement): Transform => ({\n\n  elementToImage: (offsetX: number, offsetY: number) => {\n    const pt = svg.createSVGPoint();\n    pt.x = offsetX;\n    pt.y = offsetY;\n  \n    const { x, y } = pt.matrixTransform(svg.getCTM().inverse());\n    return [x, y];\n  }\n\n});","import { createEventDispatcher } from 'svelte';\nimport type { SvelteImageAnnotationStore } from '../state';\nimport type { ImageAnnotation } from '../model';\nimport { isTouch } from './utils';\nimport type { SvelteStore } from '@annotorious/core';\n\nexport interface SVGAnnotationLayerPointerEvent {\n    \n  originalEvent: PointerEvent;\n  \n  annotation?: ImageAnnotation;\n\n}\n\n// Maximum amount of ms between pointer down and up to make it a click\nconst MAX_CLICK_DURATION = 200;\n\nexport const addEventListeners = (svg: SVGSVGElement, store: SvelteImageAnnotationStore) => {\n\n  const dispatch = createEventDispatcher<{ click: SVGAnnotationLayerPointerEvent}>();\n\n  let lastPointerDown: number;\n\n  const onPointerDown = () =>\n    lastPointerDown = new Date().getTime();\n\n  const onPointerUp = (evt: PointerEvent) => {\n    const duration = new Date().getTime() - lastPointerDown;\n\n    if (duration < MAX_CLICK_DURATION) {\n      const { x, y } = getSVGPoint(evt, svg);\n      const annotation = store.getAt(x, y);\n    \n      if (annotation)\n        dispatch('click', { originalEvent: evt, annotation });\n      else\n        dispatch('click', { originalEvent: evt });\n    }\n  }\n\n  return { onPointerDown, onPointerUp };\n}\n\nconst getSVGPoint = (evt: PointerEvent, svg: SVGSVGElement) => {\n  const pt = svg.createSVGPoint();\n\n  if (isTouch) {\n    const bbox = svg.getBoundingClientRect();\n\n    const x = evt.clientX - bbox.x;\n    const y = evt.clientY - bbox.y;\n\n    const { left, top } = svg.getBoundingClientRect();\n    pt.x = x + left;\n    pt.y = y + top;\n\n    return pt.matrixTransform(svg.getScreenCTM().inverse());\n  } else {\n    pt.x = evt.offsetX;\n    pt.y = evt.offsetY;\n\n    return pt.matrixTransform(svg.getCTM().inverse());\n  }\n}","<script type=\"ts\">\n  import { onMount, type SvelteComponent } from 'svelte';\n  import { v4 as uuidv4 } from 'uuid';\n  import type { DrawingStyle, StoreChangeEvent } from '@annotorious/core';\n  import { ShapeType } from '../model';\n  import type { ImageAnnotation, Shape} from '../model';\n  import { getEditor, EditorMount } from './editors';\n  import { Ellipse, Polygon, Rectangle} from './shapes';\n  import { getTool, ToolMount } from './tools';\n  import { enableResponsive } from './utils';\n  import { createSVGTransform } from './Transform';\n  import { addEventListeners } from './SVGAnnotationLayerPointerEvent';\n  import type { SvelteImageAnnotatorState } from 'src/state';\n\n  /** Props **/\n  export let image: HTMLImageElement | HTMLCanvasElement;\n  export let state: SvelteImageAnnotatorState;\n  export let style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) = undefined;\n  export let tool: typeof SvelteComponent = getTool('rectangle');\n\n  /** Drawing tool layer **/\n  let drawingEl: SVGGElement;\n\n  /** Responsive scaling **/\n  let svgEl: SVGSVGElement;\n    \n  let scale: ReturnType<typeof enableResponsive>;\n\n  onMount(() => scale = enableResponsive(image, svgEl));\n\n  $: transform = createSVGTransform(svgEl);\n\n  /** Selection tracking */\n  const { selection, store } = state;\n\n  $: ({ onPointerDown, onPointerUp } = addEventListeners(svgEl, store));\n\n  let storeObserver = null;\n\n  let editableAnnotations: ImageAnnotation[] = null;\n\n  $: isEditable = (a: ImageAnnotation) => $selection.selected.find(s => s.id === a.id && s.editable);\n\n  $: trackSelection($selection.selected);\n\n  const trackSelection = (selected: { id: string, editable?: boolean }[]) => {\n    store.unobserve(storeObserver);\n\n    // Track only editable annotations\n    const editableIds = \n      selected.filter(({ editable }) => editable).map(({ id }) => id);\n\n    if (editableIds.length > 0) {\n      // Resolve selected IDs from the store\n      editableAnnotations = editableIds.map(id => store.getAnnotation(id));\n\n      // Track updates on the editable annotations\n      storeObserver = (event: StoreChangeEvent<ImageAnnotation>) => {\n        const { updated } = event.changes;\n        editableAnnotations = updated.map(change => change.newValue);\n      }   \n      \n      store.observe(storeObserver, { annotations: editableIds });\n    } else {\n      editableAnnotations = null;\n    }\n  }\n\n  const onSelectionCreated = <T extends Shape>(evt: CustomEvent<T>) => {\n    const id = uuidv4();\n\n    const annotation: ImageAnnotation = {\n      id,\n      bodies: [],\n      target: {\n        annotation: id,\n        selector: evt.detail,\n        creator: null,\n        created: new Date()\n      }\n    };\n\n    store.addAnnotation(annotation);\n\n    selection.setSelected(annotation.id);\n  }\n\n  const onChangeSelected = (annotation: ImageAnnotation) => (event: CustomEvent<Shape>) => {  \n    const { target } = annotation;\n\n    // We don't consider a shape edit an 'update' if it happens within 10mins\n    const GRACE_PERIOD = 10 * 60 * 1000;\n\n    const isUpdate = \n      // target.creator?.id !== user.id ||\n      !target.created ||\n      new Date().getTime() - target.created.getTime() > GRACE_PERIOD;\n\n    store.updateTarget({\n      ...target,\n      selector: event.detail,\n      created: isUpdate ? target.created : new Date(),\n      updated: isUpdate ? new Date() : null,\n      //updatedBy: isUpdate ? user : null\n    });\n  }\n</script>\n\n<svg\n  bind:this={svgEl}\n  class=\"a9s-annotationlayer\"\n  class:drawing={tool}\n  on:pointerup={onPointerUp}\n  on:pointerdown={onPointerDown}>\n  \n  <g>\n    {#each $store as annotation}\n      {#if !isEditable(annotation)}\n        {@const selector = annotation.target.selector}\n        {#key annotation.id}\n          {#if (selector.type === ShapeType.ELLIPSE)}\n            <Ellipse annotation={annotation} geom={selector.geometry} style={style} />\n          {:else if (selector.type === ShapeType.RECTANGLE)}\n            <Rectangle annotation={annotation} geom={selector.geometry} style={style} />\n          {:else if (selector.type === ShapeType.POLYGON)}\n            <Polygon annotation={annotation} geom={selector.geometry} style={style} />\n          {/if}\n        {/key}\n      {/if}\n    {/each}\n  </g>\n\n  <g \n    bind:this={drawingEl}\n    class=\"drawing\" >\n    {#if drawingEl}\n      {#if editableAnnotations}\n        {#each editableAnnotations as editable}\n          {#key editable.id}\n            <EditorMount\n              target={drawingEl}\n              editor={getEditor(editable.target.selector)}\n              annotation={editable}\n              style={style}\n              transform={transform}\n              viewportScale={$scale}\n              on:change={onChangeSelected(editable)} />\n          {/key}\n        {/each}\n      {:else if tool} \n        {#key tool}\n          <ToolMount \n            target={drawingEl}\n            tool={tool}\n            transform={transform}\n            viewportScale={$scale}\n            on:create={onSelectionCreated} />\n        {/key}\n      {/if}\n    {/if}\n  </g>\n</svg>","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","import RBush from 'rbush';\nimport { ShapeType,computeArea, intersects } from '../model';\nimport type { ImageAnnotationTarget } from '../model';\n\ninterface IndexedTarget {\n\n  minX: number;\n\n  minY: number;\n\n  maxX: number;\n\n  maxY: number;\n\n  target: ImageAnnotationTarget;\n\n}\n\nexport const createSpatialTree = () => {\n\n  const tree = new RBush<IndexedTarget>();\n\n  const index = new Map<string, IndexedTarget>();\n\n  const all = () => [...index.values()];\n\n  const clear = () => {\n    tree.clear();\n    index.clear();\n  }\n\n  const insert = (target: ImageAnnotationTarget) => {\n    const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\n\n    const t = { minX, minY, maxX, maxY, target };\n\n    tree.insert(t);\n    index.set(target.annotation, t);\n  };\n\n  const remove = (target: ImageAnnotationTarget) => {\n    const item = index.get(target.annotation);\n    tree.remove(item);\n    index.delete(target.annotation);\n  };\n\n  const update = (previous: ImageAnnotationTarget, updated: ImageAnnotationTarget) => {\n    remove(previous);\n    insert(updated);\n  };\n\n  const set = (targets: ImageAnnotationTarget[], replace: boolean = true) => {\n    if (replace) \n      clear();\n\n    const indexedTargets = targets.map(target => {\n      const { minX, minY, maxX, maxY } = target.selector.geometry.bounds;\n      return { minX, minY, maxX, maxY, target };\n    });\n\n    indexedTargets.forEach(t => index.set(t.target.annotation, t));\n    tree.load(indexedTargets);\n  };\n\n  const getAt = (x: number, y: number): ImageAnnotationTarget | null => {\n    const idxHits = tree.search({\n      minX: x,\n      minY: y,\n      maxX: x,\n      maxY: y\n    }).map(item => item.target);\n\n    // Exact hit test on shape (not needed for rectangles!)\n    const exactHits = idxHits.filter(target => {\n      return (target.selector.type === ShapeType.RECTANGLE) ||\n        intersects(target.selector, x, y);\n    });\n\n    // Get smallest shape\n    if (exactHits.length > 0) {\n      exactHits.sort((a, b) => computeArea(a.selector) - computeArea(b.selector));\n      return exactHits[0];\n    }\n  };\n\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\n    tree.search({\n      minX: x,\n      minY: y,\n      maxX: x + width,\n      maxY: y + height\n    }).map(item => item.target);\n  \n  const size = () => tree.all().length;\n\n  return {\n    all,\n    clear,\n    getAt,\n    getIntersecting,\n    insert,\n    remove,\n    set,\n    size,\n    update\n  }\n\n}\n","import type { ImageAnnotation, ImageAnnotationTarget } from '../model';\nimport type { AnnotoriousOpts } from '../AnnotoriousOpts';\nimport { createSpatialTree } from './spatialTree';\nimport { \n  createViewportState,\n  toSvelteStore,\n  type AnnotatorState, \n  type HoverState,\n  type SelectionState\n} from '@annotorious/core';\nimport { \n  createHoverState, \n  createSelectionState, \n  createStore\n} from '@annotorious/core';\nimport type { \n  ImageAnnotationStore,\n  SvelteImageAnnotationStore, \n  SvelteImageAnnotatorState\n} from './ImageAnnotationStore';\n\nexport type ImageAnnotatorState<T extends ImageAnnotationStore = ImageAnnotationStore> = AnnotatorState<ImageAnnotation> & {\n\n  store: T;\n\n  selection: SelectionState<ImageAnnotation>;\n\n  hover: HoverState<ImageAnnotation>;\n\n}\n\nexport const createImageAnnotatorState = <E extends unknown>(\n  opts: AnnotoriousOpts<ImageAnnotation, E>\n): ImageAnnotatorState<ImageAnnotationStore> => {\n\n  const store = createStore<ImageAnnotation>();\n\n  const tree = createSpatialTree();\n\n  const selection = createSelectionState(store, opts.pointerSelectAction);\n\n  const hover = createHoverState(store);\n\n  const viewport = createViewportState();\n\n  store.observe(({ changes }) => {\n    tree.set(changes.created.map(a => a.target as ImageAnnotationTarget), false);\n    \n    changes.deleted.forEach(a => tree.remove(a.target as ImageAnnotationTarget));\n    \n    changes.updated.forEach(({ oldValue, newValue }) =>\n      tree.update(oldValue.target, newValue.target));\n  });\n\n  const getAt = (x: number, y: number): ImageAnnotation | undefined => {\n    const target = tree.getAt(x, y);\n    return target ? store.getAnnotation(target.annotation) : undefined; \n  }\n\n  const getIntersecting = (x: number, y: number, width: number, height: number) =>\n    tree.getIntersecting(x, y, width, height).map(target => store.getAnnotation(target.annotation));\n\n  return {\n    store: {\n      ...store,\n      getAt,\n      getIntersecting\n    } as ImageAnnotationStore,\n    selection,\n    hover,\n    viewport\n  }\n\n}\n\nexport const createSvelteImageAnnotatorState = <E extends unknown>(  \n  opts: AnnotoriousOpts<ImageAnnotation, E>\n): SvelteImageAnnotatorState => {\n\n  const state = createImageAnnotatorState(opts);\n  \n  return {\n    ...state,\n    store: toSvelteStore(state.store) as SvelteImageAnnotationStore\n  }\n\n}\n  ","export const sampleBrightness = (imageOrCanvas: HTMLElement) => {\n\n  let canvas: HTMLCanvasElement;\n\n  let context: CanvasRenderingContext2D;\n\n  if (imageOrCanvas.nodeName === 'CANVAS') {\n    canvas = imageOrCanvas as HTMLCanvasElement;\n    context = canvas.getContext('2d', { willReadFrequently: true });\n  } else {\n    const img = imageOrCanvas as HTMLImageElement;\n    // Copy image to in-memory canvas for processing\n    canvas = document.createElement('canvas');\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    context = canvas.getContext('2d', { willReadFrequently: true });\n    context.drawImage(img, 0, 0, img.width, img.height);\n  }\n\n  let totalBrightness = 0;\n\n  // Sample a grid of points spaced 10% width/height apart (= 9 x 9 samples)\n  for (let i = 1; i < 10; i++) {\n    for (let j = 1; j < 10; j++) {\n      const x = Math.round(j * canvas.width / 10);\n      const y = Math.round(i * canvas.height / 10);\n\n      const pixelData = context.getImageData(x, y, 1, 1).data;\n      const brightness = (0.299 * pixelData[0] + 0.587 * pixelData[1] + 0.114 * pixelData[2]) / 255;\n      totalBrightness += brightness;\n    }\n  }\n\n  return totalBrightness / 81;\n}\n\nexport const setTheme = (imageOrCanvas: HTMLElement, container: HTMLElement) => {\n  const brightness = sampleBrightness(imageOrCanvas);\n\n  const theme = brightness > 0.6 ? 'dark' : 'light'\n\n  console.log(`[Annotorious] Image brightness: ${brightness.toFixed(1)}. Setting ${theme} theme.`);\n\n  container.setAttribute('data-theme', theme);\n}","import { PointerSelectAction } from '@annotorious/core';\nimport type { Annotation, DrawingStyle, FormatAdapter } from '@annotorious/core';\nimport type { ImageAnnotation } from './model';\n\nexport interface AnnotoriousOpts<I extends Annotation = ImageAnnotation, E extends unknown = ImageAnnotation> {\n\n  adapter?: FormatAdapter<I, E>;\n\n  autoSave?: boolean;\n\n  pointerSelectAction?: PointerSelectAction | ((a: I) => PointerSelectAction);\n\n  readOnly?: boolean;\n\n  style?: DrawingStyle | ((annotation: I) => DrawingStyle);\n\n}\n\nexport const fillDefaults = <I extends ImageAnnotation = ImageAnnotation, E extends unknown = ImageAnnotation> (\n  opts: AnnotoriousOpts<I, E>\n): AnnotoriousOpts<I, E> => {\n\n  return {\n    ...opts,\n    pointerSelectAction: opts.pointerSelectAction || PointerSelectAction.EDIT\n  };\n\n};\n\n\n\n\n","import type { SvelteComponent } from 'svelte';\nimport type { Annotator, DrawingStyle, User } from '@annotorious/core';\nimport { createAnonymousGuest, createBaseAnnotator, createLifecyleObserver } from '@annotorious/core';\nimport { registerEditor } from './annotation/editors';\nimport { getTool, registerTool, type DrawingTool } from './annotation/tools';\nimport { SVGAnnotationLayer } from './annotation';\nimport type { SVGAnnotationLayerPointerEvent } from './annotation';\nimport type { ImageAnnotation, ShapeType } from './model';\nimport { createSvelteImageAnnotatorState } from './state';\nimport { setTheme } from './themes';\nimport { fillDefaults } from './AnnotoriousOpts';\nimport type { AnnotoriousOpts } from './AnnotoriousOpts';\n\nimport './Annotorious.css';\nimport './themes/dark/index.css';\nimport './themes/light/index.css';\n\nexport interface ImageAnnotator<E extends unknown = ImageAnnotation> extends Annotator<ImageAnnotation, E> { \n\n  registerDrawingTool(name: string, tool: typeof SvelteComponent): void;\n\n  registerShapeEditor(shapeType: ShapeType, editor: typeof SvelteComponent): void;\n\n  setDrawingTool(tool: DrawingTool): void; \n\n}\n\nexport const createImageAnnotator = <E extends unknown = ImageAnnotation>(\n  image: string | HTMLImageElement | HTMLCanvasElement, \n  options: AnnotoriousOpts<ImageAnnotation, E> = {}\n): ImageAnnotator<E> => {\n\n  if (!image)\n    throw 'Missing argument: image';\n\n  const img = (typeof image === 'string' ? \n    document.getElementById(image) : image) as HTMLImageElement | HTMLCanvasElement;\n\n  const opts = fillDefaults<ImageAnnotation, E>(options);\n\n  const state = createSvelteImageAnnotatorState(opts);\n\n  const { hover, selection, store } = state;\n\n  const lifecycle = createLifecyleObserver<ImageAnnotation, E>(\n    store, selection, hover, undefined, opts.adapter, opts.autoSave);\n\n  let _style = opts.style;\n\n  let currentUser: User = opts.readOnly ? null : createAnonymousGuest();\n\n  // We'll wrap the image in a container DIV.\n  const container = document.createElement('DIV');\n  container.style.position = 'relative';\n  container.style.display = 'inline-block';\n\n  // Wrapper div has unwanted margin at the bottom otherwise!\n  img.style.display = 'block';\n\n  img.parentNode.insertBefore(container, img);\n  container.appendChild(img);\n\n  setTheme(img, container);\n\n  const annotationLayer = new SVGAnnotationLayer({\n    target: container,\n    props: { image: img, state, style: _style }\n  });\n\n  annotationLayer.$on('click', (evt: CustomEvent<SVGAnnotationLayerPointerEvent>) => {\n    const { originalEvent, annotation } = evt.detail;\n    if (annotation)\n      selection.clickSelect(annotation.id, originalEvent);\n    else if (!selection.isEmpty())\n      selection.clear();\n  });\n\n  /*************************/\n  /*      External API     */\n  /******++++++*************/\n\n  // Most of the external API functions are covered in the base annotator\n  const base = createBaseAnnotator<ImageAnnotation, E>(store, opts.adapter);\n\n  const setStyle = (style: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) | undefined) => {\n    _style = style;\n    annotationLayer.$set({ style });\n  }\n\n  const destroy = () => {\n    // Destroy Svelte annotation layer\n    annotationLayer.$destroy();\n\n    // Unwrap the image\n    container.parentNode.insertBefore(img, container);\n    container.parentNode.removeChild(container);\n  }\n\n  const registerDrawingTool = (name: string, tool: typeof SvelteComponent) =>\n    registerTool(name, tool);\n\n  const registerShapeEditor = (shapeType: ShapeType, editor: typeof SvelteComponent) =>\n    registerEditor(shapeType, editor);\n\n  const getUser = () => currentUser;\n\n  const setDrawingTool = (tool: DrawingTool) => {\n    const t = getTool(tool) as typeof SvelteComponent;\n    annotationLayer.$set({ tool: t })\n  }\n\n  const setSelected = (arg?: string | string[]) => {\n    if (arg) {\n      selection.setSelected(arg);\n    } else {\n      selection.clear();\n    }\n  }\n\n  const setUser = (user: User) => {\n    currentUser = user;\n    // annotationLayer.$set({ user });\n  }\n\n  return {\n    ...base,\n    get style() { return _style },\n    set style(s: DrawingStyle | ((annotation: ImageAnnotation) => DrawingStyle) | undefined) { setStyle(s) },\n    destroy,\n    getUser,\n    on: lifecycle.on,\n    off: lifecycle.off,\n    registerDrawingTool,\n    registerShapeEditor,\n    setDrawingTool,\n    setSelected,\n    setUser,\n    state\n  }\n\n}"],"names":["noop","assign","tar","src","k","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","subscribe","store","callbacks","unsub","component_subscribe","component","callback","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","get_slot_changes","dirty","lets","merged","len","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","get_all_dirty_from_scope","length","append","target","node","insert","anchor","detach","destroy_each","iterations","detaching","svg_element","name","text","data","space","empty","listen","event","handler","options","attr","attribute","value","children","element","toggle_class","toggle","custom_event","type","detail","bubbles","cancelable","e","current_component","set_current_component","get_current_component","onMount","createEventDispatcher","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","$$","flush_render_callbacks","filtered","targets","c","outroing","outros","group_outros","check_outros","transition_in","block","local","transition_out","create_component","mount_component","customElement","fragment","after_update","new_on_destroy","destroy_component","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","index","$$props","ShapeType","Utils","registerShapeUtil","util","computeArea","shape","intersects","x","y","boundsFromPoints","points","minX","minY","maxX","maxY","EllipseUtil","cx","cy","rx","ry","rot","cos","sin","dx","dy","tdx","tdy","PolygonUtil","polygon","area","j","inside","xi","yi","xj","yj","RectangleUtil","rect","parseFragmentSelector","fragmentOrSelector","invertY","regex","matches","_","prefix","unit","d","w","h","serializeFragmentSelector","geometry","SVG_NAMESPACE","sanitize","doc","cleanEl","el","scripts","insertSVGNamespace","originalDoc","namespaced","parseSVGXML","isPrefixDeclared","isDefaultNamespaceSVG","parseSVGPolygon","str","p","parseSVGEllipse","bounds","parseSVGSelector","valueOrSelector","serializeSVGSelector","geom","xy","getRandomValues","rnds8","rng","byteToHex","unsafeStringify","arr","offset","native","v4","buf","rnds","has","dequal","foo","bar","ctor","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","subscriber","invalidate","createHoverState","currentHover","updated","changes","oldValue","PointerSelectAction","EMPTY","createSelectionState","selectAction","currentSelection","clear","isEmpty","_a","isSelected","annotationOrId","id","clickSelect","pointerEvent","annotation","action","onPointerSelect","setSelected","idOrIds","editable","ids","annotations","removeFromSelection","selected","getContributors","creator","updatedBy","bodyCollaborators","users","body","u","createBody","payload","created","uuidv4","getAddedBodies","newValue","oldBodyIds","getRemovedBodies","newBodyIds","getChangedBodies","newBody","oldBody","hasTargetChanged","diffAnnotations","Origin","shouldNotify","observer","origin","ignore","arg","hasBodyChanges","hasTargetChanges","_b","affectedAnnotations","isAnnotation","createStore","annotationIndex","bodyIndex","observers","observe","onChange","unobserve","idx","emit","addAnnotation","updateAnnotation","arg1","arg2","arg3","oldId","addBody","all","bulkAddAnnotation","replace","deleted","existing","next","deleteOneAnnotation","deleteAnnotation","bulkDeleteAnnotation","annotationsOrIds","deleteBody","oldAnnotation","newAnnotation","getAnnotation","getBody","annotationId","updateOneBody","oldBodyId","updateBody","bulkUpdateBodies","bodies","updateOneTarget","val","toSvelteStore","shim","createViewportState","createLifecyleObserver","selectionState","hoverState","viewportState","adapter","autoSave","initialSelection","idleTimeout","on","off","arg0","serialized0","serialized1","onIdleUpdate","updatedSelected","initial","updatedState","initialIds","selectedIds","relevantUpdates","serializeAll","parseAll","serialized","result","parsed","error","createBaseAnnotator","clearAnnotations","getAnnotationById","getAnnotations","loadAnnotations","url","response","setAnnotations","removeAnnotation","failed","crosswalked","previous","random","bytes","customRandom","alphabet","defaultSize","getRandom","mask","step","size","customAlphabet","nanoid","byte","createAnonymousGuest","hashCode","hash","chr","parseW3CBodies","purpose","serializeW3CBodies","w3c","DEFAULT_PALETTE","defaultColorProvider","unassignedColors","rnd","color","createDefaultAppearenceProvider","colorProvider","presenceKey","user","createNanoEvents","args","cb","isListEqual","listA","listB","PRESENCE_KEY","createPresenceState","appearanceProvider","emitter","presentUsers","selectionStates","addUser","appearance","removeUser","syncUsers","state","keys","s","toAdd","toRemove","presentUser","getPresentUsers","notifyActivity","annotationIds","updateSelection","selection","from","W3CImageFormat","source","parseW3CImageAnnotation","serializeW3CImageAnnotation","w3cSelector","selector","rect_x_value","rect_y_value","Handle","each_value","polygon0","polygon0_points_value","func","polygon1","polygon1_points_value","func_1","grab","computedStyle","transform","viewportScale","editor","handle","delta","$$invalidate","handleSize","rect0","rect0_x_value","rect0_y_value","rect0_width_value","rect0_height_value","rect1","rect1_x_value","rect1_y_value","rect1_width_value","rect1_height_value","rect2","rect2_x_value","rect2_y_value","rect2_width_value","rect3","rect3_x_value","rect3_y_value","rect3_height_value","rect4","rect4_x_value","rect4_y_value","rect4_width_value","rect5","rect5_x_value","rect5_y_value","rect5_height_value","rect6","rect6_x_value","rect6_y_value","rect7","rect7_y_value","rect9","rect9_x_value","rect8","rectangle","initialBounds","x0","y0","x1","y1","REGISTERED","RectangleEditor","PolygonEditor","getEditor","registerEditor","shapeType","g","dispatch","grabbedHandle","initialShape","onGrab","evt","onPointerMove","onRelease","computeStyle","style","computed","fill","fillOpacity","css","editorComponent","tool","toolComponent","create_if_block","container","onPointerDown","onPointerUp","svg","$$value","distance","setSize","image","naturalWidth","naturalHeight","width","height","img","enableResponsive","resizeObserver","svgBounds","scale","isTouch","child_ctx","create_if_block_1","get_if_ctx","CLOSE_DISTANCE","cursor","isClosable","point","onDblClick","RubberbandRectangle","RubberbandPolygon","listTools","getTool","registerTool","g_data_id_value","ellipse0","ellipse1","IdentityTransform","offsetX","offsetY","createSVGTransform","pt","MAX_CLICK_DURATION","addEventListeners","lastPointerDown","getSVGPoint","bbox","left","top","previous_key","polygon_changes","rectangle_changes","ellipse_changes","show_if","each_blocks","editormount_changes","g0","g1","drawingEl","svgEl","storeObserver","editableAnnotations","trackSelection","editableIds","change","onSelectionCreated","onChangeSelected","GRACE_PERIOD","isUpdate","isEditable","$selection","quickselect","right","compare","quickselectStep","defaultCompare","n","m","z","sd","newLeft","newRight","t","swap","tmp","RBush","maxEntries","toBBox","nodesToSearch","child","childBBox","contains","tmpNode","item","createNode","equalsFn","path","indexes","parent","goingUp","findItem","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","level","minArea","minEnlargement","targetNode","bboxArea","enlargement","enlargedArea","isNode","insertPath","extend","splitIndex","newNode","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareMinX","compareNodeMinX","compareMinY","compareNodeMinY","xMargin","yMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","destNode","stack","mid","createSpatialTree","tree","remove","exactHits","indexedTargets","createImageAnnotatorState","opts","hover","viewport","createSvelteImageAnnotatorState","sampleBrightness","imageOrCanvas","canvas","context","totalBrightness","pixelData","brightness","setTheme","theme","fillDefaults","createImageAnnotator","lifecycle","_style","currentUser","annotationLayer","SVGAnnotationLayer","originalEvent","base","setStyle","destroy","registerDrawingTool","registerShapeEditor","getUser","setDrawingTool","setUser"],"mappings":"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","x_google_ignoreList":[0,9,10,11,12,13,14,26,31,54,55]}