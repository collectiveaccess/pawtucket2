{"version":3,"file":"annotorious-react.es15.js","sources":["../src/openseadragon/OpenSeadragonViewer.tsx"],"sourcesContent":["import { forwardRef, useContext, useEffect, useImperativeHandle, useRef } from 'react';\nimport OpenSeadragon from 'openseadragon';\nimport { OpenSeadragonAnnotatorContext } from './OpenSeadragonAnnotator';\n\nexport interface OpenSeadragonViewerProps {\n\n  className?: string;\n\n  options: OpenSeadragon.Options;\n\n}\n\nexport const OpenSeadragonViewer = forwardRef<OpenSeadragon.Viewer, OpenSeadragonViewerProps>((props: OpenSeadragonViewerProps, ref) => {\n\n  const { className, options } = props;\n\n  const element = useRef<HTMLDivElement>(null);\n\n  const { viewer, setViewer } = useContext(OpenSeadragonAnnotatorContext);\n\n  useEffect(() => {\n    if (element.current) {\n      const v = OpenSeadragon({...options, element: element.current });\n\n      // Checking for setViewer is just a convenience so we can\n      // use this component also without an OpenSeadragonAnnotator\n      if (setViewer)\n        setViewer(v);\n\n      return () => {\n        v.destroy();\n      }\n    }\n  }, []);\n\n  useImperativeHandle(ref, () => viewer);\n\n  return (\n    <div className={className} ref={element} />\n  );\n\n});"],"names":["OpenSeadragonViewer","forwardRef","props","ref","className","options","element","useRef","viewer","setViewer","useContext","OpenSeadragonAnnotatorContext","useEffect","v","OpenSeadragon","useImperativeHandle","jsx"],"mappings":";;;;AAYO,MAAMA,IAAsBC,EAA2D,CAACC,GAAiCC,MAAQ;AAEhI,QAAA,EAAE,WAAAC,GAAW,SAAAC,EAAY,IAAAH,GAEzBI,IAAUC,EAAuB,IAAI,GAErC,EAAE,QAAAC,GAAQ,WAAAC,EAAU,IAAIC,EAAWC,CAA6B;AAEtE,SAAAC,EAAU,MAAM;AACd,QAAIN,EAAQ,SAAS;AACb,YAAAO,IAAIC,EAAc,EAAC,GAAGT,GAAS,SAASC,EAAQ,SAAS;AAI3D,aAAAG,KACFA,EAAUI,CAAC,GAEN,MAAM;AACX,QAAAA,EAAE,QAAQ;AAAA,MAAA;AAAA,IAEd;AAAA,EACF,GAAG,CAAE,CAAA,GAEeE,EAAAZ,GAAK,MAAMK,CAAM,GAGlC,gBAAAQ,EAAA,OAAA,EAAI,WAAAZ,GAAsB,KAAKE,EAAS,CAAA;AAG7C,CAAC;"}