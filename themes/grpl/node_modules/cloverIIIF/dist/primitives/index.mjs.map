{"version":3,"file":"index.mjs","sources":["../../src/lib/label-helpers.ts","../../src/lib/html-element.ts","../../src/styles/stitches.config.tsx","../../src/components/Primitives/Label/Label.tsx","../../src/hooks/useGetImageResource.ts","../../src/components/Primitives/ContentResource/ContentResource.tsx","../../src/components/Primitives/Homepage/Homepage.tsx","../../src/context/primitives-context.tsx","../../src/components/Primitives/Markup/Markup.tsx","../../src/components/Primitives/Value/Value.tsx","../../src/components/Primitives/Value/CustomValue.tsx","../../src/components/Primitives/Metadata/Item.tsx","../../src/lib/utils.ts","../../src/lib/custom.ts","../../src/components/Primitives/Metadata/Metadata.tsx","../../src/components/Primitives/PartOf/PartOf.tsx","../../src/components/Primitives/Rendering/Rendering.tsx","../../src/components/Primitives/RequiredStatement/RequiredStatement.tsx","../../src/components/Primitives/SeeAlso/SeeAlso.tsx","../../src/components/Primitives/Summary/Summary.tsx","../../src/components/Primitives/Thumbnail/Thumbnail.tsx","../../src/components/Primitives/index.tsx"],"sourcesContent":["import { InternationalString } from \"@iiif/presentation-3\";\n\nexport const getLabelEntries = (\n  label?: InternationalString,\n  lang: string = \"none\",\n) => {\n  /*\n   * If no label exists, return an empty string.\n   */\n  if (!label) return null;\n\n  /*\n   * If label is not a IIIF Presentation API 3.0 shape, return the string\n   */\n  if (typeof label === \"string\") return [label];\n\n  /*\n   * If InternationalString code does not exist on label, then\n   * return what may be there, ex: label.none[0] OR label.fr[0]\n   */\n  if (!label[lang]) {\n    const codes: Array<string> = Object.getOwnPropertyNames(label);\n    if (codes.length > 0) return label[codes[0]];\n  }\n\n  /*\n   * Return label value for InternationalString code `en`\n   */\n  if (!label[lang]) return null;\n  if (!Array.isArray(label[lang])) return null;\n\n  return label[lang] as string[];\n};\n\nexport const getLabelAsString = (\n  label: InternationalString | undefined,\n  lang: string = \"none\",\n  delimiter: string = \", \",\n) => {\n  const entries = getLabelEntries(label, lang);\n  return Array.isArray(entries) ? entries.join(`${delimiter}`) : entries;\n};\n","import sanitizeHtml from \"sanitize-html\";\n\nfunction createMarkup(html: string) {\n  return { __html: sanitizeHTML(html) };\n}\n\nfunction sanitizeAttributes(props: any, remove: string[]) {\n  const entries = Object.keys(props).filter((key) =>\n    !remove.includes(key) ? key : null,\n  );\n\n  const attributes = new Object();\n  entries.forEach((key) => {\n    attributes[key] = props[key];\n  });\n\n  return attributes as React.HTMLAttributes<HTMLElement>;\n}\n\nfunction sanitizeHTML(html: string) {\n  return sanitizeHtml(html, {\n    allowedAttributes: {\n      a: [\"href\"],\n      img: [\"alt\", \"src\", \"height\", \"width\"],\n    },\n    allowedSchemes: [\"http\", \"https\", \"mailto\"],\n    allowedTags: [\n      \"a\",\n      \"b\",\n      \"br\",\n      \"i\",\n      \"img\",\n      \"p\",\n      \"small\",\n      \"span\",\n      \"sub\",\n      \"sup\",\n    ],\n  });\n}\n\nexport { createMarkup, sanitizeAttributes, sanitizeHTML };\n","import { createStitches } from \"@stitches/react\";\n\nconst hue = 209;\n\nexport const theme = {\n  colors: {\n    /*\n     * Black and dark grays in a light theme.\n     * Must contrast to 4.5 or greater with `secondary`.\n     */\n    primary: \"#1a1d1e\",\n    primaryMuted: \"#26292b\",\n    primaryAlt: \"#151718\",\n\n    /*\n     * Key brand color(s).\n     * Must contrast to 4.5 or greater with `secondary`.\n     */\n    accent: `hsl(${hue} 100% 38.2%)`,\n    accentMuted: `hsl(${hue} 80% 61.8%)`,\n    accentAlt: `hsl(${hue} 80% 30%)`,\n\n    /*\n     * White and light grays in a light theme.\n     * Must contrast to 4.5 or greater with `primary` and  `accent`.\n     */\n    secondary: \"#FFFFFF\",\n    secondaryMuted: \"#e6e8eb\",\n    secondaryAlt: \"#c1c8cd\",\n  },\n  fontSizes: {\n    1: \"12px\",\n    2: \"13px\",\n    3: \"15px\",\n    4: \"17px\",\n    5: \"19px\",\n    6: \"21px\",\n    7: \"27px\",\n    8: \"35px\",\n    9: \"59px\",\n  },\n  lineHeights: {\n    1: \"12px\",\n    2: \"13px\",\n    3: \"15px\",\n    4: \"17px\",\n    5: \"19px\",\n    6: \"21px\",\n    7: \"27px\",\n    8: \"35px\",\n    9: \"59px\",\n  },\n  sizes: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n    4: \"20px\",\n    5: \"25px\",\n    6: \"35px\",\n    7: \"45px\",\n    8: \"65px\",\n    9: \"80px\",\n  },\n  space: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n    4: \"20px\",\n    5: \"25px\",\n    6: \"35px\",\n    7: \"45px\",\n    8: \"65px\",\n    9: \"80px\",\n  },\n  radii: {\n    1: \"4px\",\n    2: \"6px\",\n    3: \"8px\",\n    4: \"12px\",\n    round: \"50%\",\n    pill: \"9999px\",\n  },\n  transitions: {\n    all: \"all 300ms cubic-bezier(0.16, 1, 0.3, 1)\",\n  },\n  zIndices: {\n    1: \"100\",\n    2: \"200\",\n    3: \"300\",\n    4: \"400\",\n    max: \"999\",\n  },\n};\n\nexport const media = {\n  xxs: \"(max-width: 349px)\",\n  xs: \"(max-width: 575px)\",\n  sm: \"(max-width: 767px)\",\n  md: \"(max-width: 991px)\",\n  lg: \"(max-width: 90rem)\",\n  xl: \"(min-width: calc(90rem + 1px))\",\n};\n\nexport type { CSS, VariantProps } from \"@stitches/react\";\n\nexport const { styled, css, keyframes, createTheme } = createStitches({\n  theme,\n  media,\n});\n","import { PrimitivesLabel } from \"src/types/primitives\";\nimport React from \"react\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledLabel = styled(\"span\", {});\n\nconst Label: React.FC<PrimitivesLabel> = (props) => {\n  const { as, label } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"label\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledLabel as={as} {...attributes}>\n      {getLabelAsString(label, attributes.lang as string) as string}\n    </StyledLabel>\n  );\n};\n\nexport default Label;\n","import { IIIFExternalWebResource, ImageService } from \"@iiif/presentation-3\";\n\nexport const useGetImageResource = (\n  resource: IIIFExternalWebResource,\n  size: string = \"200,\",\n  region: string = \"full\",\n) => {\n  /**\n   * defenseively ensure resource is not an array\n   */\n  if (Array.isArray(resource)) resource = resource[0];\n\n  const { id, service } = resource;\n\n  let imageService: ImageService | undefined;\n\n  /**\n   * return resource id if service does not exist\n   */\n  if (!service) return id;\n\n  if (Array.isArray(resource.service) && resource.service.length > 0)\n    imageService = service[0] as ImageService;\n\n  if (imageService) {\n    if (imageService[\"@id\"])\n      return `${imageService[\"@id\"]}/${region}/${size}/0/default.jpg`;\n\n    if (imageService.id)\n      return `${imageService.id}/${region}/${size}/0/default.jpg`;\n  }\n};\n","import React, { useCallback, useEffect, useRef } from \"react\";\n\nimport Hls from \"hls.js\";\nimport { PrimitivesContentResource } from \"src/types/primitives\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { useGetImageResource } from \"src/hooks/useGetImageResource\";\n\nconst StyledResource = styled(\"img\", { objectFit: \"cover\" });\n\nconst ContentResource: React.FC<PrimitivesContentResource> = (props) => {\n  const mediaRef = useRef(null);\n  const { contentResource, altAsLabel, region = \"full\" } = props;\n\n  let alt: string | undefined;\n  if (altAsLabel) alt = getLabelAsString(altAsLabel) as string;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"contentResource\", \"altAsLabel\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  const { type, id, width = 200, height = 200, duration } = contentResource;\n\n  useEffect(() => {\n    /**\n     * Check that IIIF content resource ID exists and\n     * we have a reffed <video> for attaching HLS\n     */\n    if (!id && !mediaRef.current) return;\n    if ([\"Image\"].includes(type)) return;\n\n    /**\n     * Eject HLS attachment if file extension from\n     * the IIIF content resource ID is not .m3u8\n     */\n    if (!id.includes(\"m3u8\")) return;\n\n    // Bind hls.js package to our <video /> element and then load the media source\n    const hls = new Hls();\n\n    if (mediaRef.current) {\n      hls.attachMedia(mediaRef.current);\n      hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n        hls.loadSource(id as string);\n      });\n    }\n\n    // Handle errors\n    hls.on(Hls.Events.ERROR, function (event, data) {\n      if (data.fatal) {\n        switch (data.type) {\n          case Hls.ErrorTypes.NETWORK_ERROR:\n            // try to recover network error\n            console.error(\n              `fatal ${event} network error encountered, try to recover`,\n            );\n            hls.startLoad();\n            break;\n          case Hls.ErrorTypes.MEDIA_ERROR:\n            console.error(\n              `fatal ${event} media error encountered, try to recover`,\n            );\n            hls.recoverMediaError();\n            break;\n          default:\n            // cannot recover\n            hls.destroy();\n            break;\n        }\n      }\n    });\n\n    return () => {\n      if (hls) {\n        hls.detachMedia();\n        hls.destroy();\n      }\n    };\n  }, [id, type]);\n\n  const playLoop = useCallback(() => {\n    if (!mediaRef.current) return;\n\n    let startTime = 0;\n    let loopTime = 30;\n\n    if (duration) loopTime = duration;\n    if (!id.split(\"#t=\") && duration) startTime = duration * 0.1;\n\n    if (id.split(\"#t=\").pop()) {\n      const fragment = id.split(\"#t=\").pop();\n      if (fragment) startTime = parseInt(fragment.split(\",\")[0]);\n    }\n\n    const media: HTMLVideoElement = mediaRef.current;\n    media.autoplay = true;\n    media.currentTime = startTime;\n\n    setTimeout(() => playLoop(), loopTime * 1000);\n  }, [duration, id]);\n\n  useEffect(() => playLoop(), [playLoop]);\n\n  const imgSrc = useGetImageResource(\n    contentResource,\n    `${width},${height}`,\n    region,\n  );\n\n  switch (type) {\n    case \"Image\":\n      return (\n        <StyledResource\n          as=\"img\"\n          alt={alt}\n          css={{ width: width, height: height }}\n          key={id}\n          src={imgSrc}\n          {...attributes}\n        />\n      );\n\n    case \"Video\":\n      return (\n        <StyledResource\n          as=\"video\"\n          css={{ width: width, height: height }}\n          disablePictureInPicture\n          key={id}\n          loop\n          muted\n          onPause={playLoop}\n          ref={mediaRef}\n          src={id}\n        />\n      );\n\n    default:\n      console.warn(\n        `Resource type: ${type} is not valid or not yet supported in Primitives.`,\n      );\n      return <></>;\n  }\n};\n\nexport default ContentResource;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesHomepage } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledHomepage = styled(\"a\", {});\n\nconst Homepage: React.FC<PrimitivesHomepage> = (props) => {\n  const { children, homepage } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"children\", \"homepage\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <>\n      {homepage &&\n        homepage.map((resource) => {\n          const label = getLabelAsString(\n            resource.label,\n            attributes.lang,\n          ) as string;\n          return (\n            <StyledHomepage\n              aria-label={children ? label : undefined}\n              href={resource.id}\n              key={resource.id}\n              {...attributes}\n            >\n              {children ? children : label}\n            </StyledHomepage>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Homepage;\n","import { createContext, useContext } from \"react\";\n\nimport React from \"react\";\n\ntype PrimitivesContextStore =\n  | {\n      delimiter: string; // Separator for multi-value items\n    }\n  | undefined;\ninterface ProviderProps {\n  children: React.ReactNode;\n  initialState?: PrimitivesContextStore;\n}\n\nconst defaultState = {\n  delimiter: \", \",\n};\n\nconst PrimitivesContext = createContext<PrimitivesContextStore>(undefined);\n\nconst usePrimitivesContext = () => {\n  const context = useContext(PrimitivesContext);\n  if (context === undefined) {\n    throw new Error(\n      \"usePrimitivesContext must be used with a PrimitivesProvider\",\n    );\n  }\n  return context;\n};\n\nconst PrimitivesProvider: React.FC<ProviderProps> = ({\n  children,\n  initialState = defaultState,\n}) => {\n  const delimiter = getRealPropertyValue(initialState, \"delimiter\");\n\n  return (\n    <PrimitivesContext.Provider value={{ delimiter }}>\n      {children}\n    </PrimitivesContext.Provider>\n  );\n};\n\nconst getRealPropertyValue = (\n  obj: { [key: string]: any },\n  property: string,\n) => {\n  const value = Object.hasOwn(obj, property)\n    ? obj[property].toString()\n    : undefined;\n  return value;\n};\n\nexport {\n  PrimitivesContext,\n  PrimitivesProvider,\n  getRealPropertyValue,\n  usePrimitivesContext,\n};\n","import {\n  PrimitivesContext,\n  PrimitivesProvider,\n  usePrimitivesContext,\n} from \"src/context/primitives-context\";\nimport { createMarkup, sanitizeAttributes } from \"src/lib/html-element\";\n\nimport { PrimitivesMarkup } from \"src/types/primitives\";\nimport React from \"react\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledMarkup = styled(\"span\", {});\n\nconst Markup: React.FC<PrimitivesMarkup> = (props) => {\n  const { as, markup } = props;\n  const { delimiter } = usePrimitivesContext();\n\n  if (!markup) return <></>;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"markup\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  const html = createMarkup(\n    getLabelAsString(markup, attributes.lang as string, delimiter) as string,\n  );\n\n  return (\n    <StyledMarkup as={as} {...attributes} dangerouslySetInnerHTML={html} />\n  );\n};\n\nconst MarkupWrapper: React.FC<PrimitivesMarkup> = (props) => {\n  const context = React.useContext(PrimitivesContext);\n\n  return context ? (\n    <Markup {...props} />\n  ) : (\n    <PrimitivesProvider>\n      <Markup {...props} />\n    </PrimitivesProvider>\n  );\n};\n\nexport default MarkupWrapper;\n","import React from \"react\";\nimport { PrimitivesValue } from \"src/types/primitives\";\nimport Markup from \"src/components/Primitives/Markup/Markup\";\n\nconst Value: React.FC<PrimitivesValue> = ({ as = \"dd\", lang, value }) => (\n  <Markup markup={value} as={as} lang={lang} />\n);\n\nexport default Value;\n","import React, { Fragment, cloneElement } from \"react\";\n\nimport { PrimitivesCustomValue } from \"src/types/primitives\";\nimport { getLabelEntries } from \"src/lib/label-helpers\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { usePrimitivesContext } from \"src/context/primitives-context\";\n\nconst StyledCustomValue = styled(\"span\", {});\n\nconst CustomValue: React.FC<PrimitivesCustomValue> = ({\n  as = \"dd\",\n  customValueContent,\n  lang,\n  value,\n}) => {\n  const { delimiter } = usePrimitivesContext();\n\n  const entries = getLabelEntries(value, lang)?.map((entry) => {\n    return cloneElement(customValueContent, {\n      value: entry,\n    });\n  });\n\n  return (\n    <StyledCustomValue as={as} lang={lang}>\n      {entries?.map((entry, index) => [\n        index > 0 && `${delimiter}`,\n        <Fragment key={index}>{entry}</Fragment>,\n      ])}\n    </StyledCustomValue>\n  );\n};\n\nexport default CustomValue;\n","import React from \"react\";\nimport Label from \"../Label/Label\";\nimport Value from \"../Value/Value\";\nimport { PrimitivesMetadataItem } from \"src/types/primitives\";\nimport CustomValue from \"../Value/CustomValue\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\n\nconst MetadataItem: React.FC<PrimitivesMetadataItem> = (props) => {\n  const { item, lang, customValueContent } = props;\n  const { label, value } = item;\n\n  /**\n   * Create value for data-label attribute for use as a selector\n   */\n  const dataAttribute = getLabelAsString(label)\n    ?.replace(\" \", \"-\")\n    .toLowerCase();\n\n  return (\n    <div role=\"group\" data-label={dataAttribute}>\n      <Label as=\"dt\" label={label} lang={lang} />\n      {customValueContent ? (\n        <CustomValue\n          as=\"dd\"\n          customValueContent={customValueContent}\n          value={value}\n          lang={lang}\n        />\n      ) : (\n        <Value as=\"dd\" value={value} lang={lang} />\n      )}\n    </div>\n  );\n};\n\nexport default MetadataItem;\n","export const cleanTime = (standardNotation: string) => {\n  const array = standardNotation.toString().split(\":\");\n  const hours: number = Math.ceil(parseInt(array[0]));\n  const minutes: number = Math.ceil(parseInt(array[1]));\n  const seconds: string = zeroPad(Math.ceil(parseInt(array[2])), 2);\n\n  // Insure time with Hours is formatted as \"HH:MM:SS\"\n  const formattedMinutes =\n    hours !== 0 && minutes < 10 ? (minutes + \"\").padStart(2, \"0\") : minutes;\n\n  let time: string = `${formattedMinutes}:${seconds}`;\n\n  if (hours !== 0) {\n    time = `${hours}:${time}`;\n  }\n\n  return time;\n};\n\nexport const convertTime = (duration: number) => {\n  const standardNotation: string = new Date(duration * 1000)\n    .toISOString()\n    .substr(11, 8);\n  return cleanTime(standardNotation);\n};\n\nexport const convertTimeToSeconds = (standardNotation: string) => {\n  const hms: Array<string> = standardNotation.split(\":\");\n  const seconds: number = +hms[0] * 60 * 60 + +hms[1] * 60 + +hms[2];\n  return seconds;\n};\n\nexport const deepMerge = (target, source) => {\n  if (typeof target !== \"object\" || target === null) {\n    return source;\n  }\n\n  for (const key in source) {\n    if (\n      typeof source[key] === \"object\" &&\n      source[key] !== null &&\n      !Array.isArray(source[key])\n    ) {\n      if (!target[key]) target[key] = {};\n      target[key] = deepMerge(target[key], source[key]);\n    } else {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n};\n\nexport const hashCode = (s: string) => {\n  return s.split(\"\").reduce(function (a, b) {\n    a = (a << 5) - a + b.charCodeAt(0);\n    return a & a;\n  }, 0);\n};\n\nexport const getRealPropertyValue = (\n  obj: { [key: string]: any },\n  property: string,\n) => {\n  const value = Object.hasOwn(obj, property)\n    ? obj[property].toString()\n    : undefined;\n  return value;\n};\n\nconst zeroPad = (num: number, places: number) =>\n  String(num).padStart(places, \"0\");\n","import { InternationalString } from \"@iiif/presentation-3\";\nimport { PrimitivesCustomValueContent } from \"../types/primitives\";\nimport { getLabelAsString } from \"./label-helpers\";\n\nexport function parseCustomContent(\n  label: InternationalString,\n  valueArray: PrimitivesCustomValueContent[],\n) {\n  const customContent = valueArray\n    .filter((entry) => {\n      const { matchingLabel } = entry;\n      const lang = Object.keys(entry.matchingLabel)[0];\n      const labelPattern = getLabelAsString(matchingLabel, lang);\n\n      if (getLabelAsString(label, lang) === labelPattern) return true;\n    })\n    .map((entry) => entry.Content);\n\n  if (!Array.isArray(customContent)) return;\n\n  return customContent[0];\n}\n","import MetadataItem from \"src/components/Primitives/Metadata/Item\";\nimport { PrimitivesMetadata } from \"src/types/primitives\";\nimport { PrimitivesProvider } from \"src/context/primitives-context\";\nimport React from \"react\";\nimport { getRealPropertyValue } from \"src/lib/utils\";\nimport { parseCustomContent } from \"src/lib/custom\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledMetadata = styled(\"dl\", {});\n\nconst Metadata: React.FC<PrimitivesMetadata> = (props) => {\n  const { as, customValueContent, metadata } = props;\n\n  if (!Array.isArray(metadata)) return <></>;\n\n  const delimiter = getRealPropertyValue(props, \"customValueDelimiter\");\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\n    \"as\",\n    \"customValueContent\",\n    \"customValueDelimiter\",\n    \"metadata\",\n  ];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <PrimitivesProvider\n      {...(typeof delimiter === \"string\"\n        ? { initialState: { delimiter: delimiter as string } }\n        : undefined)}\n    >\n      {metadata.length > 0 && (\n        <StyledMetadata as={as} {...attributes}>\n          {metadata.map((item, index) => {\n            const customValue = customValueContent\n              ? parseCustomContent(item.label, customValueContent)\n              : undefined;\n\n            return (\n              <MetadataItem\n                customValueContent={customValue}\n                item={item}\n                key={index}\n                lang={attributes?.lang}\n              />\n            );\n          })}\n        </StyledMetadata>\n      )}\n    </PrimitivesProvider>\n  );\n};\n\nexport default Metadata;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesPartOf } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledPartOf = styled(\"li\", {});\nconst StyledWrapper = styled(\"ul\", {});\n\nconst PartOf: React.FC<PrimitivesPartOf> = (props) => {\n  const { as, partOf } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"partOf\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledWrapper as={as}>\n      {partOf &&\n        partOf.map((resource) => {\n          const label = resource.label\n            ? (getLabelAsString(resource.label, attributes.lang) as string)\n            : undefined;\n          return (\n            <StyledPartOf key={resource.id}>\n              <a href={resource.id} {...attributes}>\n                {label ? label : resource.id}\n              </a>\n            </StyledPartOf>\n          );\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default PartOf;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesRendering } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledRendering = styled(\"li\", {});\nconst StyledWrapper = styled(\"ul\", {});\n\nconst Rendering: React.FC<PrimitivesRendering> = (props) => {\n  const { as, rendering } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"rendering\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledWrapper as={as}>\n      {rendering &&\n        rendering.map((resource) => {\n          const label = getLabelAsString(\n            resource.label,\n            attributes.lang,\n          ) as string;\n          return (\n            <StyledRendering key={resource.id}>\n              <a href={resource.id} {...attributes} target=\"_blank\">\n                {label ? label : resource.id}\n              </a>\n            </StyledRendering>\n          );\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default Rendering;\n","import MetadataItem from \"src/components/Primitives/Metadata/Item\";\nimport { PrimitivesProvider } from \"src/context/primitives-context\";\nimport { PrimitivesRequiredStatement } from \"src/types/primitives\";\nimport React from \"react\";\nimport { getRealPropertyValue } from \"src/lib/utils\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledRequiredStatement = styled(\"dl\", {});\n\nconst RequiredStatement: React.FC<PrimitivesRequiredStatement> = (props) => {\n  const { as, requiredStatement } = props;\n\n  if (!requiredStatement) return <></>;\n\n  const delimiter = getRealPropertyValue(props, \"customValueDelimiter\");\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"customValueDelimiter\", \"requiredStatement\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <PrimitivesProvider\n      {...(typeof delimiter === \"string\"\n        ? { initialState: { delimiter: delimiter as string } }\n        : undefined)}\n    >\n      <StyledRequiredStatement as={as} {...attributes}>\n        <MetadataItem item={requiredStatement} lang={attributes.lang} />\n      </StyledRequiredStatement>\n    </PrimitivesProvider>\n  );\n};\n\nexport default RequiredStatement;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesSeeAlso } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledSeeAlso = styled(\"li\", {});\nconst StyledWrapper = styled(\"ul\", {});\n\nconst SeeAlso: React.FC<PrimitivesSeeAlso> = (props) => {\n  const { as, seeAlso } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"seeAlso\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledWrapper as={as}>\n      {seeAlso &&\n        seeAlso.map((resource) => {\n          const label = getLabelAsString(\n            resource.label,\n            attributes.lang,\n          ) as string;\n          return (\n            <StyledSeeAlso key={resource.id}>\n              <a href={resource.id} {...attributes}>\n                {label ? label : resource.id}\n              </a>\n            </StyledSeeAlso>\n          );\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default SeeAlso;\n","import Markup from \"src/components/Primitives/Markup/Markup\";\nimport { PrimitivesSummary } from \"src/types/primitives\";\nimport React from \"react\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst Summary: React.FC<PrimitivesSummary> = (props) => {\n  const { as, summary } = props;\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"customValueDelimiter\", \"summary\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return <Markup as={as} markup={summary} {...attributes} />;\n};\n\nexport default Summary;\n","import {\n  PrimitivesExternalWebResource,\n  PrimitivesThumbnail,\n} from \"src/types/primitives\";\n\nimport ContentResource from \"src/components/Primitives/ContentResource/ContentResource\";\nimport React from \"react\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst Thumbnail: React.FC<PrimitivesThumbnail> = (props) => {\n  const { thumbnail, region } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"thumbnail\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <>\n      {thumbnail &&\n        thumbnail.map((contentResource) => (\n          <ContentResource\n            contentResource={contentResource as PrimitivesExternalWebResource}\n            key={contentResource.id}\n            region={region}\n            {...attributes}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default Thumbnail;\n","import Label from \"src/components/Primitives/Label/Label\";\nimport ContentResource from \"src/components/Primitives/ContentResource/ContentResource\";\nimport Homepage from \"src/components/Primitives/Homepage/Homepage\";\nimport Markup from \"src/components/Primitives/Markup/Markup\";\nimport Metadata from \"src/components/Primitives/Metadata/Metadata\";\nimport MetadataItem from \"src/components/Primitives/Metadata/Item\";\nimport PartOf from \"src/components/Primitives/PartOf/PartOf\";\nimport Rendering from \"src/components/Primitives/Rendering/Rendering\";\nimport RequiredStatement from \"src/components/Primitives/RequiredStatement/RequiredStatement\";\nimport SeeAlso from \"src/components/Primitives/SeeAlso/SeeAlso\";\nimport Summary from \"src/components/Primitives/Summary/Summary\";\nimport Thumbnail from \"src/components/Primitives/Thumbnail/Thumbnail\";\nimport Value from \"src/components/Primitives/Value/Value\";\nimport {\n  PrimitivesContentResource,\n  PrimitivesHomepage,\n  PrimitivesLabel,\n  PrimitivesMarkup,\n  PrimitivesMetadata,\n  PrimitivesMetadataItem,\n  PrimitivesPartOf,\n  PrimitivesRendering,\n  PrimitivesRequiredStatement,\n  PrimitivesSeeAlso,\n  PrimitivesSummary,\n  PrimitivesThumbnail,\n  PrimitivesValue,\n} from \"src/types/primitives\";\n\nexport interface CloverPrimitivesComposition {\n  ContentResource: React.FC<PrimitivesContentResource>;\n  Homepage: React.FC<PrimitivesHomepage>;\n  Label: React.FC<PrimitivesLabel>;\n  Markup: React.FC<PrimitivesMarkup>;\n  Metadata: React.FC<PrimitivesMetadata>;\n  MetadataItem: React.FC<PrimitivesMetadataItem>;\n  PartOf: React.FC<PrimitivesPartOf>;\n  Rendering: React.FC<PrimitivesRendering>;\n  RequiredStatement: React.FC<PrimitivesRequiredStatement>;\n  SeeAlso: React.FC<PrimitivesSeeAlso>;\n  Summary: React.FC<PrimitivesSummary>;\n  Thumbnail: React.FC<PrimitivesThumbnail>;\n  Value: React.FC<PrimitivesValue>;\n}\n\nconst Primitives: React.FC & CloverPrimitivesComposition = () => {\n  console.log(\"Use dot notation to access Primitives.*, ex: Primitives.Label\");\n  return null;\n};\n\nPrimitives.ContentResource = ContentResource;\nPrimitives.Homepage = Homepage;\nPrimitives.Label = Label;\nPrimitives.Markup = Markup;\nPrimitives.Metadata = Metadata;\nPrimitives.MetadataItem = MetadataItem;\nPrimitives.PartOf = PartOf;\nPrimitives.Rendering = Rendering;\nPrimitives.RequiredStatement = RequiredStatement;\nPrimitives.SeeAlso = SeeAlso;\nPrimitives.Summary = Summary;\nPrimitives.Thumbnail = Thumbnail;\nPrimitives.Value = Value;\n\nexport {\n  ContentResource,\n  Homepage,\n  Label,\n  Markup,\n  Metadata,\n  MetadataItem,\n  PartOf,\n  Rendering,\n  RequiredStatement,\n  SeeAlso,\n  Summary,\n  Thumbnail,\n  Value,\n};\n\nexport default Primitives as CloverPrimitivesComposition;\n"],"names":["getLabelEntries","label","lang","codes","getLabelAsString","delimiter","entries","createMarkup","html","sanitizeHTML","sanitizeAttributes","props","remove","key","attributes","sanitizeHtml","hue","theme","media","styled","css","keyframes","createTheme","createStitches","StyledLabel","Label","as","React","useGetImageResource","resource","size","region","id","service","imageService","StyledResource","ContentResource","mediaRef","useRef","contentResource","altAsLabel","alt","type","width","height","duration","useEffect","hls","Hls","event","data","playLoop","useCallback","startTime","loopTime","fragment","imgSrc","StyledHomepage","Homepage","children","homepage","defaultState","PrimitivesContext","createContext","usePrimitivesContext","context","useContext","PrimitivesProvider","initialState","getRealPropertyValue","obj","property","StyledMarkup","Markup","markup","MarkupWrapper","Value","value","StyledCustomValue","CustomValue","customValueContent","_a","entry","cloneElement","index","Fragment","MetadataItem","item","dataAttribute","parseCustomContent","valueArray","customContent","matchingLabel","labelPattern","StyledMetadata","Metadata","metadata","customValue","StyledPartOf","StyledWrapper","PartOf","partOf","StyledRendering","Rendering","rendering","StyledRequiredStatement","RequiredStatement","requiredStatement","StyledSeeAlso","SeeAlso","seeAlso","Summary","summary","Thumbnail","thumbnail","Primitives"],"mappings":"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"}