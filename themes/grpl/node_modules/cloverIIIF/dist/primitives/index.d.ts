// Generated by dts-bundle-generator v8.0.1

import { IIIFExternalWebResource, InternationalString, MetadataItem } from '@iiif/presentation-3';
import React from 'react';
import { ReactElement, ReactNode } from 'react';

export interface PrimitivesPrimitive extends React.HTMLAttributes<HTMLElement> {
}
export interface PrimitivesCustomValueContent {
	matchingLabel: InternationalString;
	Content: ReactElement;
}
export interface PrimitivesMetadataItem extends PrimitivesPrimitive {
	item: MetadataItem;
	customValueContent?: ReactElement;
	customValueDelimiter?: string;
}
export interface PrimitivesContentResource extends PrimitivesPrimitive {
	altAsLabel?: InternationalString;
	contentResource: PrimitivesExternalWebResource;
	region?: string;
}
export interface PrimitivesExternalWebResource {
	id: string;
	type: "Dataset" | "Image" | "Video" | "Sound" | "Text";
	format?: string;
	label?: InternationalString;
	language?: string | string[];
	duration?: number;
	width?: number;
	height?: number;
	profle?: string;
}
export interface PrimitivesIIIFResource {
	id: string;
	type: "Collection" | "Manifest";
	label?: InternationalString | undefined;
}
export interface PrimitivesHomepage extends PrimitivesPrimitive {
	children?: ReactNode | ReactNode[];
	homepage: PrimitivesExternalWebResource[];
}
export interface PrimitivesLabel extends PrimitivesPrimitive {
	as?: "dd" | "dt" | "figcaption" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "label" | "p" | "span";
	label: InternationalString;
}
export interface PrimitivesMarkup extends PrimitivesPrimitive {
	as?: "span" | "p" | "label" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6" | "dd";
	markup?: InternationalString;
}
export interface PrimitivesMetadata extends PrimitivesPrimitive {
	as?: "dl";
	customValueContent?: PrimitivesCustomValueContent[];
	customValueDelimiter?: string;
	metadata: MetadataItem[];
}
export interface PrimitivesPartOf extends PrimitivesPrimitive {
	as?: "ol" | "ul";
	partOf: PrimitivesIIIFResource[];
}
export interface PrimitivesRendering extends PrimitivesPrimitive {
	as?: "ol" | "ul";
	rendering: PrimitivesExternalWebResource[];
}
export interface PrimitivesRequiredStatement extends PrimitivesPrimitive {
	as?: "dl";
	customValueDelimiter?: string;
	requiredStatement: MetadataItem;
}
export interface PrimitivesSeeAlso extends PrimitivesPrimitive {
	as?: "ol" | "ul";
	seeAlso: PrimitivesExternalWebResource[];
}
export interface PrimitivesSummary extends PrimitivesPrimitive {
	as?: "span" | "p" | "label" | "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
	customValueDelimiter?: string;
	summary: InternationalString;
}
export interface PrimitivesThumbnail extends PrimitivesPrimitive {
	altAsLabel?: InternationalString;
	region?: string;
	thumbnail: IIIFExternalWebResource[];
}
export interface PrimitivesValue extends PrimitivesPrimitive {
	as?: "span" | "dd";
	value: InternationalString;
}
export declare const Label: React.FC<PrimitivesLabel>;
export declare const ContentResource: React.FC<PrimitivesContentResource>;
export declare const Homepage: React.FC<PrimitivesHomepage>;
declare const MarkupWrapper: React.FC<PrimitivesMarkup>;
export declare const Metadata: React.FC<PrimitivesMetadata>;
export declare const MetadataItem: React.FC<PrimitivesMetadataItem>;
export declare const PartOf: React.FC<PrimitivesPartOf>;
export declare const Rendering: React.FC<PrimitivesRendering>;
export declare const RequiredStatement: React.FC<PrimitivesRequiredStatement>;
export declare const SeeAlso: React.FC<PrimitivesSeeAlso>;
export declare const Summary: React.FC<PrimitivesSummary>;
export declare const Thumbnail: React.FC<PrimitivesThumbnail>;
export declare const Value: React.FC<PrimitivesValue>;
export interface CloverPrimitivesComposition {
	ContentResource: React.FC<PrimitivesContentResource>;
	Homepage: React.FC<PrimitivesHomepage>;
	Label: React.FC<PrimitivesLabel>;
	Markup: React.FC<PrimitivesMarkup>;
	Metadata: React.FC<PrimitivesMetadata>;
	MetadataItem: React.FC<PrimitivesMetadataItem>;
	PartOf: React.FC<PrimitivesPartOf>;
	Rendering: React.FC<PrimitivesRendering>;
	RequiredStatement: React.FC<PrimitivesRequiredStatement>;
	SeeAlso: React.FC<PrimitivesSeeAlso>;
	Summary: React.FC<PrimitivesSummary>;
	Thumbnail: React.FC<PrimitivesThumbnail>;
	Value: React.FC<PrimitivesValue>;
}
declare const _default: CloverPrimitivesComposition;

export {
	MarkupWrapper as Markup,
	_default as default,
};

export {};
