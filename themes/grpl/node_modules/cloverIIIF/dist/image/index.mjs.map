{"version":3,"file":"index.mjs","sources":["../../src/lib/openseadragon-svg.ts","../../src/lib/iiif.ts","../../src/types/open-seadragon.ts","../../src/lib/openseadragon-helpers.ts","../../src/styles/stitches.config.tsx","../../src/components/UI/ErrorFallback/ErrorFallback.styled.tsx","../../src/components/UI/ErrorFallback/ErrorFallback.tsx","../../src/components/Image/Image.styled.tsx","../../src/components/Image/Controls/Button.styled.tsx","../../src/components/Image/Controls/Button.tsx","../../src/components/Image/Controls/Controls.styled.tsx","../../src/context/viewer-context.tsx","../../src/components/Image/Controls/Controls.tsx","../../src/components/Image/OSD/OSD.tsx","../../src/components/Image/OSD/defaults.ts","../../src/lib/label-helpers.ts","../../src/components/Image/index.tsx"],"sourcesContent":["// OpenSeadragon SVG Overlay plugin 0.0.5\n// https://github.com/openseadragon/svg-overlay/issues/34#issuecomment-1147992921\nimport OpenSeadragon from \"openseadragon\";\n\nlet $ = window.OpenSeadragon;\n\nif (!$) {\n  $ = OpenSeadragon;\n  if (!$) {\n    throw new Error(\"OpenSeadragon is missing.\");\n  }\n}\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\n\n// ----------\nif ($.Viewer) {\n  // @ts-expect-error: svgOverlay does not exist on Viewer\n  $.Viewer.prototype.svgOverlay = function () {\n    if (this._svgOverlayInfo) {\n      return this._svgOverlayInfo;\n    }\n\n    this._svgOverlayInfo = new Overlay(this);\n    return this._svgOverlayInfo;\n  };\n}\n// ----------\nconst Overlay = function (viewer) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const self = this;\n\n  this._viewer = viewer;\n  this._containerWidth = 0;\n  this._containerHeight = 0;\n\n  this._svg = document.createElementNS(svgNS, \"svg\");\n  this._svg.style.position = \"absolute\";\n  this._svg.style.left = 0;\n  this._svg.style.top = 0;\n  this._svg.style.width = \"100%\";\n  this._svg.style.height = \"100%\";\n  this._viewer.canvas.appendChild(this._svg);\n\n  this._node = document.createElementNS(svgNS, \"g\");\n  this._svg.appendChild(this._node);\n\n  this._viewer.addHandler(\"animation\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"open\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"rotate\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"flip\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"resize\", function () {\n    self.resize();\n  });\n\n  this.resize();\n};\n\n// ----------\nOverlay.prototype = {\n  // ----------\n  node: function () {\n    return this._node;\n  },\n\n  // ----------\n  resize: function () {\n    if (this._containerWidth !== this._viewer.container.clientWidth) {\n      this._containerWidth = this._viewer.container.clientWidth;\n      this._svg.setAttribute(\"width\", this._containerWidth);\n    }\n\n    if (this._containerHeight !== this._viewer.container.clientHeight) {\n      this._containerHeight = this._viewer.container.clientHeight;\n      this._svg.setAttribute(\"height\", this._containerHeight);\n    }\n\n    const p = this._viewer.viewport.pixelFromPoint(new $.Point(0, 0), true);\n    const zoom = this._viewer.viewport.getZoom(true);\n    const rotation = this._viewer.viewport.getRotation();\n    const flipped = this._viewer.viewport.getFlip();\n    // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n    const containerSizeX = this._viewer.viewport._containerInnerSize.x;\n    let scaleX = containerSizeX * zoom;\n    const scaleY = scaleX;\n\n    if (flipped) {\n      // Makes the x component of the scale negative to flip the svg\n      scaleX = -scaleX;\n      // Translates svg back into the correct coordinates when the x scale is made negative.\n      p.x = -p.x + containerSizeX;\n    }\n\n    this._node.setAttribute(\n      \"transform\",\n      \"translate(\" +\n        p.x +\n        \",\" +\n        p.y +\n        \") scale(\" +\n        scaleX +\n        \",\" +\n        scaleY +\n        \") rotate(\" +\n        rotation +\n        \")\",\n    );\n  },\n  // ----------\n  onClick: function (node, handler) {\n    // TODO: Fast click for mobile browsers\n\n    new $.MouseTracker({\n      element: node,\n      clickHandler: handler,\n    }).setTracking(true);\n  },\n};\n\nexport const OsdSvgOverlay = (viewer) => {\n  return new Overlay(viewer);\n};\n","import {\n  Canvas,\n  CollectionNormalized,\n  IIIFExternalWebResource,\n  ImageService,\n  ManifestNormalized,\n  Service,\n} from \"@iiif/presentation-3\";\nimport { decodeContentState } from \"@iiif/vault-helpers\";\n\nexport const getCanvasResource = (canvas: Canvas) => {\n  if (canvas?.items) {\n    const annotationPage = canvas?.items[0];\n    if (annotationPage?.items) {\n      const resource = annotationPage?.items[0].body as IIIFExternalWebResource;\n      if (resource?.hasOwnProperty(\"id\")) {\n        return resource.id as string;\n      }\n    }\n  }\n};\n\nexport const getInfoResponse = (id: string) =>\n  fetch(`${id.replace(/\\/$/, \"\")}/info.json`)\n    .then((response) => response.json())\n    .then((json) => json)\n    .catch((error: any) => {\n      console.error(\n        `The IIIF tilesource ${id.replace(\n          /\\/$/,\n          \"\",\n        )}/info.json failed to load: ${error}`,\n      );\n    });\n\nexport const getImageServiceURI = (service: Service[] | undefined) => {\n  let imageService: ImageService;\n  let imageServiceURI: string | undefined;\n\n  if (Array.isArray(service)) {\n    imageService = service[0] as ImageService;\n    if (imageService) {\n      let id: string | undefined;\n      \"@id\" in imageService\n        ? (id = imageService[\"@id\"])\n        : (id = imageService.id);\n\n      imageServiceURI = id;\n    }\n  }\n\n  return imageServiceURI;\n};\n\nconst parseIiifContent = (iiifContent: string) => {\n  let resourceId;\n  let active;\n  if (isURL(iiifContent)) {\n    resourceId = iiifContent;\n    active = {};\n  } else {\n    const json = JSON.parse(decodeContentState(iiifContent));\n    switch (json?.type) {\n      // https://iiif.io/api/content-state/1.0/#51-a-region-of-a-canvas-in-a-manifest\n      // https://iiif.io/api/content-state/1.0/#52-start-playing-at-a-point-in-a-recording\n      // https://iiif.io/api/content-state/1.0/#53-multiple-targets-for-a-comparison-view\n      // https://iiif.io/api/content-state/1.0/#54-search-results\n      case \"SpecificResource\":\n      case \"Range\":\n      case \"Annotation\":\n        resourceId = json?.target.partOf[0].id;\n        active = {\n          manifest: resourceId,\n          canvas: json?.target.id,\n        };\n        break;\n      case \"Canvas\":\n        resourceId = json?.partOf[0].id;\n        active = {\n          manifest: resourceId,\n          canvas: json?.id,\n        };\n        break;\n      case \"Manifest\":\n        resourceId = json?.id;\n        active = {\n          collection: json?.partOf[0]?.id,\n          manifest: json?.id,\n        };\n        break;\n      case \"Collection\":\n        resourceId = json?.id;\n        active = {\n          collection: resourceId,\n        };\n        break;\n    }\n  }\n  return { resourceId, active };\n};\n\nexport const decodeContentStateContainerURI = (iiifContent: string) => {\n  const { resourceId, active } = parseIiifContent(iiifContent);\n  return active.collection || active.manifest || resourceId;\n};\n\nexport const getActiveCanvas = (\n  iiifContent: string,\n  manifest: ManifestNormalized,\n) => {\n  const canvases = manifest.items.map((item) => item.id);\n  const { active } = parseIiifContent(iiifContent);\n  const canvas = active.canvas;\n  return canvases.includes(canvas) ? canvas : canvases[0];\n};\n\nexport const getActiveManifest = (\n  iiifContent: string,\n  collection: CollectionNormalized,\n) => {\n  const { active } = parseIiifContent(iiifContent);\n  const manifest = active.manifest;\n  const manifests = collection.items\n    .filter((item) => item.type === \"Manifest\")\n    .map((manifest) => manifest.id);\n  if (manifests.length == 0) return null;\n  return manifests.includes(manifest) ? manifest : manifests[0];\n};\n\nconst isURL = (url: string) => {\n  try {\n    new URL(url);\n  } catch {\n    return false;\n  }\n  return true;\n};\n","export enum OpenSeadragonImageTypes {\n  TiledImage = \"tiledImage\",\n  SimpleImage = \"simpleImage\",\n}\n","import {\n  Annotation,\n  AnnotationNormalized,\n  IIIFExternalWebResource,\n  type CanvasNormalized,\n  AnnotationPageNormalized,\n} from \"@iiif/presentation-3\";\nimport OpenSeadragon from \"openseadragon\";\nimport {\n  type OverlayOptions,\n  type ViewerConfigOptions,\n} from \"src/context/viewer-context\";\nimport { OsdSvgOverlay } from \"src/lib/openseadragon-svg\";\nimport { parseAnnotationTarget } from \"src/lib/annotation-helpers\";\n\nimport { ParsedAnnotationTarget } from \"src/types/annotations\";\nimport { getImageServiceURI } from \"src/lib/iiif\";\nimport { OpenSeadragonImageTypes } from \"src/types/open-seadragon\";\n\nexport function addOverlaysToViewer(\n  viewer: OpenSeadragon.Viewer,\n  canvas: CanvasNormalized,\n  configOptions: OverlayOptions,\n  annotations: Annotation[] | AnnotationNormalized[],\n  overlaySelector: string,\n): void {\n  if (!viewer) return;\n\n  const scale = 1 / canvas.width;\n\n  annotations.forEach((annotation) => {\n    if (!annotation.target) return;\n\n    const parsedAnnotationTarget = parseAnnotationTarget(annotation.target);\n    const { point, rect, svg } = parsedAnnotationTarget;\n\n    if (rect) {\n      const { x, y, w, h } = rect;\n      addRectangularOverlay(\n        viewer,\n        x * scale,\n        y * scale,\n        w * scale,\n        h * scale,\n        configOptions,\n        overlaySelector,\n      );\n    }\n\n    if (point) {\n      const { x, y } = point;\n      const svg = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"${x}\" cy=\"${y}\" r=\"20\" />\n        </svg>\n      `;\n\n      addSvgOverlay(viewer, svg, configOptions, scale, overlaySelector);\n    }\n\n    if (svg) {\n      addSvgOverlay(viewer, svg, configOptions, scale, overlaySelector);\n    }\n  });\n}\n\nexport function createOpenSeadragonRect(\n  canvas: CanvasNormalized,\n  parsedAnnotationTarget: ParsedAnnotationTarget,\n  zoomLevel: number,\n) {\n  let x,\n    y,\n    w = 40,\n    h = 40;\n\n  if (parsedAnnotationTarget.rect) {\n    x = parsedAnnotationTarget.rect.x;\n    y = parsedAnnotationTarget.rect.y;\n    w = parsedAnnotationTarget.rect.w;\n    h = parsedAnnotationTarget.rect.h;\n  }\n\n  if (parsedAnnotationTarget.point) {\n    x = parsedAnnotationTarget.point.x;\n    y = parsedAnnotationTarget.point.y;\n  }\n\n  // TODO: How to handle SVG where no rect or point exists?\n  // @ts-ignore\n  if (parseAnnotationTarget.svg) {\n  }\n\n  const scale = 1 / canvas.width;\n  const rect = new OpenSeadragon.Rect(\n    x * scale - ((w * scale) / 2) * (zoomLevel - 1),\n    y * scale - ((h * scale) / 2) * (zoomLevel - 1),\n    w * scale * zoomLevel,\n    h * scale * zoomLevel,\n  );\n\n  return rect;\n}\n\n/**\n * Add a rectangular overlay to an OpenSeadragon viewer\n */\nfunction addRectangularOverlay(\n  viewer: OpenSeadragon.Viewer,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  configOptions: OverlayOptions,\n  overlaySelector: string,\n): void {\n  const rect = new OpenSeadragon.Rect(x, y, w, h);\n  const div = document.createElement(\"div\");\n\n  if (configOptions) {\n    const { backgroundColor, opacity, borderType, borderColor, borderWidth } =\n      configOptions;\n\n    div.style.backgroundColor = backgroundColor as string;\n    div.style.opacity = opacity as string;\n    div.style.border = `${borderType} ${borderWidth} ${borderColor}`;\n    div.className = overlaySelector;\n  }\n\n  viewer.addOverlay(div, rect);\n}\n\nfunction convertSVGStringToHTML(svgString) {\n  if (!svgString) return null;\n  const template = document.createElement(\"template\");\n  template.innerHTML = svgString.trim();\n  const result = template.content.children;\n\n  return result[0];\n}\n\nexport function addSvgOverlay(\n  viewer: any,\n  svgString: string,\n  configOptions: OverlayOptions,\n  scale: number,\n  overlaySelector: string,\n) {\n  const svgEl = convertSVGStringToHTML(svgString);\n  if (svgEl) {\n    for (const child of svgEl.children) {\n      svg_processChild(viewer, child, configOptions, scale, overlaySelector);\n    }\n  }\n}\n\nfunction svg_processChild(\n  viewer: any,\n  child: ChildNode,\n  configOptions: OverlayOptions,\n  scale: number,\n  overlaySelector: string,\n) {\n  if (child.nodeName === \"#text\") {\n    svg_handleTextNode(child);\n  } else {\n    const newElement = svg_handleElementNode(child, configOptions, scale);\n    const overlay = OsdSvgOverlay(viewer);\n    overlay.node().append(newElement);\n    overlay._svg?.setAttribute(\"class\", overlaySelector);\n\n    // BUG: svg with children elements aren't formated correctly.\n    child.childNodes.forEach((child) => {\n      svg_processChild(viewer, child, configOptions, scale, overlaySelector);\n    });\n  }\n}\n\nexport function svg_handleElementNode(\n  child: any,\n  configOptions: OverlayOptions,\n  scale: number,\n) {\n  let hasStrokeColor = false;\n  let hasStrokeWidth = false;\n  let hasFillColor = false;\n  let hasFillOpacity = false;\n\n  const newElement = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    child.nodeName,\n  );\n\n  if (child.attributes.length > 0) {\n    for (let index = 0; index < child.attributes.length; index++) {\n      const element = child.attributes[index];\n      switch (element.name) {\n        case \"fill\":\n          hasFillColor = true;\n          break;\n        case \"stroke\":\n          hasStrokeColor = true;\n          break;\n        case \"stroke-width\":\n          hasStrokeWidth = true;\n          break;\n        case \"fill-opacity\":\n          hasFillOpacity = true;\n          break;\n      }\n      newElement.setAttribute(element.name, element.textContent);\n    }\n  }\n\n  if (!hasStrokeColor) {\n    newElement.style.stroke = configOptions?.borderColor as string;\n  }\n  if (!hasStrokeWidth) {\n    newElement.style.strokeWidth = configOptions?.borderWidth as string;\n  }\n  if (!hasFillColor) {\n    newElement.style.fill = configOptions?.backgroundColor as string;\n  }\n  if (!hasFillOpacity) {\n    newElement.style.fillOpacity = configOptions?.opacity as string;\n  }\n  newElement.setAttribute(\"transform\", `scale(${scale})`);\n\n  return newElement;\n}\n\nfunction svg_handleTextNode(child: ChildNode) {\n  if (!child.textContent) {\n    return;\n  }\n  if (child.textContent.includes(\"\\n\")) {\n    return;\n  }\n  console.log(\n    \"nodeName:\",\n    child.nodeName,\n    \", textContent:\",\n    child.textContent,\n    \", childNodes.length\",\n    child.childNodes.length,\n  );\n}\n\nexport const parseImageBody = (body: IIIFExternalWebResource) => {\n  const hasImageService =\n    Array.isArray(body?.service) && body?.service.length > 0;\n\n  const uri = hasImageService ? getImageServiceURI(body?.service) : body?.id;\n  const imageType: OpenSeadragonImageTypes = hasImageService\n    ? OpenSeadragonImageTypes.TiledImage\n    : OpenSeadragonImageTypes.SimpleImage;\n\n  return {\n    uri,\n    imageType,\n  };\n};\n\nexport const parseSrc = (src: string, isTiledImage: boolean) => {\n  const imageType = isTiledImage\n    ? OpenSeadragonImageTypes.TiledImage\n    : OpenSeadragonImageTypes.SimpleImage;\n\n  return {\n    uri: src,\n    imageType,\n  };\n};\nexport function removeOverlaysFromViewer(\n  viewer: OpenSeadragon.Viewer,\n  overlaySelector: string,\n) {\n  if (!viewer) return;\n\n  if (!overlaySelector.startsWith(\".\")) {\n    overlaySelector = \".\" + overlaySelector;\n  }\n  const elements = document.querySelectorAll(overlaySelector);\n  if (elements) {\n    elements.forEach((element) => viewer.removeOverlay(element));\n  }\n}\n\nexport function panToTarget(openSeadragonViewer, zoomLevel, target, canvas) {\n  const parsedAnnotationTarget = parseAnnotationTarget(target);\n\n  const { point, rect, svg } = parsedAnnotationTarget;\n\n  if (point || rect || svg) {\n    const rect = createOpenSeadragonRect(\n      canvas,\n      parsedAnnotationTarget,\n      zoomLevel,\n    );\n    openSeadragonViewer?.viewport.fitBounds(rect);\n  }\n}\n\nexport function addContentSearchOverlays(\n  contentSearchVault: any,\n  contentSearch: AnnotationPageNormalized,\n  openSeadragonViewer,\n  canvas: CanvasNormalized,\n  configOptions: ViewerConfigOptions,\n) {\n  if (!contentSearch?.items) return;\n  if (contentSearch?.items.length === 0) return;\n\n  const annotations: Array<AnnotationNormalized> = [];\n  contentSearch.items.forEach((item) => {\n    const annotation = contentSearchVault.get(item.id) as AnnotationNormalized;\n\n    if (typeof annotation.target === \"string\") {\n      if (annotation.target.startsWith(canvas.id)) {\n        annotations.push(annotation as unknown as AnnotationNormalized);\n      }\n    }\n  });\n\n  if (openSeadragonViewer && configOptions.contentSearch?.overlays) {\n    addOverlaysToViewer(\n      openSeadragonViewer,\n      canvas,\n      configOptions.contentSearch.overlays,\n      annotations,\n      \"content-search-overlay\",\n    );\n  }\n}\n","import { createStitches } from \"@stitches/react\";\n\nconst hue = 209;\n\nexport const theme = {\n  colors: {\n    /*\n     * Black and dark grays in a light theme.\n     * Must contrast to 4.5 or greater with `secondary`.\n     */\n    primary: \"#1a1d1e\",\n    primaryMuted: \"#26292b\",\n    primaryAlt: \"#151718\",\n\n    /*\n     * Key brand color(s).\n     * Must contrast to 4.5 or greater with `secondary`.\n     */\n    accent: `hsl(${hue} 100% 38.2%)`,\n    accentMuted: `hsl(${hue} 80% 61.8%)`,\n    accentAlt: `hsl(${hue} 80% 30%)`,\n\n    /*\n     * White and light grays in a light theme.\n     * Must contrast to 4.5 or greater with `primary` and  `accent`.\n     */\n    secondary: \"#FFFFFF\",\n    secondaryMuted: \"#e6e8eb\",\n    secondaryAlt: \"#c1c8cd\",\n  },\n  fontSizes: {\n    1: \"12px\",\n    2: \"13px\",\n    3: \"15px\",\n    4: \"17px\",\n    5: \"19px\",\n    6: \"21px\",\n    7: \"27px\",\n    8: \"35px\",\n    9: \"59px\",\n  },\n  lineHeights: {\n    1: \"12px\",\n    2: \"13px\",\n    3: \"15px\",\n    4: \"17px\",\n    5: \"19px\",\n    6: \"21px\",\n    7: \"27px\",\n    8: \"35px\",\n    9: \"59px\",\n  },\n  sizes: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n    4: \"20px\",\n    5: \"25px\",\n    6: \"35px\",\n    7: \"45px\",\n    8: \"65px\",\n    9: \"80px\",\n  },\n  space: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n    4: \"20px\",\n    5: \"25px\",\n    6: \"35px\",\n    7: \"45px\",\n    8: \"65px\",\n    9: \"80px\",\n  },\n  radii: {\n    1: \"4px\",\n    2: \"6px\",\n    3: \"8px\",\n    4: \"12px\",\n    round: \"50%\",\n    pill: \"9999px\",\n  },\n  transitions: {\n    all: \"all 300ms cubic-bezier(0.16, 1, 0.3, 1)\",\n  },\n  zIndices: {\n    1: \"100\",\n    2: \"200\",\n    3: \"300\",\n    4: \"400\",\n    max: \"999\",\n  },\n};\n\nexport const media = {\n  xxs: \"(max-width: 349px)\",\n  xs: \"(max-width: 575px)\",\n  sm: \"(max-width: 767px)\",\n  md: \"(max-width: 991px)\",\n  lg: \"(max-width: 90rem)\",\n  xl: \"(min-width: calc(90rem + 1px))\",\n};\n\nexport type { CSS, VariantProps } from \"@stitches/react\";\n\nexport const { styled, css, keyframes, createTheme } = createStitches({\n  theme,\n  media,\n});\n","import { styled } from \"src/styles/stitches.config\";\n\nconst ErrorFallbackStyled = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n});\n\nconst Headline = styled(\"p\", {\n  fontWeight: \"bold\",\n  fontSize: \"x-large\",\n});\n\nconst ErrorBody = styled(\"span\", {\n  fontSize: \"medium\",\n});\n\nexport { ErrorFallbackStyled, ErrorBody, Headline };\n","import {\n  ErrorBody,\n  ErrorFallbackStyled,\n  Headline,\n} from \"src/components/UI/ErrorFallback/ErrorFallback.styled\";\n\nimport React from \"react\";\n\ninterface ErrorFallbackProps {\n  error: Error;\n}\n\nconst ErrorFallback: React.FC<ErrorFallbackProps> = ({ error }) => {\n  const { message } = error;\n\n  return (\n    <ErrorFallbackStyled role=\"alert\">\n      <Headline data-testid=\"headline\">Something went wrong</Headline>\n      {message && <ErrorBody>{`Error message: ${message}`} </ErrorBody>}\n    </ErrorFallbackStyled>\n  );\n};\n\nexport default ErrorFallback;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst Navigator = styled(\"div\", {\n  position: \"absolute !important\",\n  zIndex: \"1\",\n  top: \"1rem\",\n  left: \"1rem\",\n  width: \"161.8px\",\n  height: \"100px\",\n  backgroundColor: \"#000D\",\n  boxShadow: \"5px 5px 5px #0002\",\n  borderRadius: \"3px\",\n\n  \".displayregion\": {\n    border: \" 3px solid $accent !important\",\n    boxShadow: \"0 0 3px #0006\",\n  },\n\n  \"@sm\": {\n    width: \"123px\",\n    height: \"76px\",\n  },\n\n  \"@xs\": {\n    width: \"100px\",\n    height: \"61.8px\",\n  },\n});\n\nconst Viewport = styled(\"div\", {\n  position: \"relative\",\n  width: \"100%\",\n  height: \"100%\",\n  zIndex: \"0\",\n});\n\nconst Wrapper = styled(\"div\", {\n  width: \"100%\",\n  height: \"100%\",\n  maxHeight: \"100vh\",\n  background: \"transparent\",\n  backgroundSize: \"contain\",\n  color: \"white\",\n  position: \"relative\",\n  zIndex: \"0\",\n  overflow: \"hidden\",\n\n  variants: {\n    hasNavigator: {\n      true: {\n        [`${Navigator}`]: {\n          display: \"block\",\n        },\n      },\n      false: {\n        [`${Navigator}`]: {\n          display: \"none\",\n        },\n      },\n    },\n  },\n});\n\nexport { Navigator, Viewport, Wrapper };\n","import { styled } from \"src/styles/stitches.config\";\n\nconst Item = styled(\"button\", {\n  display: \"flex\",\n  height: \"2rem\",\n  width: \"2rem\",\n  borderRadius: \"2rem\",\n  padding: \"0\",\n  margin: \"0\",\n  fontFamily: \"inherit\",\n  background: \"none\",\n  backgroundColor: \"$primary\",\n  border: \"none\",\n  color: \"white\",\n  cursor: \"pointer\",\n  marginLeft: \"0.618rem\",\n  filter: \"drop-shadow(2px 2px 5px #0003)\",\n  transition: \"$all\",\n  boxSizing: \"content-box !important\",\n\n  \"&:first-child\": {\n    marginLeft: \"0\",\n  },\n\n  \"@xs\": {\n    marginBottom: \"0.618rem\",\n    marginLeft: \"0\",\n\n    \"&:last-child\": {\n      marginBottom: \"0\",\n    },\n  },\n\n  svg: {\n    height: \"60%\",\n    width: \"60%\",\n    padding: \"20%\",\n    fill: \"$secondary\",\n    stroke: \"$secondary\",\n    filter: \"drop-shadow(2px 2px 5px #0003)\",\n    transition: \"$all\",\n    boxSizing: \"inherit\",\n  },\n\n  \"&:hover, &:focus\": {\n    backgroundColor: \"$accent\",\n  },\n\n  \"&[data-button=rotate-right]\": {\n    \"&:hover, &:focus\": {\n      svg: {\n        rotate: \"45deg\",\n      },\n    },\n  },\n\n  \"&[data-button=rotate-left]\": {\n    transform: \"scaleX(-1)\",\n\n    \"&:hover, &:focus\": {\n      svg: {\n        rotate: \"45deg\",\n      },\n    },\n  },\n\n  \"&[data-button=reset]\": {\n    \"&:hover, &:focus\": {\n      svg: {\n        rotate: \"-15deg\",\n      },\n    },\n  },\n});\n\nexport { Item };\n","import { Item } from \"src/components/Image/Controls/Button.styled\";\nimport React from \"react\";\n\ninterface ButtonProps {\n  className?: string;\n  id: string;\n  label: string;\n  children: React.ReactChild;\n}\n\nconst Button: React.FC<ButtonProps> = ({ className, id, label, children }) => {\n  const dataButton = label.toLowerCase().replace(/\\s/g, \"-\");\n  return (\n    <Item\n      id={id}\n      className={className}\n      data-testid=\"openseadragon-button\"\n      data-button={dataButton}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-labelledby={`${id}-svg-title`}\n        data-testid=\"openseadragon-button-svg\"\n        focusable=\"false\"\n        viewBox=\"0 0 512 512\"\n        role=\"img\"\n      >\n        <title id={`${id}-svg-title`}>{label}</title>\n        {children}\n      </svg>\n    </Item>\n  );\n};\n\nexport default Button;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst Wrapper = styled(\"div\", {\n  position: \"absolute\",\n  zIndex: \"1\",\n  top: \"1rem\",\n  right: \"1rem\",\n  display: \"flex\",\n\n  \"@xs\": {\n    flexDirection: \"column\",\n    zIndex: \"2\",\n  },\n\n  variants: {\n    hasPlaceholder: {\n      true: {\n        right: \"3.618rem\",\n\n        \"@xs\": {\n          top: \"3.618rem\",\n          right: \"1rem\",\n        },\n      },\n\n      false: {\n        right: \"1rem\",\n\n        \"@xs\": {\n          top: \"1rem\",\n          right: \"1rem\",\n        },\n      },\n    },\n  },\n});\n\nexport { Wrapper };\n","import OpenSeadragon, { Options as OpenSeadragonOptions } from \"openseadragon\";\nimport React, { useReducer } from \"react\";\n\nimport { CollectionNormalized } from \"@iiif/presentation-3\";\nimport { IncomingHttpHeaders } from \"http\";\nimport { Vault } from \"@iiif/vault\";\nimport { deepMerge } from \"src/lib/utils\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type AutoScrollSettings = {\n  behavior: string; // ScrollBehavior (\"auto\" | \"instant\" | \"smooth\")\n  block: string; // ScrollLogicalPosition (\"center\" | \"end\" | \"nearest\" | \"start\")\n};\n\nexport type AutoScrollOptions = {\n  enabled: boolean;\n  settings: AutoScrollSettings;\n};\n\nexport type ViewerConfigOptions = {\n  annotationOverlays?: OverlayOptions;\n  background?: string;\n  canvasBackgroundColor?: string;\n  canvasHeight?: string;\n  contentSearch?: {\n    searchResultsLimit?: number;\n    overlays?: OverlayOptions;\n    zoomToFirst?: boolean;\n  };\n  ignoreCaptionLabels?: string[];\n  pages?: {\n    show?: boolean;\n    toggleLabel?: string;\n  };\n  informationPanel?: {\n    open?: boolean;\n    renderAbout?: boolean;\n    renderSupplementing?: boolean;\n    renderToggle?: boolean;\n    renderAnnotation?: boolean;\n    toggleLabel?: string;\n    vtt?: {\n      autoScroll?: AutoScrollOptions | AutoScrollSettings | boolean;\n    };\n    renderContentSearch?: boolean;\n    defaultTab?: string;\n  };\n  openSeadragon?: OpenSeadragonOptions;\n  requestHeaders?: IncomingHttpHeaders;\n  showDownload?: boolean;\n  headerNavigation?: string;\n  showIIIFBadge?: boolean;\n  showTitle?: boolean;\n  withCredentials?: boolean;\n  localeText?: {\n    contentSearch?: {\n      tabLabel?: string;\n      formPlaceholder?: string;\n      noSearchResults?: string;\n      loading?: string;\n      moreResults?: string;\n    };\n  };\n  initialSearch?: string;\n  initialPage?: number;\n};\n\nexport type OverlayOptions = {\n  backgroundColor?: string;\n  borderColor?: string;\n  borderType?: string;\n  borderWidth?: string;\n  opacity?: string;\n  renderOverlays?: boolean;\n  zoomLevel?: number;\n};\n\nconst defaultAutoScrollSettings: AutoScrollSettings = {\n  behavior: \"smooth\",\n  block: \"center\",\n};\n\nconst defaultConfigOptions = {\n  annotationOverlays: {\n    backgroundColor: \"#6666ff\",\n    borderColor: \"#000099\",\n    borderType: \"solid\",\n    borderWidth: \"1px\",\n    opacity: \"0.5\",\n    renderOverlays: true,\n    zoomLevel: 2,\n  },\n  background: \"transparent\",\n  canvasBackgroundColor: \"#6662\",\n  canvasHeight: \"500px\",\n  contentSearch: {\n    searchResultsLimit: 20,\n    zoomToFirst: false,\n    overlays: {\n      backgroundColor: \"#ff6666\",\n      borderColor: \"#990000\",\n      borderType: \"solid\",\n      borderWidth: \"1px\",\n      opacity: \"0.5\",\n      renderOverlays: true,\n      zoomLevel: 4,\n    },\n  },\n  ignoreCaptionLabels: [],\n  pages: {\n    show: true,\n    toggleLabel: \"Pages\",\n  },\n  informationPanel: {\n    vtt: {\n      autoScroll: {\n        enabled: true,\n        settings: defaultAutoScrollSettings,\n      },\n    },\n    open: true,\n    renderAbout: true,\n    renderSupplementing: true,\n    renderToggle: true,\n    renderAnnotation: true,\n    renderContentSearch: true,\n  },\n  openSeadragon: {},\n  requestHeaders: { \"Content-Type\": \"application/json\" },\n  showDownload: true,\n  showIIIFBadge: true,\n  showTitle: true,\n  withCredentials: false,\n  localeText: {\n    contentSearch: {\n      tabLabel: \"Search Results\",\n      formPlaceholder: \"Enter search words\",\n      noSearchResults: \"No search results\",\n      loading: \"Loading...\",\n      moreResults: \"more results\",\n    },\n  },\n};\n\nexport type CustomDisplay = {\n  display: {\n    component: React.ElementType;\n    componentProps?: Record<string, unknown>;\n  };\n  target: {\n    canvasId?: string[];\n    paintingFormat?: string[];\n  };\n};\nexport type PluginConfig = {\n  id: string;\n  imageViewer?: {\n    menu?: {\n      component: React.ElementType;\n      componentProps?: Record<string, unknown>;\n    };\n  };\n  informationPanel?: {\n    component: React.ElementType;\n    componentProps?: Record<string, unknown>;\n    label: string;\n  };\n};\n\nexport interface ViewerContextStore {\n  activeCanvas: string;\n  activeManifest: string;\n  OSDImageLoaded?: boolean;\n  collection?: CollectionNormalized | Record<string, never>;\n  configOptions: ViewerConfigOptions;\n  customDisplays: Array<CustomDisplay>;\n  plugins: Array<PluginConfig>;\n  isAutoScrollEnabled?: boolean;\n  isAutoScrolling?: boolean;\n  isInformationOpen: boolean;\n  showPageNavigation: boolean;\n  isLoaded: boolean;\n  isUserScrolling?: number | undefined;\n  vault: Vault;\n  contentSearchVault: Vault;\n  openSeadragonViewer: OpenSeadragon.Viewer | null;\n  openSeadragonId?: string;\n  viewerId?: string;\n  informationPanelCounts: object;\n}\n\nexport interface ViewerAction {\n  type: string;\n  canvasId: string;\n  collection: CollectionNormalized;\n  configOptions: ViewerConfigOptions;\n  isAutoScrollEnabled: boolean;\n  isAutoScrolling: boolean;\n  isInformationOpen: boolean;\n  showPageNavigation: boolean;\n  isLoaded: boolean;\n  isUserScrolling: number | undefined;\n  manifestId: string;\n  OSDImageLoaded?: boolean;\n  vault: Vault;\n  contentSearchVault: Vault;\n  openSeadragonViewer: OpenSeadragon.Viewer;\n  viewerId: string;\n  panel: string;\n  count: number;\n}\n\nexport function expandAutoScrollOptions(\n  value: AutoScrollOptions | AutoScrollSettings | boolean | undefined,\n): AutoScrollOptions {\n  let result: AutoScrollOptions = {\n    ...defaultConfigOptions.informationPanel.vtt.autoScroll,\n  };\n  if (typeof value === \"object\") {\n    result = \"enabled\" in value ? value : { enabled: true, settings: value };\n  }\n  if (value === false) result.enabled = false;\n  validateAutoScrollSettings(result.settings);\n  return result;\n}\n\nfunction validateAutoScrollSettings({ behavior, block }: AutoScrollSettings) {\n  const validBehaviors = [\"auto\", \"instant\", \"smooth\"];\n  const validPositions = [\"center\", \"end\", \"nearest\", \"start\"];\n  if (!validBehaviors.includes(behavior))\n    throw TypeError(`'${behavior}' not in ${validBehaviors.join(\" | \")}`);\n  if (!validPositions.includes(block))\n    throw TypeError(`'${block}' not in ${validPositions.join(\" | \")}`);\n}\n\nconst expandedAutoScrollOptions = expandAutoScrollOptions(\n  defaultConfigOptions?.informationPanel?.vtt?.autoScroll,\n);\n\nexport const defaultState: ViewerContextStore = {\n  activeCanvas: \"\",\n  activeManifest: \"\",\n  OSDImageLoaded: false,\n  collection: {},\n  configOptions: defaultConfigOptions,\n  customDisplays: [],\n  plugins: [],\n  isAutoScrollEnabled: expandedAutoScrollOptions.enabled,\n  isAutoScrolling: false,\n  isInformationOpen: defaultConfigOptions?.informationPanel?.open,\n  showPageNavigation: defaultConfigOptions?.pages?.show,\n  isLoaded: false,\n  isUserScrolling: undefined,\n  vault: new Vault(),\n  contentSearchVault: new Vault(),\n  openSeadragonViewer: null,\n  viewerId: uuidv4(),\n  informationPanelCounts: {},\n};\n\nconst ViewerStateContext =\n  React.createContext<ViewerContextStore>(defaultState);\nconst ViewerDispatchContext =\n  React.createContext<ViewerContextStore>(defaultState);\n\nfunction viewerReducer(state: ViewerContextStore, action: ViewerAction) {\n  switch (action.type) {\n    case \"updateActiveCanvas\": {\n      /**\n       * Set canvasId to empty string if it comes back undefined.\n       */\n      if (!action.canvasId) action.canvasId = \"\";\n      return {\n        ...state,\n        activeCanvas: action.canvasId,\n      };\n    }\n    case \"updateActiveManifest\": {\n      return {\n        ...state,\n        activeManifest: action.manifestId,\n      };\n    }\n    case \"updateOSDImageLoaded\": {\n      return {\n        ...state,\n        OSDImageLoaded: action.OSDImageLoaded,\n      };\n    }\n    case \"updateAutoScrollAnnotationEnabled\": {\n      return {\n        ...state,\n        isAutoScrollEnabled: action.isAutoScrollEnabled,\n      };\n    }\n    case \"updateAutoScrolling\": {\n      return {\n        ...state,\n        isAutoScrolling: action.isAutoScrolling,\n      };\n    }\n    case \"updateCollection\": {\n      return {\n        ...state,\n        collection: action.collection,\n      };\n    }\n    case \"updateConfigOptions\": {\n      return {\n        ...state,\n        configOptions: deepMerge(state.configOptions, action.configOptions),\n      };\n    }\n    case \"updateInformationOpen\": {\n      return {\n        ...state,\n        isInformationOpen: action.isInformationOpen,\n      };\n    }\n    case \"updateShowPageNavigation\": {\n      return {\n        ...state,\n        showPageNavigation: action.showPageNavigation,\n      };\n    }\n    case \"updateIsLoaded\": {\n      return {\n        ...state,\n        isLoaded: action.isLoaded,\n      };\n    }\n    case \"updateUserScrolling\": {\n      return {\n        ...state,\n        isUserScrolling: action.isUserScrolling,\n      };\n    }\n    case \"updateOpenSeadragonViewer\": {\n      return {\n        ...state,\n        openSeadragonViewer: action.openSeadragonViewer,\n      };\n    }\n    case \"updateViewerId\": {\n      return {\n        ...state,\n        viewerId: action.viewerId,\n      };\n    }\n    case \"updateInformationPanelCount\": {\n      const c = state.informationPanelCounts ?? {};\n      c[action.panel] = action.count;\n      return {\n        ...state,\n        informationPanelCounts: c,\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\ninterface ViewerProviderProps {\n  initialState?: ViewerContextStore;\n  children: React.ReactNode;\n}\n\nconst ViewerProvider: React.FC<ViewerProviderProps> = ({\n  initialState = defaultState,\n  children,\n}) => {\n  const [state, dispatch] = useReducer<\n    React.Reducer<ViewerContextStore, ViewerAction>\n  >(viewerReducer, initialState);\n\n  return (\n    <ViewerStateContext.Provider value={state}>\n      <ViewerDispatchContext.Provider\n        value={dispatch as unknown as ViewerContextStore}\n      >\n        {children}\n      </ViewerDispatchContext.Provider>\n    </ViewerStateContext.Provider>\n  );\n};\n\nfunction useViewerState() {\n  const context = React.useContext(ViewerStateContext);\n  if (context === undefined) {\n    throw new Error(\"useViewerState must be used within a ViewerProvider\");\n  }\n  return context;\n}\n\nfunction useViewerDispatch() {\n  const context = React.useContext(ViewerDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useViewerDispatch must be used within a ViewerProvider\");\n  }\n  return context;\n}\n\nexport { ViewerProvider, useViewerState, useViewerDispatch };\n","import Button from \"src/components/Image/Controls/Button\";\nimport { Options } from \"openseadragon\";\nimport React from \"react\";\nimport { Wrapper } from \"src/components/Image/Controls/Controls.styled\";\nimport {\n  ViewerContextStore,\n  useViewerState,\n  useViewerDispatch,\n} from \"src/context/viewer-context\";\nimport { CanvasNormalized } from \"@iiif/presentation-3\";\n\nconst ZoomIn = () => {\n  return (\n    <path\n      strokeLinecap=\"round\"\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"45\"\n      d=\"M256 112v288M400 256H112\"\n    />\n  );\n};\n\nconst ZoomOut = () => {\n  return (\n    <path\n      strokeLinecap=\"round\"\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"45\"\n      d=\"M400 256H112\"\n    />\n  );\n};\n\nconst ZoomFullScreen = () => {\n  return (\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"32\"\n      d=\"M432 320v112H320M421.8 421.77L304 304M80 192V80h112M90.2 90.23L208 208M320 80h112v112M421.77 90.2L304 208M192 432H80V320M90.23 421.8L208 304\"\n    />\n  );\n};\n\nconst Reset = () => {\n  return (\n    <path d=\"M448 440a16 16 0 01-12.61-6.15c-22.86-29.27-44.07-51.86-73.32-67C335 352.88 301 345.59 256 344.23V424a16 16 0 01-27 11.57l-176-168a16 16 0 010-23.14l176-168A16 16 0 01256 88v80.36c74.14 3.41 129.38 30.91 164.35 81.87C449.32 292.44 464 350.9 464 424a16 16 0 01-16 16z\" />\n  );\n};\n\nconst Rotate = () => {\n  return (\n    <>\n      <path\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"45\"\n        d=\"M400 148l-21.12-24.57A191.43 191.43 0 00240 64C134 64 48 150 48 256s86 192 192 192a192.09 192.09 0 00181.07-128\"\n      />\n      <path d=\"M464 97.42V208a16 16 0 01-16 16H337.42c-14.26 0-21.4-17.23-11.32-27.31L436.69 86.1C446.77 76 464 83.16 464 97.42z\" />\n    </>\n  );\n};\n\nconst Controls = ({\n  _cloverViewerHasPlaceholder,\n  config,\n}: {\n  _cloverViewerHasPlaceholder: boolean;\n  config: Options;\n}) => {\n  const viewerState: ViewerContextStore = useViewerState();\n  const {\n    activeCanvas,\n    configOptions,\n    openSeadragonViewer,\n    plugins,\n    vault,\n    activeManifest,\n  } = viewerState;\n\n  const canvas: CanvasNormalized = vault.get({\n    id: activeCanvas,\n    type: \"Canvas\",\n  });\n\n  function renderPlugins() {\n    return plugins\n      .filter((plugin) => plugin.imageViewer?.menu)\n      .map((plugin, i) => {\n        const PluginComponent = plugin.imageViewer?.menu\n          ?.component as unknown as React.ElementType;\n        return (\n          <PluginComponent\n            key={i}\n            {...plugin?.imageViewer?.menu?.componentProps}\n            activeManifest={activeManifest}\n            canvas={canvas}\n            viewerConfigOptions={configOptions}\n            openSeadragonViewer={openSeadragonViewer}\n            useViewerDispatch={useViewerDispatch}\n            useViewerState={useViewerState}\n          ></PluginComponent>\n        );\n      });\n  }\n\n  return (\n    <Wrapper\n      data-testid=\"clover-iiif-image-openseadragon-controls\"\n      hasPlaceholder={_cloverViewerHasPlaceholder}\n    >\n      {config.showZoomControl && (\n        <>\n          <Button id={config.zoomInButton as string} label=\"zoom in\">\n            <ZoomIn />\n          </Button>\n          <Button id={config.zoomOutButton as string} label=\"zoom out\">\n            <ZoomOut />\n          </Button>\n        </>\n      )}\n      {config.showFullPageControl && (\n        <Button id={config.fullPageButton as string} label=\"full page\">\n          <ZoomFullScreen />\n        </Button>\n      )}\n      {config.showRotationControl && (\n        <>\n          <Button id={config.rotateRightButton as string} label=\"rotate right\">\n            <Rotate />\n          </Button>\n          <Button id={config.rotateLeftButton as string} label=\"rotate left\">\n            <Rotate />\n          </Button>\n        </>\n      )}\n      {config.showHomeControl && (\n        <Button id={config.homeButton as string} label=\"reset\">\n          <Reset />\n        </Button>\n      )}\n      {renderPlugins()}\n    </Wrapper>\n  );\n};\n\nexport default Controls;\n","import {\n  Navigator,\n  Viewport,\n  Wrapper,\n} from \"src/components/Image/Image.styled\";\nimport OpenSeadragon, { Options } from \"openseadragon\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport Controls from \"src/components/Image/Controls/Controls\";\nimport { OpenSeadragonImageTypes } from \"src/types/open-seadragon\";\nimport { getInfoResponse } from \"src/lib/iiif\";\nimport { useViewerDispatch } from \"src/context/viewer-context\";\n\ninterface OSDProps {\n  _cloverViewerHasPlaceholder: boolean;\n  ariaLabel?: string | null;\n  config: Options;\n  uri: string | undefined;\n  imageType: OpenSeadragonImageTypes;\n  openSeadragonCallback?: (viewer: OpenSeadragon.Viewer) => void;\n}\n\nconst OSD: React.FC<OSDProps> = ({\n  ariaLabel,\n  config,\n  uri,\n  _cloverViewerHasPlaceholder,\n  imageType,\n  openSeadragonCallback,\n}) => {\n  const [osdUri, setOsdUri] = useState<string>();\n  const [openSeadragon, setOpenSeadragon] = useState<OpenSeadragon.Viewer>();\n  const dispatch: any = useViewerDispatch();\n\n  const initializeOSD = useRef(false);\n\n  useEffect(() => {\n    if (!initializeOSD.current) {\n      initializeOSD.current = true;\n\n      if (!openSeadragon) setOpenSeadragon(OpenSeadragon(config));\n    }\n\n    return () => openSeadragon?.destroy();\n  }, []);\n\n  useEffect(() => {\n    if (openSeadragon && openSeadragonCallback)\n      openSeadragonCallback(openSeadragon);\n  }, [openSeadragon, openSeadragonCallback]);\n\n  useEffect(() => {\n    if (openSeadragon && uri !== osdUri) {\n      openSeadragon?.forceRedraw();\n      setOsdUri(uri);\n    }\n  }, [openSeadragon, osdUri, uri]);\n\n  useEffect(() => {\n    if (osdUri && openSeadragon) {\n      switch (imageType) {\n        case \"simpleImage\":\n          openSeadragon?.addSimpleImage({\n            url: osdUri,\n          });\n          break;\n        case \"tiledImage\":\n          getInfoResponse(osdUri).then((tileSource) => {\n            try {\n              if (!tileSource)\n                throw new Error(`No tile source found for ${osdUri}`);\n\n              openSeadragon?.addTiledImage({\n                tileSource,\n                success: () => {\n                  // NOTE: need to check dispatch is a function, because when\n                  // using dev server, dispatch sometimes is set to\n                  // ViewerContext.defaultState object instead of a function\n                  if (typeof dispatch === \"function\") {\n                    dispatch({\n                      type: \"updateOSDImageLoaded\",\n                      OSDImageLoaded: true,\n                    });\n                  }\n                },\n              });\n            } catch (e) {\n              console.error(e);\n            }\n          });\n          break;\n        default:\n          openSeadragon?.close();\n          console.warn(\n            `Unable to render ${osdUri} in OpenSeadragon as type: \"${imageType}\"`,\n          );\n          break;\n      }\n    }\n  }, [imageType, osdUri]);\n\n  return (\n    <Wrapper\n      className=\"clover-iiif-image-openseadragon\"\n      data-testid=\"clover-iiif-image-openseadragon\"\n      data-openseadragon-instance={config.id}\n      hasNavigator={config.showNavigator}\n    >\n      <Controls\n        _cloverViewerHasPlaceholder={_cloverViewerHasPlaceholder}\n        config={config}\n      />\n      {config.showNavigator && (\n        <Navigator\n          id={config.navigatorId}\n          data-testid=\"clover-iiif-image-openseadragon-navigator\"\n        />\n      )}\n      <Viewport\n        id={config.id}\n        data-testid=\"clover-iiif-image-openseadragon-viewport\"\n        role=\"img\"\n        {...(ariaLabel && { \"aria-label\": ariaLabel })}\n      />\n    </Wrapper>\n  );\n};\n\nexport default OSD;\n","import { Options } from \"openseadragon\";\n\nfunction defaultOpenSeadragonConfiguration(\n  openSeadragonInstance: string,\n): Options {\n  return {\n    id: `openseadragon-${openSeadragonInstance}`,\n    navigatorId: `openseadragon-navigator-${openSeadragonInstance}`,\n    loadTilesWithAjax: true,\n    fullPageButton: `fullPage-${openSeadragonInstance}`,\n    homeButton: `reset-${openSeadragonInstance}`,\n    rotateLeftButton: `rotateLeft-${openSeadragonInstance}`,\n    rotateRightButton: `rotateRight-${openSeadragonInstance}`,\n    zoomInButton: `zoomIn-${openSeadragonInstance}`,\n    zoomOutButton: `zoomOut-${openSeadragonInstance}`,\n    showNavigator: true,\n    showFullPageControl: true,\n    showHomeControl: true,\n    showRotationControl: true,\n    showZoomControl: true,\n    navigatorBorderColor: \"transparent\",\n    gestureSettingsMouse: {\n      clickToZoom: true,\n      dblClickToZoom: true,\n      pinchToZoom: true,\n      scrollToZoom: false,\n    },\n  };\n}\n\nexport default defaultOpenSeadragonConfiguration;\n","import { InternationalString } from \"@iiif/presentation-3\";\n\nexport const getLabelEntries = (\n  label?: InternationalString,\n  lang: string = \"none\",\n) => {\n  /*\n   * If no label exists, return an empty string.\n   */\n  if (!label) return null;\n\n  /*\n   * If label is not a IIIF Presentation API 3.0 shape, return the string\n   */\n  if (typeof label === \"string\") return [label];\n\n  /*\n   * If InternationalString code does not exist on label, then\n   * return what may be there, ex: label.none[0] OR label.fr[0]\n   */\n  if (!label[lang]) {\n    const codes: Array<string> = Object.getOwnPropertyNames(label);\n    if (codes.length > 0) return label[codes[0]];\n  }\n\n  /*\n   * Return label value for InternationalString code `en`\n   */\n  if (!label[lang]) return null;\n  if (!Array.isArray(label[lang])) return null;\n\n  return label[lang] as string[];\n};\n\nexport const getLabelAsString = (\n  label: InternationalString | undefined,\n  lang: string = \"none\",\n  delimiter: string = \", \",\n) => {\n  const entries = getLabelEntries(label, lang);\n  return Array.isArray(entries) ? entries.join(`${delimiter}`) : entries;\n};\n","import { parseImageBody, parseSrc } from \"src/lib/openseadragon-helpers\";\n\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorFallback from \"src/components/UI/ErrorFallback/ErrorFallback\";\nimport { InternationalString } from \"@iiif/presentation-3\";\nimport { LabeledIIIFExternalWebResource } from \"src/types/presentation-3\";\nimport OSD from \"src/components/Image/OSD/OSD\";\nimport { Options } from \"openseadragon\";\nimport React from \"react\";\nimport defaultOpenSeadragonConfig from \"src/components/Image/OSD/defaults\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface CloverImageProps {\n  _cloverViewerHasPlaceholder?: boolean;\n  body?: LabeledIIIFExternalWebResource;\n  instanceId?: string;\n  isTiledImage?: boolean;\n  label?: InternationalString | string;\n  src?: string;\n  openSeadragonCallback?: (viewer: any) => void;\n  openSeadragonConfig?: Options;\n}\n\nconst CloverImage: React.FC<CloverImageProps> = ({\n  _cloverViewerHasPlaceholder = false,\n  body,\n  instanceId,\n  isTiledImage = false,\n  label,\n  src = \"\",\n  openSeadragonCallback,\n  openSeadragonConfig = {},\n}) => {\n  const instance = instanceId ? instanceId : uuidv4();\n  const ariaLabel = typeof label === \"string\" ? label : getLabelAsString(label);\n  const config = {\n    ...defaultOpenSeadragonConfig(instance),\n    ...openSeadragonConfig,\n  };\n\n  const { imageType, uri } = body\n    ? parseImageBody(body)\n    : parseSrc(src, isTiledImage);\n\n  if (!uri) return null;\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <OSD\n        _cloverViewerHasPlaceholder={_cloverViewerHasPlaceholder}\n        ariaLabel={ariaLabel}\n        config={config}\n        imageType={imageType}\n        key={instance}\n        uri={uri}\n        openSeadragonCallback={openSeadragonCallback}\n      />\n    </ErrorBoundary>\n  );\n};\n\nexport default CloverImage;\n"],"names":["$","OpenSeadragon","svgNS","Overlay","viewer","self","p","zoom","rotation","flipped","containerSizeX","scaleX","scaleY","node","handler","getInfoResponse","id","response","json","error","getImageServiceURI","service","imageService","imageServiceURI","OpenSeadragonImageTypes","parseImageBody","body","hasImageService","uri","imageType","parseSrc","src","isTiledImage","hue","theme","media","styled","css","keyframes","createTheme","createStitches","ErrorFallbackStyled","Headline","ErrorBody","ErrorFallback","message","React","Navigator","Viewport","Wrapper","Item","Button","className","label","children","dataButton","defaultAutoScrollSettings","defaultConfigOptions","expandAutoScrollOptions","value","result","validateAutoScrollSettings","behavior","block","validBehaviors","validPositions","expandedAutoScrollOptions","_b","_a","defaultState","Vault","uuidv4","ViewerStateContext","ViewerDispatchContext","useViewerState","context","useViewerDispatch","ZoomIn","ZoomOut","ZoomFullScreen","Reset","Rotate","Controls","_cloverViewerHasPlaceholder","config","viewerState","activeCanvas","configOptions","openSeadragonViewer","plugins","vault","activeManifest","canvas","renderPlugins","plugin","i","PluginComponent","_d","_c","OSD","ariaLabel","openSeadragonCallback","osdUri","setOsdUri","useState","openSeadragon","setOpenSeadragon","dispatch","initializeOSD","useRef","useEffect","tileSource","e","defaultOpenSeadragonConfiguration","openSeadragonInstance","getLabelEntries","lang","codes","getLabelAsString","delimiter","entries","CloverImage","instanceId","openSeadragonConfig","instance","defaultOpenSeadragonConfig","ErrorBoundary"],"mappings":";;;;;;;AAIA,IAAIA,IAAI,OAAO;AAEf,IAAI,CAACA,MACCA,IAAAC,GACA,CAACD;AACG,QAAA,IAAI,MAAM,2BAA2B;AAI/C,MAAME,IAAQ;AAGVF,EAAE,WAEFA,EAAA,OAAO,UAAU,aAAa,WAAY;AAC1C,SAAI,KAAK,kBACA,KAAK,mBAGT,KAAA,kBAAkB,IAAIG,EAAQ,IAAI,GAChC,KAAK;AAAA;AAIhB,MAAMA,IAAU,SAAUC,GAAQ;AAEhC,QAAMC,IAAO;AAEb,OAAK,UAAUD,GACf,KAAK,kBAAkB,GACvB,KAAK,mBAAmB,GAExB,KAAK,OAAO,SAAS,gBAAgBF,GAAO,KAAK,GAC5C,KAAA,KAAK,MAAM,WAAW,YACtB,KAAA,KAAK,MAAM,OAAO,GAClB,KAAA,KAAK,MAAM,MAAM,GACjB,KAAA,KAAK,MAAM,QAAQ,QACnB,KAAA,KAAK,MAAM,SAAS,QACzB,KAAK,QAAQ,OAAO,YAAY,KAAK,IAAI,GAEzC,KAAK,QAAQ,SAAS,gBAAgBA,GAAO,GAAG,GAC3C,KAAA,KAAK,YAAY,KAAK,KAAK,GAE3B,KAAA,QAAQ,WAAW,aAAa,WAAY;AAC/C,IAAAG,EAAK,OAAO;AAAA,EAAA,CACb,GAEI,KAAA,QAAQ,WAAW,QAAQ,WAAY;AAC1C,IAAAA,EAAK,OAAO;AAAA,EAAA,CACb,GAEI,KAAA,QAAQ,WAAW,UAAU,WAAY;AAC5C,IAAAA,EAAK,OAAO;AAAA,EAAA,CACb,GAEI,KAAA,QAAQ,WAAW,QAAQ,WAAY;AAC1C,IAAAA,EAAK,OAAO;AAAA,EAAA,CACb,GAEI,KAAA,QAAQ,WAAW,UAAU,WAAY;AAC5C,IAAAA,EAAK,OAAO;AAAA,EAAA,CACb,GAED,KAAK,OAAO;AACd;AAGAF,EAAQ,YAAY;AAAA;AAAA,EAElB,MAAM,WAAY;AAChB,WAAO,KAAK;AAAA,EACd;AAAA;AAAA,EAGA,QAAQ,WAAY;AAClB,IAAI,KAAK,oBAAoB,KAAK,QAAQ,UAAU,gBAC7C,KAAA,kBAAkB,KAAK,QAAQ,UAAU,aAC9C,KAAK,KAAK,aAAa,SAAS,KAAK,eAAe,IAGlD,KAAK,qBAAqB,KAAK,QAAQ,UAAU,iBAC9C,KAAA,mBAAmB,KAAK,QAAQ,UAAU,cAC/C,KAAK,KAAK,aAAa,UAAU,KAAK,gBAAgB;AAGlD,UAAAG,IAAI,KAAK,QAAQ,SAAS,eAAe,IAAIN,EAAE,MAAM,GAAG,CAAC,GAAG,EAAI,GAChEO,IAAO,KAAK,QAAQ,SAAS,QAAQ,EAAI,GACzCC,IAAW,KAAK,QAAQ,SAAS,YAAY,GAC7CC,IAAU,KAAK,QAAQ,SAAS,QAAQ,GAExCC,IAAiB,KAAK,QAAQ,SAAS,oBAAoB;AACjE,QAAIC,IAASD,IAAiBH;AAC9B,UAAMK,IAASD;AAEf,IAAIF,MAEFE,IAAS,CAACA,GAERL,EAAA,IAAI,CAACA,EAAE,IAAII,IAGf,KAAK,MAAM;AAAA,MACT;AAAA,MACA,eACEJ,EAAE,IACF,MACAA,EAAE,IACF,aACAK,IACA,MACAC,IACA,cACAJ,IACA;AAAA,IAAA;AAAA,EAEN;AAAA;AAAA,EAEA,SAAS,SAAUK,GAAMC,GAAS;AAGhC,QAAId,EAAE,aAAa;AAAA,MACjB,SAASa;AAAA,MACT,cAAcC;AAAA,IAAA,CACf,EAAE,YAAY,EAAI;AAAA,EACrB;AACF;AC3Ga,MAAAC,IAAkB,CAACC,MAC9B,MAAM,GAAGA,EAAG,QAAQ,OAAO,EAAE,CAAC,YAAY,EACvC,KAAK,CAACC,MAAaA,EAAS,KAAK,CAAC,EAClC,KAAK,CAACC,MAASA,CAAI,EACnB,MAAM,CAACC,MAAe;AACb,UAAA;AAAA,IACN,uBAAuBH,EAAG;AAAA,MACxB;AAAA,MACA;AAAA,IAAA,CACD,8BAA8BG,CAAK;AAAA,EAAA;AAExC,CAAC,GAEQC,IAAqB,CAACC,MAAmC;AAChE,MAAAC,GACAC;AAEA,MAAA,MAAM,QAAQF,CAAO,MACvBC,IAAeD,EAAQ,CAAC,GACpBC,IAAc;AACZ,QAAAN;AACJ,aAASM,IACJN,IAAKM,EAAa,KAAK,IACvBN,IAAKM,EAAa,IAELC,IAAAP;AAAA,EACpB;AAGK,SAAAO;AACT;ACpDY,IAAAC,sBAAAA,OACVA,EAAA,aAAa,cACbA,EAAA,cAAc,eAFJA,IAAAA,KAAA,CAAA,CAAA;ACwPC,MAAAC,IAAiB,CAACC,MAAkC;AACzD,QAAAC,IACJ,MAAM,QAAQD,KAAA,gBAAAA,EAAM,OAAO,MAAKA,KAAA,gBAAAA,EAAM,QAAQ,UAAS,GAEnDE,IAAMD,IAAkBP,EAAmBM,KAAA,gBAAAA,EAAM,OAAO,IAAIA,KAAA,gBAAAA,EAAM,IAClEG,IAAqCF,IACvCH,EAAwB,aACxBA,EAAwB;AAErB,SAAA;AAAA,IACL,KAAAI;AAAA,IACA,WAAAC;AAAA,EAAA;AAEJ,GAEaC,IAAW,CAACC,GAAaC,MAA0B;AAC9D,QAAMH,IAAYG,IACdR,EAAwB,aACxBA,EAAwB;AAErB,SAAA;AAAA,IACL,KAAKO;AAAA,IACL,WAAAF;AAAA,EAAA;AAEJ,GC9QMI,IAAM,KAECC,IAAQ;AAAA,EACnB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKN,SAAS;AAAA,IACT,cAAc;AAAA,IACd,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,IAMZ,QAAQ,OAAOD,CAAG;AAAA,IAClB,aAAa,OAAOA,CAAG;AAAA,IACvB,WAAW,OAAOA,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,IAMrB,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,cAAc;AAAA,EAChB;AAAA,EACA,WAAW;AAAA,IACT,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAAA,EACA,aAAa;AAAA,IACX,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAAA,EACA,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAAA,EACA,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACL;AAAA,EACA,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,aAAa;AAAA,IACX,KAAK;AAAA,EACP;AAAA,EACA,UAAU;AAAA,IACR,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,IACH,KAAK;AAAA,EACP;AACF,GAEaE,IAAQ;AAAA,EACnB,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AAAA,EACJ,IAAI;AACN,GAIa,EAAE,QAAAC,GAAQ,KAAAC,IAAK,WAAAC,IAAW,aAAAC,GAAA,IAAgBC,EAAe;AAAA,EACpE,OAAAN;AAAA,EACA,OAAAC;AACF,CAAC,GC1GKM,IAAsBL,EAAO,OAAO;AAAA,EACxC,SAAS;AAAA,EACT,eAAe;AAAA,EACf,YAAY;AACd,CAAC,GAEKM,IAAWN,EAAO,KAAK;AAAA,EAC3B,YAAY;AAAA,EACZ,UAAU;AACZ,CAAC,GAEKO,IAAYP,EAAO,QAAQ;AAAA,EAC/B,UAAU;AACZ,CAAC,GCHKQ,IAA8C,CAAC,EAAE,OAAAzB,QAAY;AAC3D,QAAA,EAAE,SAAA0B,EAAY,IAAA1B;AAEpB,yCACGsB,GAAoB,EAAA,MAAK,WACxB,gBAAAK,EAAA,cAACJ,KAAS,eAAY,WAAA,GAAW,sBAAoB,GACpDG,KAAY,gBAAAC,EAAA,cAAAH,GAAA,MAAW,kBAAkBE,CAAO,IAAG,GAAC,CACvD;AAEJ,GCnBME,IAAYX,EAAO,OAAO;AAAA,EAC9B,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,cAAc;AAAA,EAEd,kBAAkB;AAAA,IAChB,QAAQ;AAAA,IACR,WAAW;AAAA,EACb;AAAA,EAEA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AAAA,EAEA,OAAO;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AACF,CAAC,GAEKY,KAAWZ,EAAO,OAAO;AAAA,EAC7B,UAAU;AAAA,EACV,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AACV,CAAC,GAEKa,KAAUb,EAAO,OAAO;AAAA,EAC5B,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,gBAAgB;AAAA,EAChB,OAAO;AAAA,EACP,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,UAAU;AAAA,EAEV,UAAU;AAAA,IACR,cAAc;AAAA,MACZ,MAAM;AAAA,QACJ,CAAC,GAAGW,CAAS,EAAE,GAAG;AAAA,UAChB,SAAS;AAAA,QACX;AAAA,MACF;AAAA,MACA,OAAO;AAAA,QACL,CAAC,GAAGA,CAAS,EAAE,GAAG;AAAA,UAChB,SAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC,GC3DKG,KAAOd,EAAO,UAAU;AAAA,EAC5B,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,cAAc;AAAA,EACd,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,iBAAiB;AAAA,EACjB,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,YAAY;AAAA,EACZ,WAAW;AAAA,EAEX,iBAAiB;AAAA,IACf,YAAY;AAAA,EACd;AAAA,EAEA,OAAO;AAAA,IACL,cAAc;AAAA,IACd,YAAY;AAAA,IAEZ,gBAAgB;AAAA,MACd,cAAc;AAAA,IAChB;AAAA,EACF;AAAA,EAEA,KAAK;AAAA,IACH,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,WAAW;AAAA,EACb;AAAA,EAEA,oBAAoB;AAAA,IAClB,iBAAiB;AAAA,EACnB;AAAA,EAEA,+BAA+B;AAAA,IAC7B,oBAAoB;AAAA,MAClB,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF;AAAA,EAEA,8BAA8B;AAAA,IAC5B,WAAW;AAAA,IAEX,oBAAoB;AAAA,MAClB,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF;AAAA,EAEA,wBAAwB;AAAA,IACtB,oBAAoB;AAAA,MAClB,KAAK;AAAA,QACH,QAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACF,CAAC,GC/DKe,IAAgC,CAAC,EAAE,WAAAC,GAAW,IAAApC,GAAI,OAAAqC,GAAO,UAAAC,QAAe;AAC5E,QAAMC,IAAaF,EAAM,YAAA,EAAc,QAAQ,OAAO,GAAG;AAEvD,SAAA,gBAAAP,EAAA;AAAA,IAACI;AAAA,IAAA;AAAA,MACC,IAAAlC;AAAA,MACA,WAAAoC;AAAA,MACA,eAAY;AAAA,MACZ,eAAaG;AAAA,IAAA;AAAA,IAEb,gBAAAT,EAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,OAAM;AAAA,QACN,mBAAiB,GAAG9B,CAAE;AAAA,QACtB,eAAY;AAAA,QACZ,WAAU;AAAA,QACV,SAAQ;AAAA,QACR,MAAK;AAAA,MAAA;AAAA,sCAEJ,SAAM,EAAA,IAAI,GAAGA,CAAE,gBAAeqC,CAAM;AAAA,MACpCC;AAAA,IACH;AAAA,EAAA;AAGN,GC9BML,KAAUb,EAAO,OAAO;AAAA,EAC5B,UAAU;AAAA,EACV,QAAQ;AAAA,EACR,KAAK;AAAA,EACL,OAAO;AAAA,EACP,SAAS;AAAA,EAET,OAAO;AAAA,IACL,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EAEA,UAAU;AAAA,IACR,gBAAgB;AAAA,MACd,MAAM;AAAA,QACJ,OAAO;AAAA,QAEP,OAAO;AAAA,UACL,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AAAA,MAEA,OAAO;AAAA,QACL,OAAO;AAAA,QAEP,OAAO;AAAA,UACL,KAAK;AAAA,UACL,OAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC,GC0CKoB,KAAgD;AAAA,EACpD,UAAU;AAAA,EACV,OAAO;AACT,GAEMC,IAAuB;AAAA,EAC3B,oBAAoB;AAAA,IAClB,iBAAiB;AAAA,IACjB,aAAa;AAAA,IACb,YAAY;AAAA,IACZ,aAAa;AAAA,IACb,SAAS;AAAA,IACT,gBAAgB;AAAA,IAChB,WAAW;AAAA,EACb;AAAA,EACA,YAAY;AAAA,EACZ,uBAAuB;AAAA,EACvB,cAAc;AAAA,EACd,eAAe;AAAA,IACb,oBAAoB;AAAA,IACpB,aAAa;AAAA,IACb,UAAU;AAAA,MACR,iBAAiB;AAAA,MACjB,aAAa;AAAA,MACb,YAAY;AAAA,MACZ,aAAa;AAAA,MACb,SAAS;AAAA,MACT,gBAAgB;AAAA,MAChB,WAAW;AAAA,IACb;AAAA,EACF;AAAA,EACA,qBAAqB,CAAC;AAAA,EACtB,OAAO;AAAA,IACL,MAAM;AAAA,IACN,aAAa;AAAA,EACf;AAAA,EACA,kBAAkB;AAAA,IAChB,KAAK;AAAA,MACH,YAAY;AAAA,QACV,SAAS;AAAA,QACT,UAAUD;AAAA,MACZ;AAAA,IACF;AAAA,IACA,MAAM;AAAA,IACN,aAAa;AAAA,IACb,qBAAqB;AAAA,IACrB,cAAc;AAAA,IACd,kBAAkB;AAAA,IAClB,qBAAqB;AAAA,EACvB;AAAA,EACA,eAAe,CAAC;AAAA,EAChB,gBAAgB,EAAE,gBAAgB,mBAAmB;AAAA,EACrD,cAAc;AAAA,EACd,eAAe;AAAA,EACf,WAAW;AAAA,EACX,iBAAiB;AAAA,EACjB,YAAY;AAAA,IACV,eAAe;AAAA,MACb,UAAU;AAAA,MACV,iBAAiB;AAAA,MACjB,iBAAiB;AAAA,MACjB,SAAS;AAAA,MACT,aAAa;AAAA,IACf;AAAA,EACF;AACF;AAsEO,SAASE,GACdC,GACmB;AACnB,MAAIC,IAA4B;AAAA,IAC9B,GAAGH,EAAqB,iBAAiB,IAAI;AAAA,EAAA;AAE3C,SAAA,OAAOE,KAAU,aACnBC,IAAS,aAAaD,IAAQA,IAAQ,EAAE,SAAS,IAAM,UAAUA,MAE/DA,MAAU,OAAOC,EAAO,UAAU,KACtCC,GAA2BD,EAAO,QAAQ,GACnCA;AACT;AAEA,SAASC,GAA2B,EAAE,UAAAC,GAAU,OAAAC,KAA6B;AAC3E,QAAMC,IAAiB,CAAC,QAAQ,WAAW,QAAQ,GAC7CC,IAAiB,CAAC,UAAU,OAAO,WAAW,OAAO;AACvD,MAAA,CAACD,EAAe,SAASF,CAAQ;AAC7B,UAAA,UAAU,IAAIA,CAAQ,YAAYE,EAAe,KAAK,KAAK,CAAC,EAAE;AAClE,MAAA,CAACC,EAAe,SAASF,CAAK;AAC1B,UAAA,UAAU,IAAIA,CAAK,YAAYE,EAAe,KAAK,KAAK,CAAC,EAAE;AACrE;;AAEA,MAAMC,KAA4BR;AAAA,GAChCS,KAAAC,IAAAX,KAAA,gBAAAA,EAAsB,qBAAtB,gBAAAW,EAAwC,QAAxC,gBAAAD,EAA6C;AAC/C;;AAEO,MAAME,IAAmC;AAAA,EAC9C,cAAc;AAAA,EACd,gBAAgB;AAAA,EAChB,gBAAgB;AAAA,EAChB,YAAY,CAAC;AAAA,EACb,eAAeZ;AAAA,EACf,gBAAgB,CAAC;AAAA,EACjB,SAAS,CAAC;AAAA,EACV,qBAAqBS,GAA0B;AAAA,EAC/C,iBAAiB;AAAA,EACjB,oBAAmBE,IAAAX,KAAA,gBAAAA,EAAsB,qBAAtB,gBAAAW,EAAwC;AAAA,EAC3D,qBAAoBD,IAAAV,KAAA,gBAAAA,EAAsB,UAAtB,gBAAAU,EAA6B;AAAA,EACjD,UAAU;AAAA,EACV,iBAAiB;AAAA,EACjB,OAAO,IAAIG,EAAM;AAAA,EACjB,oBAAoB,IAAIA,EAAM;AAAA,EAC9B,qBAAqB;AAAA,EACrB,UAAUC,EAAO;AAAA,EACjB,wBAAwB,CAAC;AAC3B,GAEMC,KACJ1B,EAAM,cAAkCuB,CAAY,GAChDI,KACJ3B,EAAM,cAAkCuB,CAAY;AA4HtD,SAASK,IAAiB;AAClB,QAAAC,IAAU7B,EAAM,WAAW0B,EAAkB;AACnD,MAAIG,MAAY;AACR,UAAA,IAAI,MAAM,qDAAqD;AAEhE,SAAAA;AACT;AAEA,SAASC,IAAoB;AACrB,QAAAD,IAAU7B,EAAM,WAAW2B,EAAqB;AACtD,MAAIE,MAAY;AACR,UAAA,IAAI,MAAM,wDAAwD;AAEnE,SAAAA;AACT;ACtYA,MAAME,KAAS,MAEX,gBAAA/B,EAAA;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,eAAc;AAAA,IACd,kBAAiB;AAAA,IACjB,aAAY;AAAA,IACZ,GAAE;AAAA,EAAA;AAAA,GAKFgC,KAAU,MAEZ,gBAAAhC,EAAA;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,eAAc;AAAA,IACd,kBAAiB;AAAA,IACjB,aAAY;AAAA,IACZ,GAAE;AAAA,EAAA;AAAA,GAKFiC,KAAiB,MAEnB,gBAAAjC,EAAA;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,MAAK;AAAA,IACL,QAAO;AAAA,IACP,eAAc;AAAA,IACd,gBAAe;AAAA,IACf,aAAY;AAAA,IACZ,GAAE;AAAA,EAAA;AAAA,GAKFkC,KAAQ,MAEV,gBAAAlC,EAAA,cAAC,QAAK,EAAA,GAAE,6QAA6Q,CAAA,GAInRmC,IAAS,MAGT,gBAAAnC,EAAA,cAAAA,EAAA,UAAA,MAAA,gBAAAA,EAAA;AAAA,EAAC;AAAA,EAAA;AAAA,IACC,MAAK;AAAA,IACL,eAAc;AAAA,IACd,kBAAiB;AAAA,IACjB,aAAY;AAAA,IACZ,GAAE;AAAA,EAAA;AAAA,GAEJ,gBAAAA,EAAA,cAAC,QAAK,EAAA,GAAE,oHAAoH,CAAA,CAC9H,GAIEoC,KAAW,CAAC;AAAA,EAChB,6BAAAC;AAAA,EACA,QAAAC;AACF,MAGM;AACJ,QAAMC,IAAkCX,KAClC;AAAA,IACJ,cAAAY;AAAA,IACA,eAAAC;AAAA,IACA,qBAAAC;AAAA,IACA,SAAAC;AAAA,IACA,OAAAC;AAAA,IACA,gBAAAC;AAAA,EACE,IAAAN,GAEEO,IAA2BF,EAAM,IAAI;AAAA,IACzC,IAAIJ;AAAA,IACJ,MAAM;AAAA,EAAA,CACP;AAED,WAASO,IAAgB;AAChB,WAAAJ,EACJ,OAAO,CAACK;;AAAW,cAAA1B,IAAA0B,EAAO,gBAAP,gBAAA1B,EAAoB;AAAA,KAAI,EAC3C,IAAI,CAAC0B,GAAQC,MAAM;;AACZ,YAAAC,KAAkB7B,KAAAC,IAAA0B,EAAO,gBAAP,gBAAA1B,EAAoB,SAApB,gBAAAD,EACpB;AAEF,aAAA,gBAAArB,EAAA;AAAA,QAACkD;AAAA,QAAA;AAAA,UACC,KAAKD;AAAA,UACJ,IAAGE,KAAAC,IAAAJ,KAAA,gBAAAA,EAAQ,gBAAR,gBAAAI,EAAqB,SAArB,gBAAAD,EAA2B;AAAA,UAC/B,gBAAAN;AAAA,UACA,QAAAC;AAAA,UACA,qBAAqBL;AAAA,UACrB,qBAAAC;AAAA,UACA,mBAAAZ;AAAA,UACA,gBAAAF;AAAA,QAAA;AAAA,MAAA;AAAA,IACD,CAEJ;AAAA,EACL;AAGE,SAAA,gBAAA5B,EAAA;AAAA,IAACG;AAAA,IAAA;AAAA,MACC,eAAY;AAAA,MACZ,gBAAgBkC;AAAA,IAAA;AAAA,IAEfC,EAAO,mBACN,gBAAAtC,EAAA,cAAAA,EAAA,UAAA,MACG,gBAAAA,EAAA,cAAAK,GAAA,EAAO,IAAIiC,EAAO,cAAwB,OAAM,UAAA,GAC9C,gBAAAtC,EAAA,cAAA+B,IAAA,IAAO,CACV,GACA,gBAAA/B,EAAA,cAACK,GAAO,EAAA,IAAIiC,EAAO,eAAyB,OAAM,cAChD,gBAAAtC,EAAA,cAACgC,IAAQ,IAAA,CACX,CACF;AAAA,IAEDM,EAAO,uBACN,gBAAAtC,EAAA,cAACK,GAAO,EAAA,IAAIiC,EAAO,gBAA0B,OAAM,YAAA,GAChD,gBAAAtC,EAAA,cAAAiC,IAAA,IAAe,CAClB;AAAA,IAEDK,EAAO,uBACN,gBAAAtC,EAAA,cAAAA,EAAA,UAAA,MACG,gBAAAA,EAAA,cAAAK,GAAA,EAAO,IAAIiC,EAAO,mBAA6B,OAAM,eAAA,GACnD,gBAAAtC,EAAA,cAAAmC,GAAA,IAAO,CACV,GACA,gBAAAnC,EAAA,cAACK,GAAO,EAAA,IAAIiC,EAAO,kBAA4B,OAAM,iBACnD,gBAAAtC,EAAA,cAACmC,GAAO,IAAA,CACV,CACF;AAAA,IAEDG,EAAO,mBACN,gBAAAtC,EAAA,cAACK,GAAO,EAAA,IAAIiC,EAAO,YAAsB,OAAM,QAAA,GAC5C,gBAAAtC,EAAA,cAAAkC,IAAA,IAAM,CACT;AAAA,IAEDa,EAAc;AAAA,EAAA;AAGrB,GC9HMM,KAA0B,CAAC;AAAA,EAC/B,WAAAC;AAAA,EACA,QAAAhB;AAAA,EACA,KAAAxD;AAAA,EACA,6BAAAuD;AAAA,EACA,WAAAtD;AAAA,EACA,uBAAAwE;AACF,MAAM;AACJ,QAAM,CAACC,GAAQC,CAAS,IAAIC,EAAiB,GACvC,CAACC,GAAeC,CAAgB,IAAIF,EAA+B,GACnEG,IAAgB/B,KAEhBgC,IAAgBC,EAAO,EAAK;AAElC,SAAAC,EAAU,OACHF,EAAc,YACjBA,EAAc,UAAU,IAEnBH,KAAgCC,EAAAzG,EAAcmF,CAAM,CAAC,IAGrD,MAAMqB,KAAA,gBAAAA,EAAe,YAC3B,CAAE,CAAA,GAELK,EAAU,MAAM;AACd,IAAIL,KAAiBJ,KACnBA,EAAsBI,CAAa;AAAA,EAAA,GACpC,CAACA,GAAeJ,CAAqB,CAAC,GAEzCS,EAAU,MAAM;AACV,IAAAL,KAAiB7E,MAAQ0E,MAC3BG,KAAA,QAAAA,EAAe,eACfF,EAAU3E,CAAG;AAAA,EAEd,GAAA,CAAC6E,GAAeH,GAAQ1E,CAAG,CAAC,GAE/BkF,EAAU,MAAM;AACd,QAAIR,KAAUG;AACZ,cAAQ5E,GAAW;AAAA,QACjB,KAAK;AACH,UAAA4E,KAAA,QAAAA,EAAe,eAAe;AAAA,YAC5B,KAAKH;AAAA,UAAA;AAEP;AAAA,QACF,KAAK;AACH,UAAAvF,EAAgBuF,CAAM,EAAE,KAAK,CAACS,MAAe;AACvC,gBAAA;AACF,kBAAI,CAACA;AACH,sBAAM,IAAI,MAAM,4BAA4BT,CAAM,EAAE;AAEtD,cAAAG,KAAA,QAAAA,EAAe,cAAc;AAAA,gBAC3B,YAAAM;AAAA,gBACA,SAAS,MAAM;AAIT,kBAAA,OAAOJ,KAAa,cACbA,EAAA;AAAA,oBACP,MAAM;AAAA,oBACN,gBAAgB;AAAA,kBAAA,CACjB;AAAA,gBAEL;AAAA,cAAA;AAAA,qBAEKK,GAAG;AACV,sBAAQ,MAAMA,CAAC;AAAA,YACjB;AAAA,UAAA,CACD;AACD;AAAA,QACF;AACE,UAAAP,KAAA,QAAAA,EAAe,SACP,QAAA;AAAA,YACN,oBAAoBH,CAAM,+BAA+BzE,CAAS;AAAA,UAAA;AAEpE;AAAA,MACJ;AAAA,EACF,GACC,CAACA,GAAWyE,CAAM,CAAC,GAGpB,gBAAAxD,EAAA;AAAA,IAACG;AAAAA,IAAA;AAAA,MACC,WAAU;AAAA,MACV,eAAY;AAAA,MACZ,+BAA6BmC,EAAO;AAAA,MACpC,cAAcA,EAAO;AAAA,IAAA;AAAA,IAErB,gBAAAtC,EAAA;AAAA,MAACoC;AAAA,MAAA;AAAA,QACC,6BAAAC;AAAA,QACA,QAAAC;AAAA,MAAA;AAAA,IACF;AAAA,IACCA,EAAO,iBACN,gBAAAtC,EAAA;AAAA,MAACC;AAAA,MAAA;AAAA,QACC,IAAIqC,EAAO;AAAA,QACX,eAAY;AAAA,MAAA;AAAA,IACd;AAAA,IAEF,gBAAAtC,EAAA;AAAA,MAACE;AAAA,MAAA;AAAA,QACC,IAAIoC,EAAO;AAAA,QACX,eAAY;AAAA,QACZ,MAAK;AAAA,QACJ,GAAIgB,KAAa,EAAE,cAAcA,EAAU;AAAA,MAAA;AAAA,IAC9C;AAAA,EAAA;AAGN;AC5HA,SAASa,GACPC,GACS;AACF,SAAA;AAAA,IACL,IAAI,iBAAiBA,CAAqB;AAAA,IAC1C,aAAa,2BAA2BA,CAAqB;AAAA,IAC7D,mBAAmB;AAAA,IACnB,gBAAgB,YAAYA,CAAqB;AAAA,IACjD,YAAY,SAASA,CAAqB;AAAA,IAC1C,kBAAkB,cAAcA,CAAqB;AAAA,IACrD,mBAAmB,eAAeA,CAAqB;AAAA,IACvD,cAAc,UAAUA,CAAqB;AAAA,IAC7C,eAAe,WAAWA,CAAqB;AAAA,IAC/C,eAAe;AAAA,IACf,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,IACjB,sBAAsB;AAAA,IACtB,sBAAsB;AAAA,MACpB,aAAa;AAAA,MACb,gBAAgB;AAAA,MAChB,aAAa;AAAA,MACb,cAAc;AAAA,IAChB;AAAA,EAAA;AAEJ;AC1BO,MAAMC,KAAkB,CAC7B9D,GACA+D,IAAe,WACZ;AAIH,MAAI,CAAC/D;AAAc,WAAA;AAKnB,MAAI,OAAOA,KAAU;AAAU,WAAO,CAACA,CAAK;AAMxC,MAAA,CAACA,EAAM+D,CAAI,GAAG;AACV,UAAAC,IAAuB,OAAO,oBAAoBhE,CAAK;AAC7D,QAAIgE,EAAM,SAAS;AAAU,aAAAhE,EAAMgE,EAAM,CAAC,CAAC;AAAA,EAC7C;AAMA,SADI,CAAChE,EAAM+D,CAAI,KACX,CAAC,MAAM,QAAQ/D,EAAM+D,CAAI,CAAC,IAAU,OAEjC/D,EAAM+D,CAAI;AACnB,GAEaE,KAAmB,CAC9BjE,GACA+D,IAAe,QACfG,IAAoB,SACjB;AACG,QAAAC,IAAUL,GAAgB9D,GAAO+D,CAAI;AACpC,SAAA,MAAM,QAAQI,CAAO,IAAIA,EAAQ,KAAK,GAAGD,CAAS,EAAE,IAAIC;AACjE,GCjBMC,KAA0C,CAAC;AAAA,EAC/C,6BAAAtC,IAA8B;AAAA,EAC9B,MAAAzD;AAAA,EACA,YAAAgG;AAAA,EACA,cAAA1F,IAAe;AAAA,EACf,OAAAqB;AAAA,EACA,KAAAtB,IAAM;AAAA,EACN,uBAAAsE;AAAA,EACA,qBAAAsB,IAAsB,CAAC;AACzB,MAAM;AACE,QAAAC,IAAWF,KAA0BnD,EAAO,GAC5C6B,IAAY,OAAO/C,KAAU,WAAWA,IAAQiE,GAAiBjE,CAAK,GACtE+B,IAAS;AAAA,IACb,GAAGyC,GAA2BD,CAAQ;AAAA,IACtC,GAAGD;AAAA,EAAA,GAGC,EAAE,WAAA9F,GAAW,KAAAD,EAAQ,IAAAF,IACvBD,EAAeC,CAAI,IACnBI,EAASC,GAAKC,CAAY;AAE9B,SAAKJ,IAGH,gBAAAkB,EAAA,cAACgF,GAAc,EAAA,mBAAmBlF,EAChC,GAAA,gBAAAE,EAAA;AAAA,IAACqD;AAAA,IAAA;AAAA,MACC,6BAAAhB;AAAA,MACA,WAAAiB;AAAA,MACA,QAAAhB;AAAA,MACA,WAAAvD;AAAA,MACA,KAAK+F;AAAA,MACL,KAAAhG;AAAA,MACA,uBAAAyE;AAAA,IAAA;AAAA,EAAA,CAEJ,IAbe;AAenB;"}