{"version":3,"file":"index.mjs","sources":["../../src/context/scroll-context.tsx","../../src/lib/label-helpers.ts","../../src/lib/html-element.ts","../../src/styles/stitches.config.tsx","../../src/components/Primitives/Label/Label.tsx","../../src/components/Primitives/ContentResource/ContentResource.tsx","../../src/components/Primitives/Homepage/Homepage.tsx","../../src/context/primitives-context.tsx","../../src/components/Primitives/Markup/Markup.tsx","../../src/components/Primitives/Value/CustomValue.tsx","../../src/components/Primitives/Metadata/Metadata.tsx","../../src/components/Primitives/PartOf/PartOf.tsx","../../src/components/Primitives/Rendering/Rendering.tsx","../../src/components/Primitives/RequiredStatement/RequiredStatement.tsx","../../src/components/Primitives/SeeAlso/SeeAlso.tsx","../../src/components/Primitives/Summary/Summary.tsx","../../src/components/Scroll/Layout/Layout.styled.tsx","../../src/components/Scroll/Layout/Header.tsx","../../src/components/Scroll/Items/Items.styled.tsx","../../src/components/Scroll/Figure/Caption.tsx","../../src/lib/openseadragon-svg.ts","../../src/lib/iiif.ts","../../src/types/open-seadragon.ts","../../src/lib/openseadragon-helpers.ts","../../src/components/UI/ErrorFallback/ErrorFallback.styled.tsx","../../src/components/UI/ErrorFallback/ErrorFallback.tsx","../../src/components/Image/Image.styled.tsx","../../src/components/Image/Controls/Button.styled.tsx","../../src/components/Image/Controls/Button.tsx","../../src/components/Image/Controls/Controls.styled.tsx","../../src/context/viewer-context.tsx","../../src/components/Image/Controls/Controls.tsx","../../src/components/Image/OSD/OSD.tsx","../../src/components/Image/OSD/defaults.ts","../../src/components/Image/index.tsx","../../src/components/Scroll/Figure/ImageViewer.styled.tsx","../../src/components/Scroll/Figure/ImageViewer.tsx","../../src/components/Scroll/Figure/Figure.styled.tsx","../../src/hooks/use-iiif/getCanvasByCriteria.ts","../../src/hooks/use-iiif/getPaintingResource.ts","../../src/components/Scroll/Figure/Figure.tsx","../../src/components/Scroll/Annotation/Body.styled.tsx","../../src/lib/search-helpers.ts","../../src/components/Scroll/Annotation/Body.tsx","../../src/components/Scroll/Items/Item.tsx","../../src/components/Scroll/Panel/Search/Search.styled.tsx","../../src/components/Scroll/Panel/Search/Results.tsx","../../src/components/Scroll/Panel/Search/Search.tsx","../../src/components/Scroll/Panel/Search/Form.tsx","../../src/components/Scroll/Panel/Panel.styled.tsx","../../src/hooks/useDistanceFromViewportTop.ts","../../src/components/Scroll/Panel/Panel.tsx","../../src/components/Scroll/Items/Items.tsx","../../src/hooks/useManifestAnnotations.ts","../../src/components/Scroll/index.tsx"],"sourcesContent":["import { AnnotationNormalized, ManifestNormalized } from \"@iiif/presentation-3\";\nimport React, { Dispatch, createContext, useReducer } from \"react\";\n\nimport { Vault } from \"@iiif/vault\";\nimport { Vault as VaultShape } from \"@iiif/vault/dist/index\";\n\ninterface StateType {\n  annotations?: AnnotationNormalized[];\n  manifest?: ManifestNormalized;\n  searchString?: string;\n  options: {\n    offset: number;\n  };\n  vault?: VaultShape;\n}\n\ninterface ActionType {\n  payload?: any;\n  type: string;\n}\n\nconst initialState: StateType = {\n  annotations: [],\n  manifest: undefined,\n  searchString: undefined,\n  options: {\n    offset: 0,\n  },\n  vault: new Vault(),\n};\n\nfunction reducer(state: StateType, action: ActionType): StateType {\n  switch (action.type) {\n    case \"updateAnnotations\":\n      return {\n        ...state,\n        annotations: action.payload,\n      };\n    case \"updateSearchString\":\n      return {\n        ...state,\n        searchString: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const ScrollContext = createContext<{\n  dispatch: Dispatch<ActionType>;\n  state: StateType;\n}>({\n  dispatch: () => null,\n  state: initialState,\n});\n\ninterface ScrollProviderProps {\n  annotations?: AnnotationNormalized[];\n  children: React.ReactNode;\n  manifest?: ManifestNormalized;\n  options?: {\n    offset?: number;\n  };\n  vault?: VaultShape;\n}\n\nexport const ScrollProvider: React.FC<ScrollProviderProps> = (props) => {\n  const { children, manifest } = props;\n  const options = {\n    ...initialState.options,\n    ...props.options,\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <ScrollContext.Provider\n      value={{\n        state: { ...state, manifest, options },\n        dispatch,\n      }}\n    >\n      {children}\n    </ScrollContext.Provider>\n  );\n};\n","import { InternationalString } from \"@iiif/presentation-3\";\n\nexport const getLabelEntries = (\n  label?: InternationalString,\n  lang: string = \"none\",\n) => {\n  /*\n   * If no label exists, return an empty string.\n   */\n  if (!label) return null;\n\n  /*\n   * If label is not a IIIF Presentation API 3.0 shape, return the string\n   */\n  if (typeof label === \"string\") return [label];\n\n  /*\n   * If InternationalString code does not exist on label, then\n   * return what may be there, ex: label.none[0] OR label.fr[0]\n   */\n  if (!label[lang]) {\n    const codes: Array<string> = Object.getOwnPropertyNames(label);\n    if (codes.length > 0) return label[codes[0]];\n  }\n\n  /*\n   * Return label value for InternationalString code `en`\n   */\n  if (!label[lang]) return null;\n  if (!Array.isArray(label[lang])) return null;\n\n  return label[lang] as string[];\n};\n\nexport const getLabelAsString = (\n  label: InternationalString | undefined,\n  lang: string = \"none\",\n  delimiter: string = \", \",\n) => {\n  const entries = getLabelEntries(label, lang);\n  return Array.isArray(entries) ? entries.join(`${delimiter}`) : entries;\n};\n","import sanitizeHtml from \"sanitize-html\";\n\nfunction createMarkup(html: string) {\n  return { __html: sanitizeHTML(html) };\n}\n\nfunction sanitizeAttributes(props: any, remove: string[]) {\n  const entries = Object.keys(props).filter((key) =>\n    !remove.includes(key) ? key : null,\n  );\n\n  const attributes = new Object();\n  entries.forEach((key) => {\n    attributes[key] = props[key];\n  });\n\n  return attributes as React.HTMLAttributes<HTMLElement>;\n}\n\nfunction sanitizeHTML(html: string) {\n  return sanitizeHtml(html, {\n    allowedAttributes: {\n      a: [\"href\"],\n      img: [\"alt\", \"src\", \"height\", \"width\"],\n    },\n    allowedSchemes: [\"http\", \"https\", \"mailto\"],\n    allowedTags: [\n      \"a\",\n      \"b\",\n      \"br\",\n      \"i\",\n      \"img\",\n      \"p\",\n      \"small\",\n      \"span\",\n      \"sub\",\n      \"sup\",\n    ],\n  });\n}\n\nexport { createMarkup, sanitizeAttributes, sanitizeHTML };\n","import { createStitches } from \"@stitches/react\";\n\nconst hue = 209;\n\nexport const theme = {\n  colors: {\n    /*\n     * Black and dark grays in a light theme.\n     * Must contrast to 4.5 or greater with `secondary`.\n     */\n    primary: \"#1a1d1e\",\n    primaryMuted: \"#26292b\",\n    primaryAlt: \"#151718\",\n\n    /*\n     * Key brand color(s).\n     * Must contrast to 4.5 or greater with `secondary`.\n     */\n    accent: `hsl(${hue} 100% 38.2%)`,\n    accentMuted: `hsl(${hue} 80% 61.8%)`,\n    accentAlt: `hsl(${hue} 80% 30%)`,\n\n    /*\n     * White and light grays in a light theme.\n     * Must contrast to 4.5 or greater with `primary` and  `accent`.\n     */\n    secondary: \"#FFFFFF\",\n    secondaryMuted: \"#e6e8eb\",\n    secondaryAlt: \"#c1c8cd\",\n  },\n  fontSizes: {\n    1: \"12px\",\n    2: \"13px\",\n    3: \"15px\",\n    4: \"17px\",\n    5: \"19px\",\n    6: \"21px\",\n    7: \"27px\",\n    8: \"35px\",\n    9: \"59px\",\n  },\n  lineHeights: {\n    1: \"12px\",\n    2: \"13px\",\n    3: \"15px\",\n    4: \"17px\",\n    5: \"19px\",\n    6: \"21px\",\n    7: \"27px\",\n    8: \"35px\",\n    9: \"59px\",\n  },\n  sizes: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n    4: \"20px\",\n    5: \"25px\",\n    6: \"35px\",\n    7: \"45px\",\n    8: \"65px\",\n    9: \"80px\",\n  },\n  space: {\n    1: \"5px\",\n    2: \"10px\",\n    3: \"15px\",\n    4: \"20px\",\n    5: \"25px\",\n    6: \"35px\",\n    7: \"45px\",\n    8: \"65px\",\n    9: \"80px\",\n  },\n  radii: {\n    1: \"4px\",\n    2: \"6px\",\n    3: \"8px\",\n    4: \"12px\",\n    round: \"50%\",\n    pill: \"9999px\",\n  },\n  transitions: {\n    all: \"all 300ms cubic-bezier(0.16, 1, 0.3, 1)\",\n  },\n  zIndices: {\n    1: \"100\",\n    2: \"200\",\n    3: \"300\",\n    4: \"400\",\n    max: \"999\",\n  },\n};\n\nexport const media = {\n  xxs: \"(max-width: 349px)\",\n  xs: \"(max-width: 575px)\",\n  sm: \"(max-width: 767px)\",\n  md: \"(max-width: 991px)\",\n  lg: \"(max-width: 90rem)\",\n  xl: \"(min-width: calc(90rem + 1px))\",\n};\n\nexport type { CSS, VariantProps } from \"@stitches/react\";\n\nexport const { styled, css, keyframes, createTheme } = createStitches({\n  theme,\n  media,\n});\n","import { PrimitivesLabel } from \"src/types/primitives\";\nimport React from \"react\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledLabel = styled(\"span\", {});\n\nconst Label: React.FC<PrimitivesLabel> = (props) => {\n  const { as, label } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"label\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledLabel as={as} {...attributes}>\n      {getLabelAsString(label, attributes.lang as string) as string}\n    </StyledLabel>\n  );\n};\n\nexport default Label;\n","import React, { useCallback, useEffect, useRef } from \"react\";\n\nimport Hls from \"hls.js\";\nimport { PrimitivesContentResource } from \"src/types/primitives\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { useGetImageResource } from \"src/hooks/useGetImageResource\";\n\nconst StyledResource = styled(\"img\", { objectFit: \"cover\" });\n\nconst ContentResource: React.FC<PrimitivesContentResource> = (props) => {\n  const mediaRef = useRef(null);\n  const { contentResource, altAsLabel, region = \"full\" } = props;\n\n  let alt: string | undefined;\n  if (altAsLabel) alt = getLabelAsString(altAsLabel) as string;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"contentResource\", \"altAsLabel\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  const { type, id, width = 200, height = 200, duration } = contentResource;\n\n  useEffect(() => {\n    /**\n     * Check that IIIF content resource ID exists and\n     * we have a reffed <video> for attaching HLS\n     */\n    if (!id && !mediaRef.current) return;\n    if ([\"Image\"].includes(type)) return;\n\n    /**\n     * Eject HLS attachment if file extension from\n     * the IIIF content resource ID is not .m3u8\n     */\n    if (!id.includes(\"m3u8\")) return;\n\n    // Bind hls.js package to our <video /> element and then load the media source\n    const hls = new Hls();\n\n    if (mediaRef.current) {\n      hls.attachMedia(mediaRef.current);\n      hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n        hls.loadSource(id as string);\n      });\n    }\n\n    // Handle errors\n    hls.on(Hls.Events.ERROR, function (event, data) {\n      if (data.fatal) {\n        switch (data.type) {\n          case Hls.ErrorTypes.NETWORK_ERROR:\n            // try to recover network error\n            console.error(\n              `fatal ${event} network error encountered, try to recover`,\n            );\n            hls.startLoad();\n            break;\n          case Hls.ErrorTypes.MEDIA_ERROR:\n            console.error(\n              `fatal ${event} media error encountered, try to recover`,\n            );\n            hls.recoverMediaError();\n            break;\n          default:\n            // cannot recover\n            hls.destroy();\n            break;\n        }\n      }\n    });\n\n    return () => {\n      if (hls) {\n        hls.detachMedia();\n        hls.destroy();\n      }\n    };\n  }, [id, type]);\n\n  const playLoop = useCallback(() => {\n    if (!mediaRef.current) return;\n\n    let startTime = 0;\n    let loopTime = 30;\n\n    if (duration) loopTime = duration;\n    if (!id.split(\"#t=\") && duration) startTime = duration * 0.1;\n\n    if (id.split(\"#t=\").pop()) {\n      const fragment = id.split(\"#t=\").pop();\n      if (fragment) startTime = parseInt(fragment.split(\",\")[0]);\n    }\n\n    const media: HTMLVideoElement = mediaRef.current;\n    media.autoplay = true;\n    media.currentTime = startTime;\n\n    setTimeout(() => playLoop(), loopTime * 1000);\n  }, [duration, id]);\n\n  useEffect(() => playLoop(), [playLoop]);\n\n  const imgSrc = useGetImageResource(\n    contentResource,\n    `${width},${height}`,\n    region,\n  );\n\n  switch (type) {\n    case \"Image\":\n      return (\n        <StyledResource\n          as=\"img\"\n          alt={alt}\n          css={{ width: width, height: height }}\n          key={id}\n          src={imgSrc}\n          {...attributes}\n        />\n      );\n\n    case \"Video\":\n      return (\n        <StyledResource\n          as=\"video\"\n          css={{ width: width, height: height }}\n          disablePictureInPicture\n          key={id}\n          loop\n          muted\n          onPause={playLoop}\n          ref={mediaRef}\n          src={id}\n        />\n      );\n\n    default:\n      console.warn(\n        `Resource type: ${type} is not valid or not yet supported in Primitives.`,\n      );\n      return <></>;\n  }\n};\n\nexport default ContentResource;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesHomepage } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledHomepage = styled(\"a\", {});\n\nconst Homepage: React.FC<PrimitivesHomepage> = (props) => {\n  const { children, homepage } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"children\", \"homepage\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <>\n      {homepage &&\n        homepage.map((resource) => {\n          const label = getLabelAsString(\n            resource.label,\n            attributes.lang,\n          ) as string;\n          return (\n            <StyledHomepage\n              aria-label={children ? label : undefined}\n              href={resource.id}\n              key={resource.id}\n              {...attributes}\n            >\n              {children ? children : label}\n            </StyledHomepage>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Homepage;\n","import { createContext, useContext } from \"react\";\n\nimport React from \"react\";\n\ntype PrimitivesContextStore =\n  | {\n      delimiter: string; // Separator for multi-value items\n    }\n  | undefined;\ninterface ProviderProps {\n  children: React.ReactNode;\n  initialState?: PrimitivesContextStore;\n}\n\nconst defaultState = {\n  delimiter: \", \",\n};\n\nconst PrimitivesContext = createContext<PrimitivesContextStore>(undefined);\n\nconst usePrimitivesContext = () => {\n  const context = useContext(PrimitivesContext);\n  if (context === undefined) {\n    throw new Error(\n      \"usePrimitivesContext must be used with a PrimitivesProvider\",\n    );\n  }\n  return context;\n};\n\nconst PrimitivesProvider: React.FC<ProviderProps> = ({\n  children,\n  initialState = defaultState,\n}) => {\n  const delimiter = getRealPropertyValue(initialState, \"delimiter\");\n\n  return (\n    <PrimitivesContext.Provider value={{ delimiter }}>\n      {children}\n    </PrimitivesContext.Provider>\n  );\n};\n\nconst getRealPropertyValue = (\n  obj: { [key: string]: any },\n  property: string,\n) => {\n  const value = Object.hasOwn(obj, property)\n    ? obj[property].toString()\n    : undefined;\n  return value;\n};\n\nexport {\n  PrimitivesContext,\n  PrimitivesProvider,\n  getRealPropertyValue,\n  usePrimitivesContext,\n};\n","import {\n  PrimitivesContext,\n  PrimitivesProvider,\n  usePrimitivesContext,\n} from \"src/context/primitives-context\";\nimport { createMarkup, sanitizeAttributes } from \"src/lib/html-element\";\n\nimport { PrimitivesMarkup } from \"src/types/primitives\";\nimport React from \"react\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledMarkup = styled(\"span\", {});\n\nconst Markup: React.FC<PrimitivesMarkup> = (props) => {\n  const { as, markup } = props;\n  const { delimiter } = usePrimitivesContext();\n\n  if (!markup) return <></>;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"markup\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  const html = createMarkup(\n    getLabelAsString(markup, attributes.lang as string, delimiter) as string,\n  );\n\n  return (\n    <StyledMarkup as={as} {...attributes} dangerouslySetInnerHTML={html} />\n  );\n};\n\nconst MarkupWrapper: React.FC<PrimitivesMarkup> = (props) => {\n  const context = React.useContext(PrimitivesContext);\n\n  return context ? (\n    <Markup {...props} />\n  ) : (\n    <PrimitivesProvider>\n      <Markup {...props} />\n    </PrimitivesProvider>\n  );\n};\n\nexport default MarkupWrapper;\n","import React, { Fragment, cloneElement } from \"react\";\n\nimport { PrimitivesCustomValue } from \"src/types/primitives\";\nimport { getLabelEntries } from \"src/lib/label-helpers\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { usePrimitivesContext } from \"src/context/primitives-context\";\n\nconst StyledCustomValue = styled(\"span\", {});\n\nconst CustomValue: React.FC<PrimitivesCustomValue> = ({\n  as = \"dd\",\n  customValueContent,\n  lang,\n  value,\n}) => {\n  const { delimiter } = usePrimitivesContext();\n\n  const entries = getLabelEntries(value, lang)?.map((entry) => {\n    return cloneElement(customValueContent, {\n      value: entry,\n    });\n  });\n\n  return (\n    <StyledCustomValue as={as} lang={lang}>\n      {entries?.map((entry, index) => [\n        index > 0 && `${delimiter}`,\n        <Fragment key={index}>{entry}</Fragment>,\n      ])}\n    </StyledCustomValue>\n  );\n};\n\nexport default CustomValue;\n","import MetadataItem from \"src/components/Primitives/Metadata/Item\";\nimport { PrimitivesMetadata } from \"src/types/primitives\";\nimport { PrimitivesProvider } from \"src/context/primitives-context\";\nimport React from \"react\";\nimport { getRealPropertyValue } from \"src/lib/utils\";\nimport { parseCustomContent } from \"src/lib/custom\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledMetadata = styled(\"dl\", {});\n\nconst Metadata: React.FC<PrimitivesMetadata> = (props) => {\n  const { as, customValueContent, metadata } = props;\n\n  if (!Array.isArray(metadata)) return <></>;\n\n  const delimiter = getRealPropertyValue(props, \"customValueDelimiter\");\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\n    \"as\",\n    \"customValueContent\",\n    \"customValueDelimiter\",\n    \"metadata\",\n  ];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <PrimitivesProvider\n      {...(typeof delimiter === \"string\"\n        ? { initialState: { delimiter: delimiter as string } }\n        : undefined)}\n    >\n      {metadata.length > 0 && (\n        <StyledMetadata as={as} {...attributes}>\n          {metadata.map((item, index) => {\n            const customValue = customValueContent\n              ? parseCustomContent(item.label, customValueContent)\n              : undefined;\n\n            return (\n              <MetadataItem\n                customValueContent={customValue}\n                item={item}\n                key={index}\n                lang={attributes?.lang}\n              />\n            );\n          })}\n        </StyledMetadata>\n      )}\n    </PrimitivesProvider>\n  );\n};\n\nexport default Metadata;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesPartOf } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledPartOf = styled(\"li\", {});\nconst StyledWrapper = styled(\"ul\", {});\n\nconst PartOf: React.FC<PrimitivesPartOf> = (props) => {\n  const { as, partOf } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"partOf\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledWrapper as={as}>\n      {partOf &&\n        partOf.map((resource) => {\n          const label = resource.label\n            ? (getLabelAsString(resource.label, attributes.lang) as string)\n            : undefined;\n          return (\n            <StyledPartOf key={resource.id}>\n              <a href={resource.id} {...attributes}>\n                {label ? label : resource.id}\n              </a>\n            </StyledPartOf>\n          );\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default PartOf;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesRendering } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledRendering = styled(\"li\", {});\nconst StyledWrapper = styled(\"ul\", {});\n\nconst Rendering: React.FC<PrimitivesRendering> = (props) => {\n  const { as, rendering } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"rendering\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledWrapper as={as}>\n      {rendering &&\n        rendering.map((resource) => {\n          const label = getLabelAsString(\n            resource.label,\n            attributes.lang,\n          ) as string;\n          return (\n            <StyledRendering key={resource.id}>\n              <a href={resource.id} {...attributes} target=\"_blank\">\n                {label ? label : resource.id}\n              </a>\n            </StyledRendering>\n          );\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default Rendering;\n","import MetadataItem from \"src/components/Primitives/Metadata/Item\";\nimport { PrimitivesProvider } from \"src/context/primitives-context\";\nimport { PrimitivesRequiredStatement } from \"src/types/primitives\";\nimport React from \"react\";\nimport { getRealPropertyValue } from \"src/lib/utils\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\nimport { styled } from \"src/styles/stitches.config\";\n\nconst StyledRequiredStatement = styled(\"dl\", {});\n\nconst RequiredStatement: React.FC<PrimitivesRequiredStatement> = (props) => {\n  const { as, requiredStatement } = props;\n\n  if (!requiredStatement) return <></>;\n\n  const delimiter = getRealPropertyValue(props, \"customValueDelimiter\");\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"customValueDelimiter\", \"requiredStatement\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <PrimitivesProvider\n      {...(typeof delimiter === \"string\"\n        ? { initialState: { delimiter: delimiter as string } }\n        : undefined)}\n    >\n      <StyledRequiredStatement as={as} {...attributes}>\n        <MetadataItem item={requiredStatement} lang={attributes.lang} />\n      </StyledRequiredStatement>\n    </PrimitivesProvider>\n  );\n};\n\nexport default RequiredStatement;\n","import React from \"react\";\nimport { styled } from \"src/styles/stitches.config\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { PrimitivesSeeAlso } from \"src/types/primitives\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst StyledSeeAlso = styled(\"li\", {});\nconst StyledWrapper = styled(\"ul\", {});\n\nconst SeeAlso: React.FC<PrimitivesSeeAlso> = (props) => {\n  const { as, seeAlso } = props;\n\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"seeAlso\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return (\n    <StyledWrapper as={as}>\n      {seeAlso &&\n        seeAlso.map((resource) => {\n          const label = getLabelAsString(\n            resource.label,\n            attributes.lang,\n          ) as string;\n          return (\n            <StyledSeeAlso key={resource.id}>\n              <a href={resource.id} {...attributes}>\n                {label ? label : resource.id}\n              </a>\n            </StyledSeeAlso>\n          );\n        })}\n    </StyledWrapper>\n  );\n};\n\nexport default SeeAlso;\n","import Markup from \"src/components/Primitives/Markup/Markup\";\nimport { PrimitivesSummary } from \"src/types/primitives\";\nimport React from \"react\";\nimport { sanitizeAttributes } from \"src/lib/html-element\";\n\nconst Summary: React.FC<PrimitivesSummary> = (props) => {\n  const { as, summary } = props;\n  /**\n   * Create attributes and remove React props\n   */\n  const remove = [\"as\", \"customValueDelimiter\", \"summary\"];\n  const attributes = sanitizeAttributes(props, remove);\n\n  return <Markup as={as} markup={summary} {...attributes} />;\n};\n\nexport default Summary;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst StyledScrollFixed = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"space-between\",\n});\n\nconst StyledScrollAside = styled(\"aside\", {\n  margin: \"0\",\n  padding: \"0\",\n  position: \"relative\",\n  zIndex: 2,\n  flexGrow: \"1\",\n  flexShrink: \"0\",\n\n  [`& ${StyledScrollFixed}`]: {\n    position: \"absolute\",\n    width: \"50%\",\n    top: 0,\n  },\n\n  \"&.anchor\": {\n    [`& ${StyledScrollFixed}`]: {\n      position: \"fixed\",\n      width: \"50%\",\n    },\n  },\n});\n\nconst StyledScrollHeader = styled(\"header\", {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  fontSize: \"1\",\n  flexGrow: \"1\",\n  flexShrink: \"0\",\n  marginBottom: \"1.618rem\",\n\n  strong: {\n    fontWeight: \"400\",\n    fontSize: \"1.33rem\",\n  },\n});\n\nconst StyledScrollWrapper = styled(\"section\", {\n  margin: \"0\",\n  gap: \"1rem\",\n});\n\nexport {\n  StyledScrollAside,\n  StyledScrollFixed,\n  StyledScrollHeader,\n  StyledScrollWrapper,\n};\n","import { InternationalString } from \"@iiif/presentation-3\";\nimport { Label } from \"src/components/Primitives\";\nimport React from \"react\";\nimport { StyledScrollHeader } from \"src/components/Scroll/Layout/Layout.styled\";\n\ninterface ScrollHeaderProps {\n  label: InternationalString;\n}\n\nconst ScrollHeader: React.FC<ScrollHeaderProps> = ({ label }) => {\n  return (\n    <StyledScrollHeader>\n      <strong>\n        <Label label={label} />\n      </strong>\n    </StyledScrollHeader>\n  );\n};\n\nexport default ScrollHeader;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst StyledItem = styled(\"article\", {\n  transition: \"all 0.382s ease-in-out\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"nowrap\",\n  gap: \"2.618rem\",\n});\n\nconst StyledItemFigure = styled(\"div\", {\n  transition: \"$all\",\n  width: \"50%\",\n  opacity: 0,\n  transform: \"translateX(2.618rem)\",\n  zIndex: -1,\n});\n\nconst StyledItemTextualBodies = styled(\"div\", {\n  width: \"50%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"flex-start\",\n});\n\nconst PageBreak = styled(\"hr\", {\n  margin: \"0\",\n  borderColor: \"transparent\",\n  height: \"1.618rem\",\n  position: \"relative\",\n  zIndex: 0,\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  marginTop: \"2.618rem\",\n\n  \"&::before\": {\n    content: \"attr(aria-label)\",\n    position: \"absolute\",\n    right: \"1.618rem\",\n    bottom: \"0\",\n    zIndex: 1,\n    display: \"flex\",\n    fontSize: \"0.7222rem\",\n    fontWeight: \"400\",\n    lineHeight: \"1rem\",\n    background: \"inherit\",\n    opacity: 0.7,\n  },\n\n  \"&::after\": {\n    content: \"\",\n    width: \"100%\",\n    position: \"absolute\",\n    zIndex: 0,\n    height: \"1px\",\n    background: \"#6662\",\n  },\n});\n\nconst StyledScrollItems = styled(\"div\", {\n  position: \"relative\",\n  zIndex: \"1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"2.618rem\",\n\n  \"&[data-figures-visible='true']\": {\n    [`& ${StyledItemFigure}`]: {\n      opacity: 1,\n      zIndex: 0,\n      transform: \"translateX(0)\",\n    },\n  },\n});\n\nexport {\n  StyledScrollItems,\n  StyledItem,\n  StyledItemFigure,\n  StyledItemTextualBodies,\n  PageBreak,\n};\n","import { Label, Summary } from \"src/components/Primitives\";\n\nimport { CanvasNormalized } from \"@iiif/presentation-3\";\nimport React from \"react\";\n\ninterface FigureCaptionProps {\n  canvas?: CanvasNormalized;\n  canvasInfo: {\n    current: number;\n    total: number;\n  };\n}\n\nconst FigureCaption: React.FC<FigureCaptionProps> = ({\n  canvas,\n  canvasInfo: { current, total },\n}) => {\n  return (\n    <figcaption>\n      <em>\n        {current} / {total}\n      </em>\n      {canvas?.label && <Label label={canvas?.label} />}\n      {canvas?.summary && <Summary summary={canvas?.summary} as=\"p\" />}\n    </figcaption>\n  );\n};\n\nexport default FigureCaption;\n","// OpenSeadragon SVG Overlay plugin 0.0.5\n// https://github.com/openseadragon/svg-overlay/issues/34#issuecomment-1147992921\nimport OpenSeadragon from \"openseadragon\";\n\nlet $ = window.OpenSeadragon;\n\nif (!$) {\n  $ = OpenSeadragon;\n  if (!$) {\n    throw new Error(\"OpenSeadragon is missing.\");\n  }\n}\n\nconst svgNS = \"http://www.w3.org/2000/svg\";\n\n// ----------\nif ($.Viewer) {\n  // @ts-expect-error: svgOverlay does not exist on Viewer\n  $.Viewer.prototype.svgOverlay = function () {\n    if (this._svgOverlayInfo) {\n      return this._svgOverlayInfo;\n    }\n\n    this._svgOverlayInfo = new Overlay(this);\n    return this._svgOverlayInfo;\n  };\n}\n// ----------\nconst Overlay = function (viewer) {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const self = this;\n\n  this._viewer = viewer;\n  this._containerWidth = 0;\n  this._containerHeight = 0;\n\n  this._svg = document.createElementNS(svgNS, \"svg\");\n  this._svg.style.position = \"absolute\";\n  this._svg.style.left = 0;\n  this._svg.style.top = 0;\n  this._svg.style.width = \"100%\";\n  this._svg.style.height = \"100%\";\n  this._viewer.canvas.appendChild(this._svg);\n\n  this._node = document.createElementNS(svgNS, \"g\");\n  this._svg.appendChild(this._node);\n\n  this._viewer.addHandler(\"animation\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"open\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"rotate\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"flip\", function () {\n    self.resize();\n  });\n\n  this._viewer.addHandler(\"resize\", function () {\n    self.resize();\n  });\n\n  this.resize();\n};\n\n// ----------\nOverlay.prototype = {\n  // ----------\n  node: function () {\n    return this._node;\n  },\n\n  // ----------\n  resize: function () {\n    if (this._containerWidth !== this._viewer.container.clientWidth) {\n      this._containerWidth = this._viewer.container.clientWidth;\n      this._svg.setAttribute(\"width\", this._containerWidth);\n    }\n\n    if (this._containerHeight !== this._viewer.container.clientHeight) {\n      this._containerHeight = this._viewer.container.clientHeight;\n      this._svg.setAttribute(\"height\", this._containerHeight);\n    }\n\n    const p = this._viewer.viewport.pixelFromPoint(new $.Point(0, 0), true);\n    const zoom = this._viewer.viewport.getZoom(true);\n    const rotation = this._viewer.viewport.getRotation();\n    const flipped = this._viewer.viewport.getFlip();\n    // TODO: Expose an accessor for _containerInnerSize in the OSD API so we don't have to use the private variable.\n    const containerSizeX = this._viewer.viewport._containerInnerSize.x;\n    let scaleX = containerSizeX * zoom;\n    const scaleY = scaleX;\n\n    if (flipped) {\n      // Makes the x component of the scale negative to flip the svg\n      scaleX = -scaleX;\n      // Translates svg back into the correct coordinates when the x scale is made negative.\n      p.x = -p.x + containerSizeX;\n    }\n\n    this._node.setAttribute(\n      \"transform\",\n      \"translate(\" +\n        p.x +\n        \",\" +\n        p.y +\n        \") scale(\" +\n        scaleX +\n        \",\" +\n        scaleY +\n        \") rotate(\" +\n        rotation +\n        \")\",\n    );\n  },\n  // ----------\n  onClick: function (node, handler) {\n    // TODO: Fast click for mobile browsers\n\n    new $.MouseTracker({\n      element: node,\n      clickHandler: handler,\n    }).setTracking(true);\n  },\n};\n\nexport const OsdSvgOverlay = (viewer) => {\n  return new Overlay(viewer);\n};\n","import {\n  Canvas,\n  CollectionNormalized,\n  IIIFExternalWebResource,\n  ImageService,\n  ManifestNormalized,\n  Service,\n} from \"@iiif/presentation-3\";\nimport { decodeContentState } from \"@iiif/vault-helpers\";\n\nexport const getCanvasResource = (canvas: Canvas) => {\n  if (canvas?.items) {\n    const annotationPage = canvas?.items[0];\n    if (annotationPage?.items) {\n      const resource = annotationPage?.items[0].body as IIIFExternalWebResource;\n      if (resource?.hasOwnProperty(\"id\")) {\n        return resource.id as string;\n      }\n    }\n  }\n};\n\nexport const getInfoResponse = (id: string) =>\n  fetch(`${id.replace(/\\/$/, \"\")}/info.json`)\n    .then((response) => response.json())\n    .then((json) => json)\n    .catch((error: any) => {\n      console.error(\n        `The IIIF tilesource ${id.replace(\n          /\\/$/,\n          \"\",\n        )}/info.json failed to load: ${error}`,\n      );\n    });\n\nexport const getImageServiceURI = (service: Service[] | undefined) => {\n  let imageService: ImageService;\n  let imageServiceURI: string | undefined;\n\n  if (Array.isArray(service)) {\n    imageService = service[0] as ImageService;\n    if (imageService) {\n      let id: string | undefined;\n      \"@id\" in imageService\n        ? (id = imageService[\"@id\"])\n        : (id = imageService.id);\n\n      imageServiceURI = id;\n    }\n  }\n\n  return imageServiceURI;\n};\n\nconst parseIiifContent = (iiifContent: string) => {\n  let resourceId;\n  let active;\n  if (isURL(iiifContent)) {\n    resourceId = iiifContent;\n    active = {};\n  } else {\n    const json = JSON.parse(decodeContentState(iiifContent));\n    switch (json?.type) {\n      // https://iiif.io/api/content-state/1.0/#51-a-region-of-a-canvas-in-a-manifest\n      // https://iiif.io/api/content-state/1.0/#52-start-playing-at-a-point-in-a-recording\n      // https://iiif.io/api/content-state/1.0/#53-multiple-targets-for-a-comparison-view\n      // https://iiif.io/api/content-state/1.0/#54-search-results\n      case \"SpecificResource\":\n      case \"Range\":\n      case \"Annotation\":\n        resourceId = json?.target.partOf[0].id;\n        active = {\n          manifest: resourceId,\n          canvas: json?.target.id,\n        };\n        break;\n      case \"Canvas\":\n        resourceId = json?.partOf[0].id;\n        active = {\n          manifest: resourceId,\n          canvas: json?.id,\n        };\n        break;\n      case \"Manifest\":\n        resourceId = json?.id;\n        active = {\n          collection: json?.partOf[0]?.id,\n          manifest: json?.id,\n        };\n        break;\n      case \"Collection\":\n        resourceId = json?.id;\n        active = {\n          collection: resourceId,\n        };\n        break;\n    }\n  }\n  return { resourceId, active };\n};\n\nexport const decodeContentStateContainerURI = (iiifContent: string) => {\n  const { resourceId, active } = parseIiifContent(iiifContent);\n  return active.collection || active.manifest || resourceId;\n};\n\nexport const getActiveCanvas = (\n  iiifContent: string,\n  manifest: ManifestNormalized,\n) => {\n  const canvases = manifest.items.map((item) => item.id);\n  const { active } = parseIiifContent(iiifContent);\n  const canvas = active.canvas;\n  return canvases.includes(canvas) ? canvas : canvases[0];\n};\n\nexport const getActiveManifest = (\n  iiifContent: string,\n  collection: CollectionNormalized,\n) => {\n  const { active } = parseIiifContent(iiifContent);\n  const manifest = active.manifest;\n  const manifests = collection.items\n    .filter((item) => item.type === \"Manifest\")\n    .map((manifest) => manifest.id);\n  if (manifests.length == 0) return null;\n  return manifests.includes(manifest) ? manifest : manifests[0];\n};\n\nconst isURL = (url: string) => {\n  try {\n    new URL(url);\n  } catch {\n    return false;\n  }\n  return true;\n};\n","export enum OpenSeadragonImageTypes {\n  TiledImage = \"tiledImage\",\n  SimpleImage = \"simpleImage\",\n}\n","import {\n  Annotation,\n  AnnotationNormalized,\n  IIIFExternalWebResource,\n  type CanvasNormalized,\n  AnnotationPageNormalized,\n} from \"@iiif/presentation-3\";\nimport OpenSeadragon from \"openseadragon\";\nimport {\n  type OverlayOptions,\n  type ViewerConfigOptions,\n} from \"src/context/viewer-context\";\nimport { OsdSvgOverlay } from \"src/lib/openseadragon-svg\";\nimport { parseAnnotationTarget } from \"src/lib/annotation-helpers\";\n\nimport { ParsedAnnotationTarget } from \"src/types/annotations\";\nimport { getImageServiceURI } from \"src/lib/iiif\";\nimport { OpenSeadragonImageTypes } from \"src/types/open-seadragon\";\n\nexport function addOverlaysToViewer(\n  viewer: OpenSeadragon.Viewer,\n  canvas: CanvasNormalized,\n  configOptions: OverlayOptions,\n  annotations: Annotation[] | AnnotationNormalized[],\n  overlaySelector: string,\n): void {\n  if (!viewer) return;\n\n  const scale = 1 / canvas.width;\n\n  annotations.forEach((annotation) => {\n    if (!annotation.target) return;\n\n    const parsedAnnotationTarget = parseAnnotationTarget(annotation.target);\n    const { point, rect, svg } = parsedAnnotationTarget;\n\n    if (rect) {\n      const { x, y, w, h } = rect;\n      addRectangularOverlay(\n        viewer,\n        x * scale,\n        y * scale,\n        w * scale,\n        h * scale,\n        configOptions,\n        overlaySelector,\n      );\n    }\n\n    if (point) {\n      const { x, y } = point;\n      const svg = `\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"${x}\" cy=\"${y}\" r=\"20\" />\n        </svg>\n      `;\n\n      addSvgOverlay(viewer, svg, configOptions, scale, overlaySelector);\n    }\n\n    if (svg) {\n      addSvgOverlay(viewer, svg, configOptions, scale, overlaySelector);\n    }\n  });\n}\n\nexport function createOpenSeadragonRect(\n  canvas: CanvasNormalized,\n  parsedAnnotationTarget: ParsedAnnotationTarget,\n  zoomLevel: number,\n) {\n  let x,\n    y,\n    w = 40,\n    h = 40;\n\n  if (parsedAnnotationTarget.rect) {\n    x = parsedAnnotationTarget.rect.x;\n    y = parsedAnnotationTarget.rect.y;\n    w = parsedAnnotationTarget.rect.w;\n    h = parsedAnnotationTarget.rect.h;\n  }\n\n  if (parsedAnnotationTarget.point) {\n    x = parsedAnnotationTarget.point.x;\n    y = parsedAnnotationTarget.point.y;\n  }\n\n  // TODO: How to handle SVG where no rect or point exists?\n  // @ts-ignore\n  if (parseAnnotationTarget.svg) {\n  }\n\n  const scale = 1 / canvas.width;\n  const rect = new OpenSeadragon.Rect(\n    x * scale - ((w * scale) / 2) * (zoomLevel - 1),\n    y * scale - ((h * scale) / 2) * (zoomLevel - 1),\n    w * scale * zoomLevel,\n    h * scale * zoomLevel,\n  );\n\n  return rect;\n}\n\n/**\n * Add a rectangular overlay to an OpenSeadragon viewer\n */\nfunction addRectangularOverlay(\n  viewer: OpenSeadragon.Viewer,\n  x: number,\n  y: number,\n  w: number,\n  h: number,\n  configOptions: OverlayOptions,\n  overlaySelector: string,\n): void {\n  const rect = new OpenSeadragon.Rect(x, y, w, h);\n  const div = document.createElement(\"div\");\n\n  if (configOptions) {\n    const { backgroundColor, opacity, borderType, borderColor, borderWidth } =\n      configOptions;\n\n    div.style.backgroundColor = backgroundColor as string;\n    div.style.opacity = opacity as string;\n    div.style.border = `${borderType} ${borderWidth} ${borderColor}`;\n    div.className = overlaySelector;\n  }\n\n  viewer.addOverlay(div, rect);\n}\n\nfunction convertSVGStringToHTML(svgString) {\n  if (!svgString) return null;\n  const template = document.createElement(\"template\");\n  template.innerHTML = svgString.trim();\n  const result = template.content.children;\n\n  return result[0];\n}\n\nexport function addSvgOverlay(\n  viewer: any,\n  svgString: string,\n  configOptions: OverlayOptions,\n  scale: number,\n  overlaySelector: string,\n) {\n  const svgEl = convertSVGStringToHTML(svgString);\n  if (svgEl) {\n    for (const child of svgEl.children) {\n      svg_processChild(viewer, child, configOptions, scale, overlaySelector);\n    }\n  }\n}\n\nfunction svg_processChild(\n  viewer: any,\n  child: ChildNode,\n  configOptions: OverlayOptions,\n  scale: number,\n  overlaySelector: string,\n) {\n  if (child.nodeName === \"#text\") {\n    svg_handleTextNode(child);\n  } else {\n    const newElement = svg_handleElementNode(child, configOptions, scale);\n    const overlay = OsdSvgOverlay(viewer);\n    overlay.node().append(newElement);\n    overlay._svg?.setAttribute(\"class\", overlaySelector);\n\n    // BUG: svg with children elements aren't formated correctly.\n    child.childNodes.forEach((child) => {\n      svg_processChild(viewer, child, configOptions, scale, overlaySelector);\n    });\n  }\n}\n\nexport function svg_handleElementNode(\n  child: any,\n  configOptions: OverlayOptions,\n  scale: number,\n) {\n  let hasStrokeColor = false;\n  let hasStrokeWidth = false;\n  let hasFillColor = false;\n  let hasFillOpacity = false;\n\n  const newElement = document.createElementNS(\n    \"http://www.w3.org/2000/svg\",\n    child.nodeName,\n  );\n\n  if (child.attributes.length > 0) {\n    for (let index = 0; index < child.attributes.length; index++) {\n      const element = child.attributes[index];\n      switch (element.name) {\n        case \"fill\":\n          hasFillColor = true;\n          break;\n        case \"stroke\":\n          hasStrokeColor = true;\n          break;\n        case \"stroke-width\":\n          hasStrokeWidth = true;\n          break;\n        case \"fill-opacity\":\n          hasFillOpacity = true;\n          break;\n      }\n      newElement.setAttribute(element.name, element.textContent);\n    }\n  }\n\n  if (!hasStrokeColor) {\n    newElement.style.stroke = configOptions?.borderColor as string;\n  }\n  if (!hasStrokeWidth) {\n    newElement.style.strokeWidth = configOptions?.borderWidth as string;\n  }\n  if (!hasFillColor) {\n    newElement.style.fill = configOptions?.backgroundColor as string;\n  }\n  if (!hasFillOpacity) {\n    newElement.style.fillOpacity = configOptions?.opacity as string;\n  }\n  newElement.setAttribute(\"transform\", `scale(${scale})`);\n\n  return newElement;\n}\n\nfunction svg_handleTextNode(child: ChildNode) {\n  if (!child.textContent) {\n    return;\n  }\n  if (child.textContent.includes(\"\\n\")) {\n    return;\n  }\n  console.log(\n    \"nodeName:\",\n    child.nodeName,\n    \", textContent:\",\n    child.textContent,\n    \", childNodes.length\",\n    child.childNodes.length,\n  );\n}\n\nexport const parseImageBody = (body: IIIFExternalWebResource) => {\n  const hasImageService =\n    Array.isArray(body?.service) && body?.service.length > 0;\n\n  const uri = hasImageService ? getImageServiceURI(body?.service) : body?.id;\n  const imageType: OpenSeadragonImageTypes = hasImageService\n    ? OpenSeadragonImageTypes.TiledImage\n    : OpenSeadragonImageTypes.SimpleImage;\n\n  return {\n    uri,\n    imageType,\n  };\n};\n\nexport const parseSrc = (src: string, isTiledImage: boolean) => {\n  const imageType = isTiledImage\n    ? OpenSeadragonImageTypes.TiledImage\n    : OpenSeadragonImageTypes.SimpleImage;\n\n  return {\n    uri: src,\n    imageType,\n  };\n};\nexport function removeOverlaysFromViewer(\n  viewer: OpenSeadragon.Viewer,\n  overlaySelector: string,\n) {\n  if (!viewer) return;\n\n  if (!overlaySelector.startsWith(\".\")) {\n    overlaySelector = \".\" + overlaySelector;\n  }\n  const elements = document.querySelectorAll(overlaySelector);\n  if (elements) {\n    elements.forEach((element) => viewer.removeOverlay(element));\n  }\n}\n\nexport function panToTarget(openSeadragonViewer, zoomLevel, target, canvas) {\n  const parsedAnnotationTarget = parseAnnotationTarget(target);\n\n  const { point, rect, svg } = parsedAnnotationTarget;\n\n  if (point || rect || svg) {\n    const rect = createOpenSeadragonRect(\n      canvas,\n      parsedAnnotationTarget,\n      zoomLevel,\n    );\n    openSeadragonViewer?.viewport.fitBounds(rect);\n  }\n}\n\nexport function addContentSearchOverlays(\n  contentSearchVault: any,\n  contentSearch: AnnotationPageNormalized,\n  openSeadragonViewer,\n  canvas: CanvasNormalized,\n  configOptions: ViewerConfigOptions,\n) {\n  if (!contentSearch?.items) return;\n  if (contentSearch?.items.length === 0) return;\n\n  const annotations: Array<AnnotationNormalized> = [];\n  contentSearch.items.forEach((item) => {\n    const annotation = contentSearchVault.get(item.id) as AnnotationNormalized;\n\n    if (typeof annotation.target === \"string\") {\n      if (annotation.target.startsWith(canvas.id)) {\n        annotations.push(annotation as unknown as AnnotationNormalized);\n      }\n    }\n  });\n\n  if (openSeadragonViewer && configOptions.contentSearch?.overlays) {\n    addOverlaysToViewer(\n      openSeadragonViewer,\n      canvas,\n      configOptions.contentSearch.overlays,\n      annotations,\n      \"content-search-overlay\",\n    );\n  }\n}\n","import { styled } from \"src/styles/stitches.config\";\n\nconst ErrorFallbackStyled = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n});\n\nconst Headline = styled(\"p\", {\n  fontWeight: \"bold\",\n  fontSize: \"x-large\",\n});\n\nconst ErrorBody = styled(\"span\", {\n  fontSize: \"medium\",\n});\n\nexport { ErrorFallbackStyled, ErrorBody, Headline };\n","import {\n  ErrorBody,\n  ErrorFallbackStyled,\n  Headline,\n} from \"src/components/UI/ErrorFallback/ErrorFallback.styled\";\n\nimport React from \"react\";\n\ninterface ErrorFallbackProps {\n  error: Error;\n}\n\nconst ErrorFallback: React.FC<ErrorFallbackProps> = ({ error }) => {\n  const { message } = error;\n\n  return (\n    <ErrorFallbackStyled role=\"alert\">\n      <Headline data-testid=\"headline\">Something went wrong</Headline>\n      {message && <ErrorBody>{`Error message: ${message}`} </ErrorBody>}\n    </ErrorFallbackStyled>\n  );\n};\n\nexport default ErrorFallback;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst Navigator = styled(\"div\", {\n  position: \"absolute !important\",\n  zIndex: \"1\",\n  top: \"1rem\",\n  left: \"1rem\",\n  width: \"161.8px\",\n  height: \"100px\",\n  backgroundColor: \"#000D\",\n  boxShadow: \"5px 5px 5px #0002\",\n  borderRadius: \"3px\",\n\n  \".displayregion\": {\n    border: \" 3px solid $accent !important\",\n    boxShadow: \"0 0 3px #0006\",\n  },\n\n  \"@sm\": {\n    width: \"123px\",\n    height: \"76px\",\n  },\n\n  \"@xs\": {\n    width: \"100px\",\n    height: \"61.8px\",\n  },\n});\n\nconst Viewport = styled(\"div\", {\n  position: \"relative\",\n  width: \"100%\",\n  height: \"100%\",\n  zIndex: \"0\",\n});\n\nconst Wrapper = styled(\"div\", {\n  width: \"100%\",\n  height: \"100%\",\n  maxHeight: \"100vh\",\n  background: \"transparent\",\n  backgroundSize: \"contain\",\n  color: \"white\",\n  position: \"relative\",\n  zIndex: \"0\",\n  overflow: \"hidden\",\n\n  variants: {\n    hasNavigator: {\n      true: {\n        [`${Navigator}`]: {\n          display: \"block\",\n        },\n      },\n      false: {\n        [`${Navigator}`]: {\n          display: \"none\",\n        },\n      },\n    },\n  },\n});\n\nexport { Navigator, Viewport, Wrapper };\n","import { styled } from \"src/styles/stitches.config\";\n\nconst Item = styled(\"button\", {\n  display: \"flex\",\n  height: \"2rem\",\n  width: \"2rem\",\n  borderRadius: \"2rem\",\n  padding: \"0\",\n  margin: \"0\",\n  fontFamily: \"inherit\",\n  background: \"none\",\n  backgroundColor: \"$primary\",\n  border: \"none\",\n  color: \"white\",\n  cursor: \"pointer\",\n  marginLeft: \"0.618rem\",\n  filter: \"drop-shadow(2px 2px 5px #0003)\",\n  transition: \"$all\",\n  boxSizing: \"content-box !important\",\n\n  \"&:first-child\": {\n    marginLeft: \"0\",\n  },\n\n  \"@xs\": {\n    marginBottom: \"0.618rem\",\n    marginLeft: \"0\",\n\n    \"&:last-child\": {\n      marginBottom: \"0\",\n    },\n  },\n\n  svg: {\n    height: \"60%\",\n    width: \"60%\",\n    padding: \"20%\",\n    fill: \"$secondary\",\n    stroke: \"$secondary\",\n    filter: \"drop-shadow(2px 2px 5px #0003)\",\n    transition: \"$all\",\n    boxSizing: \"inherit\",\n  },\n\n  \"&:hover, &:focus\": {\n    backgroundColor: \"$accent\",\n  },\n\n  \"&[data-button=rotate-right]\": {\n    \"&:hover, &:focus\": {\n      svg: {\n        rotate: \"45deg\",\n      },\n    },\n  },\n\n  \"&[data-button=rotate-left]\": {\n    transform: \"scaleX(-1)\",\n\n    \"&:hover, &:focus\": {\n      svg: {\n        rotate: \"45deg\",\n      },\n    },\n  },\n\n  \"&[data-button=reset]\": {\n    \"&:hover, &:focus\": {\n      svg: {\n        rotate: \"-15deg\",\n      },\n    },\n  },\n});\n\nexport { Item };\n","import { Item } from \"src/components/Image/Controls/Button.styled\";\nimport React from \"react\";\n\ninterface ButtonProps {\n  className?: string;\n  id: string;\n  label: string;\n  children: React.ReactChild;\n}\n\nconst Button: React.FC<ButtonProps> = ({ className, id, label, children }) => {\n  const dataButton = label.toLowerCase().replace(/\\s/g, \"-\");\n  return (\n    <Item\n      id={id}\n      className={className}\n      data-testid=\"openseadragon-button\"\n      data-button={dataButton}\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        aria-labelledby={`${id}-svg-title`}\n        data-testid=\"openseadragon-button-svg\"\n        focusable=\"false\"\n        viewBox=\"0 0 512 512\"\n        role=\"img\"\n      >\n        <title id={`${id}-svg-title`}>{label}</title>\n        {children}\n      </svg>\n    </Item>\n  );\n};\n\nexport default Button;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst Wrapper = styled(\"div\", {\n  position: \"absolute\",\n  zIndex: \"1\",\n  top: \"1rem\",\n  right: \"1rem\",\n  display: \"flex\",\n\n  \"@xs\": {\n    flexDirection: \"column\",\n    zIndex: \"2\",\n  },\n\n  variants: {\n    hasPlaceholder: {\n      true: {\n        right: \"3.618rem\",\n\n        \"@xs\": {\n          top: \"3.618rem\",\n          right: \"1rem\",\n        },\n      },\n\n      false: {\n        right: \"1rem\",\n\n        \"@xs\": {\n          top: \"1rem\",\n          right: \"1rem\",\n        },\n      },\n    },\n  },\n});\n\nexport { Wrapper };\n","import OpenSeadragon, { Options as OpenSeadragonOptions } from \"openseadragon\";\nimport React, { useReducer } from \"react\";\n\nimport { CollectionNormalized } from \"@iiif/presentation-3\";\nimport { IncomingHttpHeaders } from \"http\";\nimport { Vault } from \"@iiif/vault\";\nimport { deepMerge } from \"src/lib/utils\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport type AutoScrollSettings = {\n  behavior: string; // ScrollBehavior (\"auto\" | \"instant\" | \"smooth\")\n  block: string; // ScrollLogicalPosition (\"center\" | \"end\" | \"nearest\" | \"start\")\n};\n\nexport type AutoScrollOptions = {\n  enabled: boolean;\n  settings: AutoScrollSettings;\n};\n\nexport type ViewerConfigOptions = {\n  annotationOverlays?: OverlayOptions;\n  background?: string;\n  canvasBackgroundColor?: string;\n  canvasHeight?: string;\n  contentSearch?: {\n    searchResultsLimit?: number;\n    overlays?: OverlayOptions;\n    zoomToFirst?: boolean;\n  };\n  ignoreCaptionLabels?: string[];\n  pages?: {\n    show?: boolean;\n    toggleLabel?: string;\n  };\n  informationPanel?: {\n    open?: boolean;\n    renderAbout?: boolean;\n    renderSupplementing?: boolean;\n    renderToggle?: boolean;\n    renderAnnotation?: boolean;\n    toggleLabel?: string;\n    vtt?: {\n      autoScroll?: AutoScrollOptions | AutoScrollSettings | boolean;\n    };\n    renderContentSearch?: boolean;\n    defaultTab?: string;\n  };\n  openSeadragon?: OpenSeadragonOptions;\n  requestHeaders?: IncomingHttpHeaders;\n  showDownload?: boolean;\n  headerNavigation?: string;\n  showIIIFBadge?: boolean;\n  showTitle?: boolean;\n  withCredentials?: boolean;\n  localeText?: {\n    contentSearch?: {\n      tabLabel?: string;\n      formPlaceholder?: string;\n      noSearchResults?: string;\n      loading?: string;\n      moreResults?: string;\n    };\n  };\n  initialSearch?: string;\n  initialPage?: number;\n};\n\nexport type OverlayOptions = {\n  backgroundColor?: string;\n  borderColor?: string;\n  borderType?: string;\n  borderWidth?: string;\n  opacity?: string;\n  renderOverlays?: boolean;\n  zoomLevel?: number;\n};\n\nconst defaultAutoScrollSettings: AutoScrollSettings = {\n  behavior: \"smooth\",\n  block: \"center\",\n};\n\nconst defaultConfigOptions = {\n  annotationOverlays: {\n    backgroundColor: \"#6666ff\",\n    borderColor: \"#000099\",\n    borderType: \"solid\",\n    borderWidth: \"1px\",\n    opacity: \"0.5\",\n    renderOverlays: true,\n    zoomLevel: 2,\n  },\n  background: \"transparent\",\n  canvasBackgroundColor: \"#6662\",\n  canvasHeight: \"500px\",\n  contentSearch: {\n    searchResultsLimit: 20,\n    zoomToFirst: false,\n    overlays: {\n      backgroundColor: \"#ff6666\",\n      borderColor: \"#990000\",\n      borderType: \"solid\",\n      borderWidth: \"1px\",\n      opacity: \"0.5\",\n      renderOverlays: true,\n      zoomLevel: 4,\n    },\n  },\n  ignoreCaptionLabels: [],\n  pages: {\n    show: true,\n    toggleLabel: \"Pages\",\n  },\n  informationPanel: {\n    vtt: {\n      autoScroll: {\n        enabled: true,\n        settings: defaultAutoScrollSettings,\n      },\n    },\n    open: true,\n    renderAbout: true,\n    renderSupplementing: true,\n    renderToggle: true,\n    renderAnnotation: true,\n    renderContentSearch: true,\n  },\n  openSeadragon: {},\n  requestHeaders: { \"Content-Type\": \"application/json\" },\n  showDownload: true,\n  showIIIFBadge: true,\n  showTitle: true,\n  withCredentials: false,\n  localeText: {\n    contentSearch: {\n      tabLabel: \"Search Results\",\n      formPlaceholder: \"Enter search words\",\n      noSearchResults: \"No search results\",\n      loading: \"Loading...\",\n      moreResults: \"more results\",\n    },\n  },\n};\n\nexport type CustomDisplay = {\n  display: {\n    component: React.ElementType;\n    componentProps?: Record<string, unknown>;\n  };\n  target: {\n    canvasId?: string[];\n    paintingFormat?: string[];\n  };\n};\nexport type PluginConfig = {\n  id: string;\n  imageViewer?: {\n    menu?: {\n      component: React.ElementType;\n      componentProps?: Record<string, unknown>;\n    };\n  };\n  informationPanel?: {\n    component: React.ElementType;\n    componentProps?: Record<string, unknown>;\n    label: string;\n  };\n};\n\nexport interface ViewerContextStore {\n  activeCanvas: string;\n  activeManifest: string;\n  OSDImageLoaded?: boolean;\n  collection?: CollectionNormalized | Record<string, never>;\n  configOptions: ViewerConfigOptions;\n  customDisplays: Array<CustomDisplay>;\n  plugins: Array<PluginConfig>;\n  isAutoScrollEnabled?: boolean;\n  isAutoScrolling?: boolean;\n  isInformationOpen: boolean;\n  showPageNavigation: boolean;\n  isLoaded: boolean;\n  isUserScrolling?: number | undefined;\n  vault: Vault;\n  contentSearchVault: Vault;\n  openSeadragonViewer: OpenSeadragon.Viewer | null;\n  openSeadragonId?: string;\n  viewerId?: string;\n  informationPanelCounts: object;\n}\n\nexport interface ViewerAction {\n  type: string;\n  canvasId: string;\n  collection: CollectionNormalized;\n  configOptions: ViewerConfigOptions;\n  isAutoScrollEnabled: boolean;\n  isAutoScrolling: boolean;\n  isInformationOpen: boolean;\n  showPageNavigation: boolean;\n  isLoaded: boolean;\n  isUserScrolling: number | undefined;\n  manifestId: string;\n  OSDImageLoaded?: boolean;\n  vault: Vault;\n  contentSearchVault: Vault;\n  openSeadragonViewer: OpenSeadragon.Viewer;\n  viewerId: string;\n  panel: string;\n  count: number;\n}\n\nexport function expandAutoScrollOptions(\n  value: AutoScrollOptions | AutoScrollSettings | boolean | undefined,\n): AutoScrollOptions {\n  let result: AutoScrollOptions = {\n    ...defaultConfigOptions.informationPanel.vtt.autoScroll,\n  };\n  if (typeof value === \"object\") {\n    result = \"enabled\" in value ? value : { enabled: true, settings: value };\n  }\n  if (value === false) result.enabled = false;\n  validateAutoScrollSettings(result.settings);\n  return result;\n}\n\nfunction validateAutoScrollSettings({ behavior, block }: AutoScrollSettings) {\n  const validBehaviors = [\"auto\", \"instant\", \"smooth\"];\n  const validPositions = [\"center\", \"end\", \"nearest\", \"start\"];\n  if (!validBehaviors.includes(behavior))\n    throw TypeError(`'${behavior}' not in ${validBehaviors.join(\" | \")}`);\n  if (!validPositions.includes(block))\n    throw TypeError(`'${block}' not in ${validPositions.join(\" | \")}`);\n}\n\nconst expandedAutoScrollOptions = expandAutoScrollOptions(\n  defaultConfigOptions?.informationPanel?.vtt?.autoScroll,\n);\n\nexport const defaultState: ViewerContextStore = {\n  activeCanvas: \"\",\n  activeManifest: \"\",\n  OSDImageLoaded: false,\n  collection: {},\n  configOptions: defaultConfigOptions,\n  customDisplays: [],\n  plugins: [],\n  isAutoScrollEnabled: expandedAutoScrollOptions.enabled,\n  isAutoScrolling: false,\n  isInformationOpen: defaultConfigOptions?.informationPanel?.open,\n  showPageNavigation: defaultConfigOptions?.pages?.show,\n  isLoaded: false,\n  isUserScrolling: undefined,\n  vault: new Vault(),\n  contentSearchVault: new Vault(),\n  openSeadragonViewer: null,\n  viewerId: uuidv4(),\n  informationPanelCounts: {},\n};\n\nconst ViewerStateContext =\n  React.createContext<ViewerContextStore>(defaultState);\nconst ViewerDispatchContext =\n  React.createContext<ViewerContextStore>(defaultState);\n\nfunction viewerReducer(state: ViewerContextStore, action: ViewerAction) {\n  switch (action.type) {\n    case \"updateActiveCanvas\": {\n      /**\n       * Set canvasId to empty string if it comes back undefined.\n       */\n      if (!action.canvasId) action.canvasId = \"\";\n      return {\n        ...state,\n        activeCanvas: action.canvasId,\n      };\n    }\n    case \"updateActiveManifest\": {\n      return {\n        ...state,\n        activeManifest: action.manifestId,\n      };\n    }\n    case \"updateOSDImageLoaded\": {\n      return {\n        ...state,\n        OSDImageLoaded: action.OSDImageLoaded,\n      };\n    }\n    case \"updateAutoScrollAnnotationEnabled\": {\n      return {\n        ...state,\n        isAutoScrollEnabled: action.isAutoScrollEnabled,\n      };\n    }\n    case \"updateAutoScrolling\": {\n      return {\n        ...state,\n        isAutoScrolling: action.isAutoScrolling,\n      };\n    }\n    case \"updateCollection\": {\n      return {\n        ...state,\n        collection: action.collection,\n      };\n    }\n    case \"updateConfigOptions\": {\n      return {\n        ...state,\n        configOptions: deepMerge(state.configOptions, action.configOptions),\n      };\n    }\n    case \"updateInformationOpen\": {\n      return {\n        ...state,\n        isInformationOpen: action.isInformationOpen,\n      };\n    }\n    case \"updateShowPageNavigation\": {\n      return {\n        ...state,\n        showPageNavigation: action.showPageNavigation,\n      };\n    }\n    case \"updateIsLoaded\": {\n      return {\n        ...state,\n        isLoaded: action.isLoaded,\n      };\n    }\n    case \"updateUserScrolling\": {\n      return {\n        ...state,\n        isUserScrolling: action.isUserScrolling,\n      };\n    }\n    case \"updateOpenSeadragonViewer\": {\n      return {\n        ...state,\n        openSeadragonViewer: action.openSeadragonViewer,\n      };\n    }\n    case \"updateViewerId\": {\n      return {\n        ...state,\n        viewerId: action.viewerId,\n      };\n    }\n    case \"updateInformationPanelCount\": {\n      const c = state.informationPanelCounts ?? {};\n      c[action.panel] = action.count;\n      return {\n        ...state,\n        informationPanelCounts: c,\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\ninterface ViewerProviderProps {\n  initialState?: ViewerContextStore;\n  children: React.ReactNode;\n}\n\nconst ViewerProvider: React.FC<ViewerProviderProps> = ({\n  initialState = defaultState,\n  children,\n}) => {\n  const [state, dispatch] = useReducer<\n    React.Reducer<ViewerContextStore, ViewerAction>\n  >(viewerReducer, initialState);\n\n  return (\n    <ViewerStateContext.Provider value={state}>\n      <ViewerDispatchContext.Provider\n        value={dispatch as unknown as ViewerContextStore}\n      >\n        {children}\n      </ViewerDispatchContext.Provider>\n    </ViewerStateContext.Provider>\n  );\n};\n\nfunction useViewerState() {\n  const context = React.useContext(ViewerStateContext);\n  if (context === undefined) {\n    throw new Error(\"useViewerState must be used within a ViewerProvider\");\n  }\n  return context;\n}\n\nfunction useViewerDispatch() {\n  const context = React.useContext(ViewerDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useViewerDispatch must be used within a ViewerProvider\");\n  }\n  return context;\n}\n\nexport { ViewerProvider, useViewerState, useViewerDispatch };\n","import Button from \"src/components/Image/Controls/Button\";\nimport { Options } from \"openseadragon\";\nimport React from \"react\";\nimport { Wrapper } from \"src/components/Image/Controls/Controls.styled\";\nimport {\n  ViewerContextStore,\n  useViewerState,\n  useViewerDispatch,\n} from \"src/context/viewer-context\";\nimport { CanvasNormalized } from \"@iiif/presentation-3\";\n\nconst ZoomIn = () => {\n  return (\n    <path\n      strokeLinecap=\"round\"\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"45\"\n      d=\"M256 112v288M400 256H112\"\n    />\n  );\n};\n\nconst ZoomOut = () => {\n  return (\n    <path\n      strokeLinecap=\"round\"\n      strokeMiterlimit=\"10\"\n      strokeWidth=\"45\"\n      d=\"M400 256H112\"\n    />\n  );\n};\n\nconst ZoomFullScreen = () => {\n  return (\n    <path\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth=\"32\"\n      d=\"M432 320v112H320M421.8 421.77L304 304M80 192V80h112M90.2 90.23L208 208M320 80h112v112M421.77 90.2L304 208M192 432H80V320M90.23 421.8L208 304\"\n    />\n  );\n};\n\nconst Reset = () => {\n  return (\n    <path d=\"M448 440a16 16 0 01-12.61-6.15c-22.86-29.27-44.07-51.86-73.32-67C335 352.88 301 345.59 256 344.23V424a16 16 0 01-27 11.57l-176-168a16 16 0 010-23.14l176-168A16 16 0 01256 88v80.36c74.14 3.41 129.38 30.91 164.35 81.87C449.32 292.44 464 350.9 464 424a16 16 0 01-16 16z\" />\n  );\n};\n\nconst Rotate = () => {\n  return (\n    <>\n      <path\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        strokeMiterlimit=\"10\"\n        strokeWidth=\"45\"\n        d=\"M400 148l-21.12-24.57A191.43 191.43 0 00240 64C134 64 48 150 48 256s86 192 192 192a192.09 192.09 0 00181.07-128\"\n      />\n      <path d=\"M464 97.42V208a16 16 0 01-16 16H337.42c-14.26 0-21.4-17.23-11.32-27.31L436.69 86.1C446.77 76 464 83.16 464 97.42z\" />\n    </>\n  );\n};\n\nconst Controls = ({\n  _cloverViewerHasPlaceholder,\n  config,\n}: {\n  _cloverViewerHasPlaceholder: boolean;\n  config: Options;\n}) => {\n  const viewerState: ViewerContextStore = useViewerState();\n  const {\n    activeCanvas,\n    configOptions,\n    openSeadragonViewer,\n    plugins,\n    vault,\n    activeManifest,\n  } = viewerState;\n\n  const canvas: CanvasNormalized = vault.get({\n    id: activeCanvas,\n    type: \"Canvas\",\n  });\n\n  function renderPlugins() {\n    return plugins\n      .filter((plugin) => plugin.imageViewer?.menu)\n      .map((plugin, i) => {\n        const PluginComponent = plugin.imageViewer?.menu\n          ?.component as unknown as React.ElementType;\n        return (\n          <PluginComponent\n            key={i}\n            {...plugin?.imageViewer?.menu?.componentProps}\n            activeManifest={activeManifest}\n            canvas={canvas}\n            viewerConfigOptions={configOptions}\n            openSeadragonViewer={openSeadragonViewer}\n            useViewerDispatch={useViewerDispatch}\n            useViewerState={useViewerState}\n          ></PluginComponent>\n        );\n      });\n  }\n\n  return (\n    <Wrapper\n      data-testid=\"clover-iiif-image-openseadragon-controls\"\n      hasPlaceholder={_cloverViewerHasPlaceholder}\n    >\n      {config.showZoomControl && (\n        <>\n          <Button id={config.zoomInButton as string} label=\"zoom in\">\n            <ZoomIn />\n          </Button>\n          <Button id={config.zoomOutButton as string} label=\"zoom out\">\n            <ZoomOut />\n          </Button>\n        </>\n      )}\n      {config.showFullPageControl && (\n        <Button id={config.fullPageButton as string} label=\"full page\">\n          <ZoomFullScreen />\n        </Button>\n      )}\n      {config.showRotationControl && (\n        <>\n          <Button id={config.rotateRightButton as string} label=\"rotate right\">\n            <Rotate />\n          </Button>\n          <Button id={config.rotateLeftButton as string} label=\"rotate left\">\n            <Rotate />\n          </Button>\n        </>\n      )}\n      {config.showHomeControl && (\n        <Button id={config.homeButton as string} label=\"reset\">\n          <Reset />\n        </Button>\n      )}\n      {renderPlugins()}\n    </Wrapper>\n  );\n};\n\nexport default Controls;\n","import {\n  Navigator,\n  Viewport,\n  Wrapper,\n} from \"src/components/Image/Image.styled\";\nimport OpenSeadragon, { Options } from \"openseadragon\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport Controls from \"src/components/Image/Controls/Controls\";\nimport { OpenSeadragonImageTypes } from \"src/types/open-seadragon\";\nimport { getInfoResponse } from \"src/lib/iiif\";\nimport { useViewerDispatch } from \"src/context/viewer-context\";\n\ninterface OSDProps {\n  _cloverViewerHasPlaceholder: boolean;\n  ariaLabel?: string | null;\n  config: Options;\n  uri: string | undefined;\n  imageType: OpenSeadragonImageTypes;\n  openSeadragonCallback?: (viewer: OpenSeadragon.Viewer) => void;\n}\n\nconst OSD: React.FC<OSDProps> = ({\n  ariaLabel,\n  config,\n  uri,\n  _cloverViewerHasPlaceholder,\n  imageType,\n  openSeadragonCallback,\n}) => {\n  const [osdUri, setOsdUri] = useState<string>();\n  const [openSeadragon, setOpenSeadragon] = useState<OpenSeadragon.Viewer>();\n  const dispatch: any = useViewerDispatch();\n\n  const initializeOSD = useRef(false);\n\n  useEffect(() => {\n    if (!initializeOSD.current) {\n      initializeOSD.current = true;\n\n      if (!openSeadragon) setOpenSeadragon(OpenSeadragon(config));\n    }\n\n    return () => openSeadragon?.destroy();\n  }, []);\n\n  useEffect(() => {\n    if (openSeadragon && openSeadragonCallback)\n      openSeadragonCallback(openSeadragon);\n  }, [openSeadragon, openSeadragonCallback]);\n\n  useEffect(() => {\n    if (openSeadragon && uri !== osdUri) {\n      openSeadragon?.forceRedraw();\n      setOsdUri(uri);\n    }\n  }, [openSeadragon, osdUri, uri]);\n\n  useEffect(() => {\n    if (osdUri && openSeadragon) {\n      switch (imageType) {\n        case \"simpleImage\":\n          openSeadragon?.addSimpleImage({\n            url: osdUri,\n          });\n          break;\n        case \"tiledImage\":\n          getInfoResponse(osdUri).then((tileSource) => {\n            try {\n              if (!tileSource)\n                throw new Error(`No tile source found for ${osdUri}`);\n\n              openSeadragon?.addTiledImage({\n                tileSource,\n                success: () => {\n                  // NOTE: need to check dispatch is a function, because when\n                  // using dev server, dispatch sometimes is set to\n                  // ViewerContext.defaultState object instead of a function\n                  if (typeof dispatch === \"function\") {\n                    dispatch({\n                      type: \"updateOSDImageLoaded\",\n                      OSDImageLoaded: true,\n                    });\n                  }\n                },\n              });\n            } catch (e) {\n              console.error(e);\n            }\n          });\n          break;\n        default:\n          openSeadragon?.close();\n          console.warn(\n            `Unable to render ${osdUri} in OpenSeadragon as type: \"${imageType}\"`,\n          );\n          break;\n      }\n    }\n  }, [imageType, osdUri]);\n\n  return (\n    <Wrapper\n      className=\"clover-iiif-image-openseadragon\"\n      data-testid=\"clover-iiif-image-openseadragon\"\n      data-openseadragon-instance={config.id}\n      hasNavigator={config.showNavigator}\n    >\n      <Controls\n        _cloverViewerHasPlaceholder={_cloverViewerHasPlaceholder}\n        config={config}\n      />\n      {config.showNavigator && (\n        <Navigator\n          id={config.navigatorId}\n          data-testid=\"clover-iiif-image-openseadragon-navigator\"\n        />\n      )}\n      <Viewport\n        id={config.id}\n        data-testid=\"clover-iiif-image-openseadragon-viewport\"\n        role=\"img\"\n        {...(ariaLabel && { \"aria-label\": ariaLabel })}\n      />\n    </Wrapper>\n  );\n};\n\nexport default OSD;\n","import { Options } from \"openseadragon\";\n\nfunction defaultOpenSeadragonConfiguration(\n  openSeadragonInstance: string,\n): Options {\n  return {\n    id: `openseadragon-${openSeadragonInstance}`,\n    navigatorId: `openseadragon-navigator-${openSeadragonInstance}`,\n    loadTilesWithAjax: true,\n    fullPageButton: `fullPage-${openSeadragonInstance}`,\n    homeButton: `reset-${openSeadragonInstance}`,\n    rotateLeftButton: `rotateLeft-${openSeadragonInstance}`,\n    rotateRightButton: `rotateRight-${openSeadragonInstance}`,\n    zoomInButton: `zoomIn-${openSeadragonInstance}`,\n    zoomOutButton: `zoomOut-${openSeadragonInstance}`,\n    showNavigator: true,\n    showFullPageControl: true,\n    showHomeControl: true,\n    showRotationControl: true,\n    showZoomControl: true,\n    navigatorBorderColor: \"transparent\",\n    gestureSettingsMouse: {\n      clickToZoom: true,\n      dblClickToZoom: true,\n      pinchToZoom: true,\n      scrollToZoom: false,\n    },\n  };\n}\n\nexport default defaultOpenSeadragonConfiguration;\n","import { parseImageBody, parseSrc } from \"src/lib/openseadragon-helpers\";\n\nimport { ErrorBoundary } from \"react-error-boundary\";\nimport ErrorFallback from \"src/components/UI/ErrorFallback/ErrorFallback\";\nimport { InternationalString } from \"@iiif/presentation-3\";\nimport { LabeledIIIFExternalWebResource } from \"src/types/presentation-3\";\nimport OSD from \"src/components/Image/OSD/OSD\";\nimport { Options } from \"openseadragon\";\nimport React from \"react\";\nimport defaultOpenSeadragonConfig from \"src/components/Image/OSD/defaults\";\nimport { getLabelAsString } from \"src/lib/label-helpers\";\nimport { v4 as uuidv4 } from \"uuid\";\n\ninterface CloverImageProps {\n  _cloverViewerHasPlaceholder?: boolean;\n  body?: LabeledIIIFExternalWebResource;\n  instanceId?: string;\n  isTiledImage?: boolean;\n  label?: InternationalString | string;\n  src?: string;\n  openSeadragonCallback?: (viewer: any) => void;\n  openSeadragonConfig?: Options;\n}\n\nconst CloverImage: React.FC<CloverImageProps> = ({\n  _cloverViewerHasPlaceholder = false,\n  body,\n  instanceId,\n  isTiledImage = false,\n  label,\n  src = \"\",\n  openSeadragonCallback,\n  openSeadragonConfig = {},\n}) => {\n  const instance = instanceId ? instanceId : uuidv4();\n  const ariaLabel = typeof label === \"string\" ? label : getLabelAsString(label);\n  const config = {\n    ...defaultOpenSeadragonConfig(instance),\n    ...openSeadragonConfig,\n  };\n\n  const { imageType, uri } = body\n    ? parseImageBody(body)\n    : parseSrc(src, isTiledImage);\n\n  if (!uri) return null;\n\n  return (\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\n      <OSD\n        _cloverViewerHasPlaceholder={_cloverViewerHasPlaceholder}\n        ariaLabel={ariaLabel}\n        config={config}\n        imageType={imageType}\n        key={instance}\n        uri={uri}\n        openSeadragonCallback={openSeadragonCallback}\n      />\n    </ErrorBoundary>\n  );\n};\n\nexport default CloverImage;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst StyledImageViewer = styled(\"div\", {\n  width: \"100%\",\n  height: \"400px\",\n  background: \"#6662\",\n  backgroundSize: \"contain\",\n  color: \"white\",\n  position: \"relative\",\n  zIndex: \"1\",\n  overflow: \"hidden\",\n});\n\nexport { StyledImageViewer };\n","import {\n  IIIFExternalWebResource,\n  InternationalString,\n} from \"@iiif/presentation-3\";\n\nimport CloverImage from \"src/components/Image\";\nimport React from \"react\";\nimport { StyledImageViewer } from \"src/components/Scroll/Figure/ImageViewer.styled\";\n\ninterface ImageViewerProps {\n  body: IIIFExternalWebResource;\n  label?: InternationalString | null;\n}\n\nconst ImageViewer: React.FC<ImageViewerProps> = ({ body, label }) => {\n  return (\n    <StyledImageViewer data-testid=\"scroll-figure-image\">\n      <CloverImage\n        body={body}\n        openSeadragonConfig={{ showNavigator: false, showHomeControl: false }}\n        {...(label && { label: label })}\n      />\n    </StyledImageViewer>\n  );\n};\n\nexport default ImageViewer;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst StyledFigure = styled(\"figure\", {\n  figcaption: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    margin: \"1.618rem 0 0\",\n    opacity: 0.9,\n\n    em: {\n      fontSize: \"0.9em\",\n      fontStyle: \"normal\",\n      opacity: 0.7,\n    },\n  },\n});\n\nexport { StyledFigure };\n","import {\n  Annotation,\n  AnnotationPageNormalized,\n  Canvas,\n  CanvasNormalized,\n  ContentResource,\n  ExternalResourceTypes,\n  IIIFExternalWebResource,\n} from \"@iiif/presentation-3\";\n\nexport interface CanvasEntity {\n  canvas: CanvasNormalized | undefined;\n  accompanyingCanvas: Canvas | undefined;\n  annotationPage: AnnotationPageNormalized | undefined;\n  annotations: Array<Annotation | undefined>;\n}\n\nexport const getCanvasByCriteria = (\n  vault: any,\n  item: Canvas,\n  motivation: string,\n  paintingType: Array<ExternalResourceTypes>,\n): CanvasEntity => {\n  const entity: CanvasEntity = {\n    canvas: undefined,\n    accompanyingCanvas: undefined,\n    annotationPage: undefined,\n    annotations: [],\n  };\n\n  const filterAnnotations = (annotation: Annotation) => {\n    if (annotation) {\n      // Handle invalid annotations\n      if (!annotation.body || !annotation.motivation) {\n        console.error(\n          `Invalid annotation after Hyperion parsing: missing either 'body' or 'motivation'`,\n          annotation,\n        );\n        return;\n      }\n\n      let annotationBody = annotation.body as\n        | ContentResource\n        | ContentResource[];\n\n      if (Array.isArray(annotationBody)) annotationBody = annotationBody[0];\n\n      // console.log(\"annotationBody\", annotationBody);\n\n      const resource: IIIFExternalWebResource = vault.get(annotationBody.id);\n\n      if (!resource) return;\n      switch (motivation) {\n        case \"painting\":\n          if (\n            annotation.target === item.id &&\n            annotation.motivation &&\n            annotation.motivation[0] === \"painting\" &&\n            paintingType.includes(resource.type)\n          )\n            annotation.body = resource;\n          return !!annotation;\n        case \"supplementing\":\n          return;\n        default: {\n          throw new Error(`Invalid annotation motivation.`);\n        }\n      }\n    }\n  };\n\n  entity.canvas = vault.get(item);\n\n  if (entity.canvas) {\n    entity.annotationPage = vault.get(entity.canvas.items[0]);\n    entity.accompanyingCanvas = entity.canvas?.accompanyingCanvas\n      ? vault.get(entity.canvas?.accompanyingCanvas)\n      : undefined;\n  }\n\n  /**\n   * get all annotations on an annotation page resource\n   * and add them to the annotations array on the canvas entity\n   */\n  if (entity.annotationPage) {\n    /**\n     * get all initial annotation page resources\n     */\n    const annotationPageResources = vault\n      .get(entity.annotationPage.items)\n      .map((item) => {\n        return {\n          body: vault.get(item.body[0].id),\n          motivation: item.motivation,\n          type: \"Annotation\",\n        };\n      });\n\n    const annotations: Annotation[] = [];\n    annotationPageResources.forEach((annotation) => {\n      /**\n       * determine if type is a choice of multiple annotations\n       * if so, add each annotation to the annotations array\n       */\n      if (annotation.body.type === \"Choice\") {\n        annotation.body.items.forEach((item) =>\n          annotations.push({\n            ...annotation,\n            id: item.id,\n            body: vault.get(item.id),\n          }),\n        );\n\n        /**\n         * if not, add the single annotation to the annotations array\n         */\n      } else {\n        annotations.push(annotation);\n      }\n    });\n\n    /**\n     * filter annotations and scrub invalid annotations\n     */\n    entity.annotations = annotations.filter(filterAnnotations);\n  }\n\n  return entity;\n};\n","import { IIIFExternalWebResource } from \"@iiif/presentation-3\";\nimport { getCanvasByCriteria } from \"src/hooks/use-iiif\";\n\nexport const getPaintingResource = (\n  vault: any,\n  id: string,\n): IIIFExternalWebResource[] | undefined => {\n  const canvasEntity = getCanvasByCriteria(\n    vault,\n    { id, type: \"Canvas\" },\n    \"painting\",\n    [\"Image\", \"Sound\", \"Video\"],\n  );\n\n  if (canvasEntity.annotations.length === 0) return;\n\n  if (canvasEntity.annotations && canvasEntity.annotations)\n    return canvasEntity.annotations.map(\n      (item) => item?.body,\n    ) as IIIFExternalWebResource[];\n\n  return;\n};\n","import React, { useContext } from \"react\";\n\nimport { CanvasNormalized } from \"@iiif/presentation-3\";\nimport FigureCaption from \"src/components/Scroll/Figure/Caption\";\nimport ImageViewer from \"src/components/Scroll/Figure/ImageViewer\";\nimport { ScrollContext } from \"src/context/scroll-context\";\nimport { StyledFigure } from \"src/components/Scroll/Figure/Figure.styled\";\nimport { getPaintingResource } from \"src/hooks/use-iiif\";\n\ninterface CanvasProps {\n  canvas: CanvasNormalized;\n  canvasInfo: {\n    current: number;\n    total: number;\n  };\n}\n\nconst ScrollCanvasFigure: React.FC<CanvasProps> = ({ canvas, canvasInfo }) => {\n  const { state } = useContext(ScrollContext);\n  const { vault } = state;\n\n  const painting = getPaintingResource(vault, canvas.id);\n\n  if (!painting) return null;\n\n  return (\n    <StyledFigure>\n      {painting?.map((body) => (\n        <ImageViewer body={body} key={body?.id} label={canvas?.label} />\n      ))}\n      <FigureCaption canvas={canvas} canvasInfo={canvasInfo} />\n    </StyledFigure>\n  );\n};\n\nexport default ScrollCanvasFigure;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst highlightColor = \"255, 197, 32\"; // #FFC520\n\nconst TextualBody = styled(\"div\", {\n  ul: {\n    padding: \"1rem\",\n  },\n\n  li: {\n    listStyleType: \"disc\",\n\n    li: {\n      listStyleType: \"circle\",\n    },\n  },\n\n  \"span.highlight\": {\n    position: \"relative\",\n    fontWeight: \"bold\",\n\n    \"&::before\": {\n      top: \"0\",\n      position: \"absolute\",\n      display: \"inline\",\n      content: \"\",\n      width: \"calc(100% + 4px)\",\n      height: \"calc(100% + 2px) \",\n      marginLeft: \"-2px\",\n      borderRadius: \"3px\",\n      border: `1px solid rgba(${highlightColor}, 0.2)`,\n      borderBottom: `1px solid rgba(${highlightColor}, 0.618)`,\n      boxShadow: `1px 1px 1px #6661`,\n    },\n\n    \"&::after\": {\n      left: \"0\",\n      top: \"0\",\n      position: \"absolute\",\n      display: \"inline\",\n      content: \"\",\n      width: \"calc(100% + 4px)\",\n      height: \"calc(100% + 2px) \",\n      marginLeft: \"-2px\",\n      marginTop: \"-1px\",\n      borderRadius: \"3px\",\n      backgroundColor: `rgba(${highlightColor}, 0.2)`,\n      zIndex: -1,\n    },\n  },\n});\n\nexport { TextualBody };\n","const getSearchResultSnippet = ({\n  searchString = \"\",\n  content,\n  stringLength = 150,\n}: {\n  searchString?: string;\n  content: string;\n  stringLength?: number;\n}) => {\n  const index = content.toLowerCase().indexOf(searchString.toLowerCase());\n  if (index !== -1) {\n    // Try to find the start of the context slice without breaking words\n    let start = Math.max(0, index - stringLength / 2);\n    let end = Math.min(\n      content.length,\n      index + searchString.length + stringLength / 2,\n    );\n\n    if (start > 0) {\n      const startSpaceIndex = content.lastIndexOf(\" \", start + 1);\n      start = startSpaceIndex > 0 ? startSpaceIndex + 1 : start;\n    }\n    if (end < content.length) {\n      const endSpaceIndex = content.indexOf(\" \", end - 1);\n      end = endSpaceIndex > -1 ? endSpaceIndex : end;\n    }\n\n    content =\n      (start > 0 ? \"... \" : \"\") +\n      content.substring(start, end) +\n      (end < content.length ? \" ...\" : \"\");\n  } else {\n    // If the searchString is not found, return the first stringLength characters without breaking words\n    content = String(content.substring(0, stringLength) + \"...\");\n  }\n\n  return content;\n};\n\nexport { getSearchResultSnippet };\n","import React, { useContext } from \"react\";\n\nimport { EmbeddedResource } from \"@iiif/presentation-3\";\nimport { ScrollContext } from \"src/context/scroll-context\";\nimport { TextualBody } from \"src/components/Scroll/Annotation/Body.styled\";\nimport { getSearchResultSnippet } from \"src/lib/search-helpers\";\nimport useMarkdown from \"@nulib/use-markdown\";\n\nconst ScrollAnnotationBody = ({\n  body,\n  stringLength,\n  type = \"content\",\n}: {\n  body: EmbeddedResource;\n  stringLength?: number;\n  type?: string;\n}) => {\n  const { state } = useContext(ScrollContext);\n  const { searchString } = state;\n\n  let value = String(body.value);\n\n  // Extracting the contextual slice around the searchString without breaking words\n  if (type == \"snippet\")\n    value = getSearchResultSnippet({\n      searchString,\n      content: value,\n      stringLength,\n    });\n\n  let innerHtml: string | undefined;\n  const markdownContent = useMarkdown(value);\n\n  // Converting plain text to HTML if needed\n  if (body.format === \"text/plain\") {\n    const regex = /\\n/g;\n    innerHtml = value?.replace(regex, \"<br />\");\n  }\n\n  // Using the processed markdown as HTML\n  if (body.format === \"text/markdown\") {\n    innerHtml = markdownContent?.html;\n  }\n\n  // If already HTML, use it directly\n  if (body.format === \"text/html\") {\n    innerHtml = value;\n  }\n\n  // Highlighting the searchString\n  if (searchString && innerHtml) {\n    const regex = new RegExp(`(${searchString})`, \"gi\");\n    innerHtml = innerHtml?.replace(\n      regex,\n      (match) => `<span class=\"highlight\">${match}</span>`,\n    );\n  }\n\n  const id = [body.id, type].join(\"-\");\n  const isRtl = [\"ar\"].includes(String(body.language));\n  const dir = isRtl ? \"rtl\" : \"ltr\";\n  const fontSize = isRtl ? \"1.3em\" : \"1em\";\n\n  if (!innerHtml) return null;\n\n  return (\n    <TextualBody\n      dangerouslySetInnerHTML={{ __html: innerHtml }}\n      data-body-id={id}\n      data-testid=\"scroll-item-body\"\n      id={id}\n      dir={dir}\n      css={{ fontSize }}\n    />\n  );\n};\n\nexport default ScrollAnnotationBody;\n","import {\n  CanvasNormalized,\n  EmbeddedResource,\n  Reference,\n} from \"@iiif/presentation-3\";\nimport {\n  PageBreak,\n  StyledItem,\n  StyledItemFigure,\n  StyledItemTextualBodies,\n} from \"src/components/Scroll/Items/Items.styled\";\n\nimport { Label } from \"src/components/Primitives\";\nimport React from \"react\";\nimport { ScrollContext } from \"src/context/scroll-context\";\nimport ScrollFigure from \"src/components/Scroll/Figure/Figure\";\nimport ScrollItemBody from \"src/components/Scroll/Annotation/Body\";\n\ninterface ScrollItemProps {\n  hasItemBreak: boolean;\n  isLastItem: boolean;\n  item: Reference<\"Canvas\">;\n  itemCount: number;\n  itemNumber: number;\n}\n\n// design svg for page break that  a line with triangles symbolizing a page break\n\nconst ScrollItem: React.FC<ScrollItemProps> = ({\n  hasItemBreak,\n  isLastItem,\n  item,\n  itemCount,\n  itemNumber,\n}) => {\n  const { state } = React.useContext(ScrollContext);\n  const { annotations, vault } = state;\n\n  const canvas: CanvasNormalized | undefined = vault?.get(item);\n\n  const annotationBody = annotations\n    ?.filter((annotation) => annotation.target === item.id)\n    ?.map((annotation) => {\n      return annotation?.body?.map((body, index) => (\n        <ScrollItemBody\n          body={body as unknown as EmbeddedResource}\n          key={index}\n        />\n      ));\n    });\n\n  const canvasInfo = {\n    current: itemNumber,\n    total: itemCount,\n  };\n\n  return (\n    <StyledItem\n      data-page-break={hasItemBreak}\n      data-page-number={itemNumber}\n      data-last-item={isLastItem}\n    >\n      <StyledItemFigure>\n        {canvas && <ScrollFigure canvas={canvas} canvasInfo={canvasInfo} />}\n      </StyledItemFigure>\n      <StyledItemTextualBodies>\n        {canvas?.label && (\n          <strong>\n            <Label label={canvas?.label} />{\" \"}\n            {`(${canvasInfo.current} / ${canvasInfo.total})`}\n          </strong>\n        )}\n        <div>{annotationBody ? annotationBody : <p>[Blank]</p>}</div>\n\n        {hasItemBreak && <PageBreak aria-label=\"Page Break\" />}\n      </StyledItemTextualBodies>\n    </StyledItem>\n  );\n};\n\nexport default React.memo(ScrollItem);\n","import { styled } from \"src/styles/stitches.config\";\n\nconst highlightColor = \"255, 197, 32\"; // #FFC520\n\nconst StyledSearchTag = styled(\"span\", {\n  fontWeight: \"700\",\n});\n\nconst StyledSearchAnnotationInformation = styled(\"div\", {\n  display: \"flex\",\n  gap: \"0.25rem\",\n});\n\nconst StyledSearchAnnotationsResultsLabel = styled(\"div\", {\n  fontSize: \"0.9rem\",\n  padding: \"1rem 0.618rem\",\n});\n\nconst StyledSearchAnnotations = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: \"0.5rem\",\n\n  hr: {\n    margin: \"0.618rem\",\n    border: \"none\",\n    borderBottom: \"1px solid #6662\",\n  },\n\n  button: {\n    backgroundColor: \"#6660\",\n    opacity: \"0.7\",\n    transition: \"$all\",\n    padding: \"0.5rem 0.618rem\",\n    fontSize: \"0.9rem\",\n    lineHeight: \"1.1rem\",\n    textAlign: \"left\",\n    borderRadius: \"6px\",\n    border: \"1px solid #6662\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"0.25rem\",\n\n    \"&:hover\": {\n      opacity: \"1\",\n      boxShadow: \"5px 5px 13px #6662\",\n    },\n\n    \"&[data-result=true]\": {\n      backgroundColor: `rgba(${highlightColor}, 0.2)`,\n      borderColor: `rgba(${highlightColor}, 0.2)`,\n      opacity: \"1\",\n\n      \"&:hover\": {\n        backgroundColor: `rgba(${highlightColor}, 0.2)`,\n      },\n    },\n  },\n});\n\nconst StyledSearchInput = styled(\"input\", {\n  margin: \"0\",\n  padding: \"0 1rem 0 2rem\",\n  background: \"none\",\n  zIndex: \"2\",\n  height: \"2rem\",\n  marginLeft: \"1rem\",\n  marginTop: \"1rem\",\n  justifyContent: \"center\",\n  display: \"flex\",\n  alignItems: \"center\",\n  fontSize: \"1rem\",\n  borderRadius: \"2rem\",\n  fontFamily: \"inherit\",\n  backgroundColor: \"$primary\",\n  border: \"none\",\n  color: \"$secondary\",\n  cursor: \"text\",\n  filter: \"drop-shadow(2px 2px 5px #0003)\",\n  transition: \"$all\",\n  boxSizing: \"content-box !important\",\n  flexGrow: \"0\",\n  width: \"100%\",\n\n  \"&:placeholder\": {\n    color: \"inherit\",\n  },\n});\n\nconst StyledSearchIcon = styled(\"span\", {\n  position: \"absolute\",\n  zIndex: \"3\",\n  width: \"2rem\",\n  height: \"2rem\",\n  padding: \"8px\",\n  marginTop: \"1rem\",\n  marginLeft: \"1rem\",\n  color: \"$secondary\",\n  fill: \"$secondary\",\n  stroke: \"$secondary\",\n  transition: \"$all\",\n  cursor: \"text\",\n});\n\nconst StyledSearchBackButton = styled(\"button\", {\n  opacity: \"1\",\n  display: \"flex\",\n  alignItems: \"center\",\n  borderRadius: \"2rem\",\n  width: \"2rem\",\n  height: \"2rem\",\n  alignSelf: \"center\",\n  marginTop: \"1rem\",\n  gap: \"0.35rem\",\n  backgroundColor: \"$accent\",\n  fill: \"$secondary\",\n  flexShrink: \"0\",\n\n  svg: {\n    padding: \"6px\",\n    color: \"inherit\",\n    fill: \"inherit\",\n  },\n\n  '&[aria-disabled=\"true\"]': {\n    opacity: \"0\",\n    display: \"none\",\n  },\n});\n\nconst StyledSearchForm = styled(\"form\", {\n  display: \"flex\",\n  justifyContent: \"space-between\",\n  gap: \"1rem\",\n  width: \"100%\",\n\n  variants: {\n    isPanelExpanded: {\n      true: {\n        [`${StyledSearchIcon}`]: {\n          marginLeft: \"0\",\n        },\n\n        [`& ${StyledSearchInput}`]: {\n          marginLeft: \"0\",\n          backgroundColor: \"$primary\",\n          width: \"auto\",\n          flexGrow: \"1\",\n          //\n        },\n      },\n      false: {\n        //\n      },\n    },\n  },\n});\n\nconst StyledSearch = styled(\"div\", {});\n\nexport {\n  StyledSearch,\n  StyledSearchAnnotations,\n  StyledSearchAnnotationsResultsLabel,\n  StyledSearchAnnotationInformation,\n  StyledSearchBackButton,\n  StyledSearchForm,\n  StyledSearchIcon,\n  StyledSearchInput,\n  StyledSearchTag,\n};\n","import {\n  StyledSearchAnnotationInformation,\n  StyledSearchAnnotations,\n  StyledSearchTag,\n} from \"src/components/Scroll/Panel/Search/Search.styled\";\n\nimport { AnnotationFlattened } from \"src/types/annotations\";\nimport React from \"react\";\nimport ScrollAnnotationBody from \"src/components/Scroll/Annotation/Body\";\n\nconst ScrollSearchResultsButton = ({\n  annotation,\n  isResult,\n}: {\n  annotation: AnnotationFlattened;\n  isResult?: boolean;\n}) => {\n  const bodyId = [annotation?.body?.id, \"content\"].join(\"-\");\n\n  const handleScrollToId = (id) => {\n    if (id) document.getElementById(id)?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <button\n      data-result={isResult ? \"true\" : \"false\"}\n      onClick={() => handleScrollToId(bodyId)}\n      key={bodyId}\n    >\n      <StyledSearchAnnotationInformation>\n        <StyledSearchTag>{annotation.motivation}</StyledSearchTag>\n        <span>{annotation?.body?.language}</span>\n      </StyledSearchAnnotationInformation>\n      <ScrollAnnotationBody\n        body={annotation.body}\n        stringLength={144}\n        type=\"snippet\"\n      />\n    </button>\n  );\n};\n\nconst ScrollSearchResults = ({\n  results,\n}: {\n  results: {\n    found: AnnotationFlattened[];\n    notFound: AnnotationFlattened[];\n  };\n}) => {\n  return (\n    <StyledSearchAnnotations>\n      {results.found.map((annotation) => (\n        <ScrollSearchResultsButton\n          annotation={annotation}\n          isResult\n          key={annotation.id}\n        />\n      ))}\n      <hr />\n      {results.notFound.map((annotation) => (\n        <ScrollSearchResultsButton\n          annotation={annotation}\n          key={annotation.id}\n        />\n      ))}\n    </StyledSearchAnnotations>\n  );\n};\n\nexport default ScrollSearchResults;\n","import FlexSearch, { IndexOptionsForDocumentSearch } from \"flexsearch\";\nimport React, { useContext } from \"react\";\nimport {\n  StyledSearch,\n  StyledSearchAnnotationsResultsLabel,\n} from \"src/components/Scroll/Panel/Search/Search.styled\";\n\nimport { AnnotationFlattened } from \"src/types/annotations\";\nimport { ScrollContext } from \"src/context/scroll-context\";\nimport ScrollSearchResults from \"src/components/Scroll/Panel/Search/Results\";\n\nconst config: IndexOptionsForDocumentSearch<{\n  id: string;\n  content: string;\n}> = {\n  charset: \"latin:extra, arabic:extra, cyrillic:extra, cjk:extra\",\n  optimize: true,\n  tokenize: \"full\",\n  resolution: 9,\n  document: {\n    id: \"id\",\n    index: \"content\",\n  },\n};\n\nconst ScrollSearch = () => {\n  const { state } = useContext(ScrollContext);\n  const { annotations, searchString = \"\" } = state;\n\n  const index = new FlexSearch.Document(config);\n  const indexIds: string[] = [];\n  annotations?.forEach((annotation) => {\n    annotation?.body?.forEach((body) => {\n      // @ts-expect-error\n      const content = body?.value?.replace(/\\n/g, \"\");\n      indexIds.push(body?.id);\n      index.add({\n        id: body?.id,\n        content,\n      });\n    });\n  });\n\n  function mapAnnotationBodies(array): AnnotationFlattened[] {\n    return array.map((id) => {\n      return annotations\n        ?.filter((annotation) => {\n          return annotation.body.find((body) => body.id === id);\n        })\n        .map((annotation) => {\n          const bodyIndex = annotation.body.findIndex((body) => body.id === id);\n          return {\n            ...annotation,\n            body: annotation.body[bodyIndex],\n          };\n        })\n        .shift();\n    });\n  }\n\n  const searchResults = index?.search(searchString).reduce((acc, curr) => {\n    return [...new Set([...acc, ...curr.result])];\n  }, []);\n\n  const results: {\n    found: AnnotationFlattened[];\n    notFound: AnnotationFlattened[];\n  } = {\n    found: mapAnnotationBodies(searchResults),\n    notFound: mapAnnotationBodies(\n      indexIds.filter((id) => !searchResults.includes(id)),\n    ),\n  };\n\n  return (\n    <StyledSearch>\n      {searchString && (\n        <StyledSearchAnnotationsResultsLabel>\n          {results.found?.length} results for <strong>{searchString}</strong>\n        </StyledSearchAnnotationsResultsLabel>\n      )}\n      <ScrollSearchResults results={results} />\n    </StyledSearch>\n  );\n};\n\nexport default ScrollSearch;\n","import React, { useContext, useEffect, useRef } from \"react\";\nimport {\n  StyledSearchBackButton,\n  StyledSearchForm,\n  StyledSearchIcon,\n  StyledSearchInput,\n} from \"src/components/Scroll/Panel/Search/Search.styled\";\n\nimport { ScrollContext } from \"src/context/scroll-context\";\n\nconst SearchIcon: React.FC = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <title>Search</title>\n      <path d=\"M456.69 421.39L362.6 327.3a173.81 173.81 0 0034.84-104.58C397.44 126.38 319.06 48 222.72 48S48 126.38 48 222.72s78.38 174.72 174.72 174.72A173.81 173.81 0 00327.3 362.6l94.09 94.09a25 25 0 0035.3-35.3zM97.92 222.72a124.8 124.8 0 11124.8 124.8 124.95 124.95 0 01-124.8-124.8z\" />\n    </svg>\n  );\n};\n\nconst CloseIcon: React.FC = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n      <title>Close</title>\n      <path d=\"M289.94 256l95-95A24 24 0 00351 127l-95 95-95-95a24 24 0 00-34 34l95 95-95 95a24 24 0 1034 34l95-95 95 95a24 24 0 0034-34z\" />\n    </svg>\n  );\n};\n\ninterface PanelToggleProps {\n  togglePanel: (isPanelExpanded: boolean) => void;\n  isPanelExpanded: boolean;\n}\n\nconst PanelToggle: React.FC<PanelToggleProps> = ({\n  togglePanel,\n  isPanelExpanded,\n}) => {\n  const { dispatch, state } = useContext(ScrollContext);\n  const { searchString } = state;\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleFocus = () =>\n    inputRef.current === document.activeElement && togglePanel(true);\n\n  const focusInput = () => inputRef?.current?.focus();\n\n  const blurInput = () => {\n    inputRef.current?.blur();\n    clearInput();\n    togglePanel(false);\n    dispatch({\n      payload: \"\",\n      type: \"updateSearchString\",\n    });\n  };\n\n  const clearInput = () => {\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n  };\n\n  const handleClose = (e) => {\n    e.preventDefault();\n    blurInput();\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Escape\") {\n      e.preventDefault();\n      blurInput();\n    }\n  };\n\n  useEffect(() => {\n    document?.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document?.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!inputRef?.current) return;\n\n    inputRef.current.addEventListener(\"focus\", handleFocus);\n    inputRef.current.addEventListener(\"blur\", handleFocus);\n\n    return () => {\n      if (inputRef.current) {\n        inputRef.current.removeEventListener(\"focus\", handleFocus);\n        inputRef.current.removeEventListener(\"blur\", handleFocus);\n      }\n    };\n  }, []);\n\n  const handleSearchChange = (e) => {\n    dispatch({\n      payload: e?.target?.value,\n      type: \"updateSearchString\",\n    });\n  };\n\n  return (\n    <StyledSearchForm\n      id=\"scroll-search\"\n      autoComplete=\"off\"\n      isPanelExpanded={isPanelExpanded}\n    >\n      <StyledSearchIcon onClick={focusInput}>\n        <SearchIcon />\n      </StyledSearchIcon>\n      <StyledSearchInput\n        ref={inputRef}\n        name=\"clover-search\"\n        type=\"text\"\n        placeholder=\"Search...\"\n        defaultValue={searchString}\n        onChange={handleSearchChange}\n      />\n      <StyledSearchBackButton\n        aria-disabled={!isPanelExpanded}\n        aria-label=\"Close search panel\"\n        onClick={handleClose}\n        disabled={!isPanelExpanded}\n      >\n        <CloseIcon />\n      </StyledSearchBackButton>\n    </StyledSearchForm>\n  );\n};\n\nexport default PanelToggle;\n","import { styled } from \"src/styles/stitches.config\";\n\nconst StyledPanel = styled(\"div\", {\n  display: \"flex\",\n  flexDirection: \"column\",\n  flexGrow: \"1\",\n  flexShrink: \"0\",\n  position: \"relative\",\n  zIndex: \"1\",\n  maxWidth: \"100%\",\n  marginTop: \"1rem\",\n  transition: \"$all\",\n\n  variants: {\n    isPanelExpanded: {\n      true: {\n        zIndex: 1,\n        opacity: 1,\n        transform: \"translateX(0)\",\n      },\n      false: {\n        zIndex: -1,\n        opacity: 0,\n        transform: \"translateX(-2.618rem)\",\n        transitionDelay: \"0\",\n        transition: \"none\",\n      },\n    },\n  },\n});\n\nexport { StyledPanel };\n","import { useEffect, useState } from \"react\";\n\ninterface Position {\n  top: number;\n  left: number;\n}\n\n/**\n * Hook that returns an element's distance from the top of the visible window.\n */\nexport const useDistanceFromViewportTop = (\n  ref: React.RefObject<HTMLElement>,\n): Position => {\n  const [position, setPosition] = useState<Position>({ top: 0, left: 0 });\n\n  useEffect(() => {\n    const handleUpdatePosition = () => {\n      if (ref.current) {\n        const rect = ref.current.getBoundingClientRect();\n        setPosition({\n          top: rect.top,\n          left: rect.left,\n        });\n      }\n    };\n\n    // Update position for both scroll and resize events\n    window.addEventListener(\"scroll\", handleUpdatePosition);\n    window.addEventListener(\"resize\", handleUpdatePosition);\n    handleUpdatePosition(); // Call once to set the initial value.\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleUpdatePosition);\n      window.removeEventListener(\"resize\", handleUpdatePosition);\n    };\n  }, [ref]);\n\n  return position;\n};\n","import React, { useContext, useRef } from \"react\";\nimport {\n  StyledScrollAside,\n  StyledScrollFixed,\n} from \"src/components/Scroll/Layout/Layout.styled\";\n\nimport { ScrollContext } from \"src/context/scroll-context\";\nimport ScrollSearchResults from \"src/components/Scroll/Panel/Search/Search\";\nimport SearchForm from \"src/components/Scroll/Panel/Search/Form\";\nimport { StyledPanel } from \"src/components/Scroll/Panel/Panel.styled\";\nimport { useDistanceFromViewportTop } from \"src/hooks/useDistanceFromViewportTop\";\n\ninterface ScrollToggleProps {\n  isPanelExpanded: boolean;\n  handlePanel: (status: boolean) => void;\n}\n\nconst ScrollPanel: React.FC<ScrollToggleProps> = ({\n  isPanelExpanded,\n  handlePanel,\n}) => {\n  const scrollAsideRef = useRef<HTMLDivElement>(null);\n\n  const { state } = useContext(ScrollContext);\n  const { options } = state;\n  const { offset } = options;\n\n  const { top } = useDistanceFromViewportTop(scrollAsideRef);\n  const isAnchored = top ? top < offset : false;\n  const articleWidth = scrollAsideRef?.current?.offsetWidth;\n  const panelWidth = articleWidth ? articleWidth * 0.5 : articleWidth;\n  const defaultFormWidth = panelWidth ? panelWidth - 315 : 180;\n\n  const fixedStyles = {\n    top: isAnchored ? offset : 0,\n    width: `calc(${panelWidth}px - 1.318rem)`,\n    maxWidth: isPanelExpanded ? \"100%\" : `${defaultFormWidth}px`,\n    minWidth: \"130px\",\n  };\n\n  return (\n    <StyledScrollAside\n      ref={scrollAsideRef}\n      className={isAnchored ? \"anchor\" : \"\"}\n      data-testid=\"scroll-panel\"\n    >\n      <StyledScrollFixed style={fixedStyles}>\n        <SearchForm\n          togglePanel={handlePanel}\n          isPanelExpanded={isPanelExpanded}\n        />\n        <StyledPanel\n          data-testid=\"scroll-panel-results\"\n          data-panel-expanded={isPanelExpanded}\n          isPanelExpanded={isPanelExpanded}\n        >\n          {isPanelExpanded && <ScrollSearchResults />}\n        </StyledPanel>\n      </StyledScrollFixed>\n    </StyledScrollAside>\n  );\n};\n\nexport default ScrollPanel;\n","import React, { useState } from \"react\";\n\nimport { Reference } from \"@iiif/presentation-3\";\nimport ScrollItem from \"src/components/Scroll/Items/Item\";\nimport ScrollPanel from \"src/components/Scroll/Panel/Panel\";\nimport { StyledScrollItems } from \"src/components/Scroll/Items/Items.styled\";\n\nconst ScrollItems = ({ items }: { items: Reference<\"Canvas\">[] }) => {\n  const [isPanelExpanded, setIsPanelExpanded] = useState(false);\n\n  const handlePanel = (status) => setIsPanelExpanded(status);\n  return (\n    <>\n      <ScrollPanel\n        isPanelExpanded={isPanelExpanded}\n        handlePanel={handlePanel}\n      />\n      <StyledScrollItems data-figures-visible={!isPanelExpanded}>\n        {items.map((item, index) => {\n          const itemNumber = index + 1;\n          const isLastItem = itemNumber === items.length;\n\n          return (\n            <ScrollItem\n              item={item}\n              hasItemBreak={itemNumber < items.length}\n              isLastItem={isLastItem}\n              key={item.id}\n              itemCount={items.length}\n              itemNumber={itemNumber}\n            />\n          );\n        })}\n      </StyledScrollItems>\n    </>\n  );\n};\n\nexport default ScrollItems;\n","import {\n  AnnotationNormalized,\n  AnnotationPageNormalized,\n  CanvasNormalized,\n  Reference,\n} from \"@iiif/presentation-3\";\nimport { useEffect, useState } from \"react\";\n\nconst useManifestAnnotations = (items, vault) => {\n  const [processedAnnotations, setProcessedAnnotations] = useState<\n    AnnotationNormalized[]\n  >([]);\n\n  useEffect(() => {\n    if (!vault) return;\n\n    const allAnnotations: AnnotationNormalized[] = [];\n\n    items?.forEach((canvasRef: Reference<\"Canvas\">) => {\n      const canvas: CanvasNormalized = vault.get(canvasRef);\n      canvas?.annotations?.forEach(\n        (annotationPageRef: Reference<\"AnnotationPage\">) => {\n          const annotationPage: AnnotationPageNormalized =\n            vault.get(annotationPageRef);\n          annotationPage?.items?.forEach(\n            (annotationRef: Reference<\"Annotation\">) => {\n              const annotation: AnnotationNormalized = vault.get(annotationRef);\n              if (annotation) {\n                allAnnotations.push({\n                  ...annotation,\n                  body: annotation?.body?.map((bodyRef) => vault.get(bodyRef)),\n                });\n              }\n            },\n          );\n        },\n      );\n    });\n\n    /**\n     * Removes duplicate annotations if they exist\n     */\n    const uniqueAnnotations = allAnnotations.reduce(\n      (accumulator: AnnotationNormalized[], current: AnnotationNormalized) => {\n        if (!accumulator.some((a: AnnotationNormalized) => a.id === current.id))\n          accumulator.push(current);\n        return accumulator;\n      },\n      [],\n    );\n\n    setProcessedAnnotations(uniqueAnnotations);\n  }, [items, vault]);\n\n  return processedAnnotations;\n};\n\nexport default useManifestAnnotations;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { ScrollContext, ScrollProvider } from \"src/context/scroll-context\";\n\nimport { ManifestNormalized } from \"@iiif/presentation-3\";\nimport ScrollHeader from \"src/components/Scroll/Layout/Header\";\nimport ScrollItems from \"src/components/Scroll/Items/Items\";\nimport { StyledScrollWrapper } from \"src/components/Scroll/Layout/Layout.styled\";\nimport useManifestAnnotations from \"src/hooks/useManifestAnnotations\";\n\nexport interface CloverScrollProps {\n  iiifContent: string;\n  options;\n}\n\nconst RenderCloverScroll = ({ iiifContent }: { iiifContent: string }) => {\n  const [manifest, setManifest] = useState<ManifestNormalized>();\n\n  const { state, dispatch } = useContext(ScrollContext);\n  const { vault } = state;\n\n  const annotations = useManifestAnnotations(manifest?.items, vault);\n\n  useEffect(() => {\n    if (!vault) return;\n\n    vault\n      .load(iiifContent)\n      .then((data: ManifestNormalized) => data && setManifest(data))\n      .catch((error: Error) =>\n        console.error(`Manifest ${iiifContent} failed to load: ${error}`),\n      );\n  }, [iiifContent, vault]);\n\n  useEffect(() => {\n    dispatch({\n      type: \"updateAnnotations\",\n      payload: annotations,\n    });\n  }, [annotations, dispatch]);\n\n  if (!manifest) return null;\n\n  return (\n    <StyledScrollWrapper>\n      {manifest.label && <ScrollHeader label={manifest.label} />}\n      {manifest.items && <ScrollItems items={manifest.items} />}\n    </StyledScrollWrapper>\n  );\n};\n\nconst CloverScroll: React.FC<CloverScrollProps> = ({\n  iiifContent,\n  options,\n}) => {\n  return (\n    <ScrollProvider options={options}>\n      <RenderCloverScroll iiifContent={iiifContent} />\n    </ScrollProvider>\n  );\n};\n\nexport default CloverScroll;\n"],"names":["initialState","Vault","reducer","state","action","ScrollContext","createContext","ScrollProvider","props","children","manifest","options","dispatch","useReducer","React","getLabelEntries","label","lang","codes","getLabelAsString","delimiter","entries","createMarkup","html","sanitizeHTML","sanitizeAttributes","remove","key","attributes","sanitizeHtml","hue","theme","media","styled","css","keyframes","createTheme","createStitches","StyledLabel","Label","as","defaultState","PrimitivesContext","usePrimitivesContext","context","useContext","PrimitivesProvider","getRealPropertyValue","obj","property","StyledMarkup","Markup","markup","MarkupWrapper","Summary","summary","StyledScrollFixed","StyledScrollAside","StyledScrollHeader","StyledScrollWrapper","ScrollHeader","StyledItem","StyledItemFigure","StyledItemTextualBodies","PageBreak","StyledScrollItems","FigureCaption","canvas","current","total","$","OpenSeadragon","svgNS","Overlay","viewer","self","p","zoom","rotation","flipped","containerSizeX","scaleX","scaleY","node","handler","getInfoResponse","id","response","json","error","getImageServiceURI","service","imageService","imageServiceURI","OpenSeadragonImageTypes","parseImageBody","body","hasImageService","uri","imageType","parseSrc","src","isTiledImage","ErrorFallbackStyled","Headline","ErrorBody","ErrorFallback","message","Navigator","Viewport","Wrapper","Item","Button","className","dataButton","defaultAutoScrollSettings","defaultConfigOptions","expandAutoScrollOptions","value","result","validateAutoScrollSettings","behavior","block","validBehaviors","validPositions","expandedAutoScrollOptions","_b","_a","uuidv4","ViewerStateContext","ViewerDispatchContext","useViewerState","useViewerDispatch","ZoomIn","ZoomOut","ZoomFullScreen","Reset","Rotate","Controls","_cloverViewerHasPlaceholder","config","viewerState","activeCanvas","configOptions","openSeadragonViewer","plugins","vault","activeManifest","renderPlugins","plugin","i","PluginComponent","_d","_c","OSD","ariaLabel","openSeadragonCallback","osdUri","setOsdUri","useState","openSeadragon","setOpenSeadragon","initializeOSD","useRef","useEffect","tileSource","e","defaultOpenSeadragonConfiguration","openSeadragonInstance","CloverImage","instanceId","openSeadragonConfig","instance","defaultOpenSeadragonConfig","ErrorBoundary","StyledImageViewer","ImageViewer","StyledFigure","getCanvasByCriteria","item","motivation","paintingType","entity","filterAnnotations","annotation","annotationBody","resource","annotationPageResources","annotations","getPaintingResource","canvasEntity","ScrollCanvasFigure","canvasInfo","painting","highlightColor","TextualBody","getSearchResultSnippet","searchString","content","stringLength","index","start","end","startSpaceIndex","endSpaceIndex","ScrollAnnotationBody","type","innerHtml","markdownContent","useMarkdown","regex","match","isRtl","dir","fontSize","ScrollItem","hasItemBreak","isLastItem","itemCount","itemNumber","ScrollItemBody","ScrollFigure","ScrollItem$1","StyledSearchTag","StyledSearchAnnotationInformation","StyledSearchAnnotationsResultsLabel","StyledSearchAnnotations","StyledSearchInput","StyledSearchIcon","StyledSearchBackButton","StyledSearchForm","StyledSearch","ScrollSearchResultsButton","isResult","bodyId","handleScrollToId","ScrollSearchResults","results","ScrollSearch","FlexSearch","indexIds","mapAnnotationBodies","array","bodyIndex","searchResults","acc","curr","SearchIcon","CloseIcon","PanelToggle","togglePanel","isPanelExpanded","inputRef","handleFocus","focusInput","blurInput","clearInput","handleClose","handleKeyDown","handleSearchChange","StyledPanel","useDistanceFromViewportTop","ref","position","setPosition","handleUpdatePosition","rect","ScrollPanel","handlePanel","scrollAsideRef","offset","top","isAnchored","articleWidth","panelWidth","defaultFormWidth","fixedStyles","SearchForm","ScrollItems","items","setIsPanelExpanded","status","useManifestAnnotations","processedAnnotations","setProcessedAnnotations","allAnnotations","canvasRef","annotationPageRef","annotationPage","annotationRef","bodyRef","uniqueAnnotations","accumulator","a","RenderCloverScroll","iiifContent","setManifest","data","CloverScroll"],"mappings":"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"}