
importerForms = {

	general = {
		formTitle = Media Upload,
		formDescription = "Media upload for Studio projects"
		shortNameSingular = Studio media submission,
		shortNamePlural = Studio media submissions,
		
		# User roles to restrict this form to
		#restrictToRoles = [],
		
		table = ca_objects,
		type = album,
		access = 0,
		status = 0,
		
		representation_type = front,
		representation_status = 0,
		representation_access = 1,

		showInUserSubmissionList = 0,
		
		# submission_statuses list code to apply to newly created records
		submission_status = submitted,
		
		alwaysUseLocale = en_US,
		
		# template for idno; use "%" as placeholder for serial numbers
		idno = "<year>.%",
		
		display = "^title <ifdef code='date'>(^date)</ifdef>",
		
		
		# List of fields in form
		#
		#	errorPriority indicates how to handle errors in a given field. 
		#		Possible values are:
		#			"critical" => any error should prevent submission of form [DEFAULT]
		#			"optional" => if error occurs ignore value and proceed
		content = {
			title = {
				bundle = ca_objects.preferred_labels.name,
				label = Title,
				
				height = 2,
				required = 1,
				
				description = "A title for the uploaded media batch."
			},
			date =  {
				bundle = ca_objects.date,
				label = Date of action,
				
				useDatePicker = 0,
				
				dontRepeat = 1,
				required = 1,
				
				default = __today__,
				
				description = "Date or date range that the uploaded media depicts. Dates in text form (Month Day, Year) or delimited form (dd/mm/yyyy) are allowed. Date ranges can be entered as two dates separated by a dash (\"-\").",
			},
			action =  {
				bundle = ca_collections,
				restrictToTypes = [action],
				label = Related Action,
				
				relationshipType = part_of,
				
				render = checkboxes,
				
				selectUsing = include_in_importer,
				whereValue = show,
				
				sort = ca_collections.preferred_labels.name,
				
				required = 1,
				
#				options = {
#					AgH20 = 236,
#					Anabolic Monument (NAC) = 209,
#					Anabolic Monument (MTA) = 241,
#					BTR = 214,
#					Farmlab = 202,
#					IOU = 234,
#					Not a Cornfield = 218,
#					Optics = 198,
#					Sonic Division = 223,
#					Special Project in Archiving = 229,
#					Strawberry Flag = 1,
#					Undevelopment 1 = 230,
#					100 Mules = 216
#				},
				
				description = "Select action(s) related to the uploaded media.",
			},
			people =  {
				bundle = ca_entities,
				label = Related People,
				
				relationshipType = related,
				
				required = 0,
				
				render = checkboxes,
				
				selectUsing = include_in_importer,
				whereValue = show,
				
				sort = ca_entities.preferred_labels.surname,
				sortDirection = asc,
				
#				options = {
#					Aaron Ebensperger => 439,
#					Alex Tanasi => 464,
#					Andrea Denike Martinez => 599,
#					Ben Borden => 600,
#					Carolyne Aycaguer => 138,
#					Cascade Wilhelm => 467,
#					Cynthia Bautista => 142,
#					Dani Lunn = 234,
#					Dave Wilson Baine => 434,
#					DeRainer Holland => 108,
#					Diego Zapata => 601,
#					Douglas Lee => 69,
#					Emily Lacy => 447,
#					Isabella Izzy Santana => 570,
#					Jaime Lopez => 8,
#					James Oliver => 453,
#					Jen Curtis => 82,
#					Josh White => 37,
#					Kavi Lal => 603,
#					Kelly Majewski=> 595,
#					Lauren Bon => 1,
#					Leigh Adams => 487,
#					Michel Breard => 431,
#					Milli Macen-Moore => 393,
#					O-Lan Jones=> 408,
#					Rich Nielsen => 7,
#					Rochelle Fabb => 6,
#					Roxanne Steinberg => 5,
#					Stefano Galli => 598,
#					Tristan Duke => 232,
#				},
				description = "Check all that apply.",
			},
			other_people = {
				bundle = ca_objects.other_people,
				label = Other People,
				description = "Add names of any additional people involved with the uploaded media here.",
				
				height = 2
			},
			media_type =  {
				bundle = ca_objects.physical_media,
				label = Media Type,
				description = "Check all that apply",
				
				render = checkboxes
			},
			description = {
				bundle = ca_objects.description,
				label = Description,
				description = "A description of the uploaded media.",
				height = 12,
				
				required = 1
			},	
			tags = {
				bundle = ca_item_tags,
				label = Tags,
				description = "Keyword to apply to uploaded items. Separate multiple keywords with commas or semicolons.",
				height = 4
			},	
		}
		options = {
			# importMode = type of image
			#	Possible values are:
			#		"media" => create one record per-media item; each record has entered metadata [DEFAULT]
			#		"hierarchy" => create root record with metadata; add media as child records
			#		"allInOne" => create single record with entered metadata; link all media to that record 
			importMode = hierarchy,
			
			# What to do when there are errors?
			#	Possible values are:
			#		"requireNoErrors" => only save when there are no metadata errors
			#		"allowErrors" => save if there are non-critical errors
			
			errorPolicy = requireNoErrors,
		}
	}
	
}
