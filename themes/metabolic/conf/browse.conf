# Browse cache TTL
cache_timeout = 0

# Highlight search terms in results?
do_highlighting = 0


# BrowseTypes keys to include in general search. 
# This also controls the order blocks of results appear in general search
generalSearchTargets = [collections, exhibitions, publications, objects]

# Available named browses
browseTypes = {
	objects = {
		displayName = _(Assets),
		labelSingular = _("Asset"),
 		labelPlural = _("Assets"),
		table = ca_objects,
		restrictToTypes = [],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, map
		views = {
			images = {
				result_caption = "<div class='text-center'>
									<div class='text-body-secondary'>^ca_objects.idno</div>
									<div class='fw-medium lh-sm fs-5'><l>^ca_objects.preferred_labels</l></div>
								</div>",
				image_format = contain, # --- contain or cover - default is cover
			},
			# list = {
			# 	result_caption = "<div class='card-title'><small class='text-body-secondary'>^ca_objects.idno</small><div class='fw-medium lh-sm fs-5'><l>^ca_objects.preferred_labels</l></div></div><ifdef code='ca_objects.work_description'><p class='card-text small lh-sm text-truncate'>^ca_objects.work_description</p></ifdef>",
			# 	image_format = contain, # --- contain or cover - default is cover
			# 	list_format = image, # --- image or text where text is a simple grid of cards with no media
			# },
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		generalSearchOptions = {
			resultCaption = "<div class='card-title'><small class='text-body-secondary'>^ca_objects.idno</small><div class='fw-medium lh-sm fs-5'><l>^ca_objects.preferred_labels</l></div></div><ifdef code='ca_objects.work_description'><p class='card-text small lh-sm text-truncate'>^ca_objects.work_description</p></ifdef>",
			searchView = general_image_results_html.php,
			imageFormat = cover, # --- contain or cover - default is cover
			numItemsToShow = 8,
			sortBy = _natural,
			sortDirection = asc,
		}
		
	},
	collections = {
		displayName = _(Actions),
		labelSingular = _("Action"),
 		labelPlural = _("Actions"),
		table = ca_collections,
		restrictToTypes = [],
		dontShowInBrowseMenu = 1, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br><l>^ca_collections.preferred_labels</l>",
			}, 
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br><l>^ca_collections.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		generalSearchOptions = {
			resultCaption = "<l class='pt-3 pb-4 px-3 d-flex align-items-center justify-content-center bg-body-tertiary h-100 w-100 text-black'>^ca_collections.preferred_labels</l>",
			searchView = general_list_results_html.php,
			numItemsToShow = 7,
			sortBy = _natural,
			sortDirection = asc,
		}
	},
	entities = {
		displayName = _(People/Orgs),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		showLetterBarFrom = ca_entity_labels.surname,
		showLetterBarSorts = [ca_entity_labels.surname;ca_entity_labels.forename],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				#result_caption = "<div class='card-title text-center'><ifdef code='ca_entities.idno'><small class='text-body-secondary'><l>^ca_entities.idno</l></small></ifdef><div class='fw-medium lh-sm fs-5'><l>^ca_entities.preferred_labels</l></div></div>",
				result_caption = "<div class='card-title text-center'><ifdef code='ca_entities.idno'><small class='text-body-secondary'>^ca_entities.idno</small></ifdef><div class='fw-medium lh-sm fs-5'>^ca_entities.preferred_labels</div></div>",
				#image_format = cover, # --- contain or cover - default is cover
				list_format = text, # --- image or text where text is a simple grid of cards with no media

			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		},
		generalSearchOptions = {
			resultCaption = "<l class='pt-3 pb-4 px-3 d-flex align-items-center justify-content-center bg-body-tertiary h-100 w-100 text-black'>^ca_entities.preferred_labels.displayname</l>",
			searchView = general_list_results_html.php,
			numItemsToShow = 7,
			sortBy = _natural,
			sortDirection = asc,
		}
		
	},
	exhibitions = {
		displayName = _(Exhibitions),
		labelSingular = _("exhibition"),
 		labelPlural = _("exhibitions"),
		table = ca_occurrences,
		restrictToTypes = [exhibition],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<small><l>^ca_occurrences.idno</l></small><br><l>^ca_occurrences.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		},
		generalSearchOptions = {
			resultCaption = "<l class='pt-3 pb-4 px-3 d-flex align-items-center justify-content-center bg-body-tertiary h-100 w-100 text-black'>^ca_occurrences.preferred_labels</l>",
			searchView = general_list_results_html.php,
			numItemsToShow = 7,
			sortBy = _natural,
			sortDirection = asc
		}
		# facet_group = exhibitions
	}
	events = {
		displayName = _(Events),
		labelSingular = _("event"),
 		labelPlural = _("events"),
		table = ca_occurrences,
		restrictToTypes = [action],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<small><l>^ca_occurrences.idno</l></small><br><l>^ca_occurrences.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		},
		generalSearchOptions = {
			resultCaption = "<l class='pt-3 pb-4 px-3 d-flex align-items-center justify-content-center bg-body-tertiary h-100 w-100 text-black'>^ca_occurrences.preferred_labels</l>",
			searchView = general_list_results_html.php,
			numItemsToShow = 7,
			sortBy = _natural,
			sortDirection = asc
		}
		
	},
	chronology = {
		displayName = _(Chronology),
		labelSingular = _("chronology"),
 		labelPlural = _("chronology"),
		table = ca_occurrences,
		restrictToTypes = [action],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				representation = "<unit relativeTo='ca_objects' length='1'>^ca_object_representations.media.widepreview</unit>",
				caption = "<div class='card-title mb-2'><l>^ca_occurrences.preferred_labels.name</l></div>"
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
		
		additionalData = {
			date = ca_occurrences.date,
			year = ca_occurrences.date%normalize=years,
			description = ca_occurrences.description,
		}
		
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
}

views = {
	images = {
		icon = bi-grid-fill
	},
	list = {
		icon = bi-list-task
	},
	map = {
		icon = bi-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1


ca_collections = {
	name = _("Actions"),
	facets = {
		bio_regions_facet = {
			type = attribute,
			element_code = ca_collections.bio_regions,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Bio-Region"),
			label_plural = _("Bio-Regions")
		},
		subject = {
			type = attribute,
			element_code = ca_collections.subject,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Theme"),
			label_plural = _("Themes")
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
#			requires = decade_facet,
			group_mode = none,
			multiple=1,
			
			label_singular = _("year"),
			label_plural = _("years")		
		}
	}
}

ca_objects = {
	name = _("Objects"),
	facets = {
		bio_regions_facet = {
			type = attribute,
			element_code = ca_objects.bio_regions,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Bio-Region"),
			label_plural = _("Bio-Regions")
		},
		subject = {
			type = attribute,
			element_code = ca_objects.subject,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Theme"),
			label_plural = _("Themes")
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			order_by_label_fields = [name_plural],

			label_singular = _("type"),
			label_plural = _("types")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,
			multiple=1,
			
			data = {
				image = "<unit relativeTo='ca_objects' start='0' length='1'>^ca_object_representations.media.medium.url</unit>"
			},

			label_singular = _("action"),
			label_plural = _("actions"),
			description = _("Find objects according to the Action they belong to."),
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
#			requires = decade_facet,
			group_mode = none,
			
			multiple=1,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		physical_media = {
			type = attribute,
			element_code = physical_media,
			
			group_mode = none,
			multiple=1,
			
			label_singular = _("Physical Media"),
			label_plural = _("Physical Media"),
		},
		processes_and_techniques = {
			type = attribute,
			element_code = processes_and_techniques,
			
			group_mode = none,
			multiple=1,
			
			label_singular = _("Processes and techniques"),
			label_plural = _("Processes and techniques"),
		},
		exhibition_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 0,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [exhibition],
			
			show_all_when_first_facet = 0,
			multiple=1,
			
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("exhibition"),
			label_plural = _("exhibitions"),
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("has media"),
			label_plural = _("has media"),
			description = _("Find objects that have associated media."),
		},
		has_metapoetics_facet = {
			type = has,
			
			table = ca_objects,
			element_code = metapoetics,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has metapoetics"),
			label_no = _("Does not have metapoetics"),
			
			single_value = 1,
			
			label_singular = _("has metapoetics"),
			label_plural = _("has metapoetics"),
			description = _("Find objects that have metapoetics."),
		},
		action_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 0,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [action],
			
			show_all_when_first_facet = 0,
			
			multiple=1,
			
			requires = x,
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("exhibition"),
			label_plural = _("exhibitions"),
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			requires=x,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
		}
	}
}

ca_occurrences = {
	name = _("Events/Exhibitons/Lectures/Presentations"),
	facets = {
		project = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_occurrences_x_collections,
			restrict_to_types = [],
			
			group_mode = none,
			multiple=1,
			
			data = {
				image = "<unit relativeTo='ca_objects' start='0' length='1'>^ca_object_representations.media.medium.url</unit>"
			},

			label_singular = _("project"),
			label_plural = _("projects")
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
#			requires = decade_facet,

			group_mode = none,
			multiple=1,
			
			label_singular = _("year"),
			label_plural = _("years")		
		},
		venue_facet = {
			type = authority,
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [org],
			
			group_mode = none,
			multiple=1,
			facet_group = [exhibitions],

			label_singular = _("venues"),
			label_plural = _("venues")
		}
	}
}
