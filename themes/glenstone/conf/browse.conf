#
cache_timeout = 0
dont_cache = 1
#
browseTypes = {
	archives = {
		displayName = _(Archive),
		table = ca_objects,
		
		restrictToTypes = [audio, document, ephemera, image, moving_image],
		availableFacets = [type_facet, artists_facet, exh_facet, coll_facet, location_facet, dc_date_facet, collections, lcsh],
		facet_group = [archives],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		sortBy = {
			Relevance = _natural,
			Title = ca_object_labels.name,
			Date = ca_objects.dc_date.dc_dates_value
		}
	},
	artworks = {
		displayName = _(Artwork),
		table = ca_objects,
		
		restrictToTypes = [artwork, artwork_incoming_loan],
		availableFacets = [artists_facet, location_facet, category_facet, exh_facet, date_facet, deaccession_facet, current_location],
		facet_group = [artworks],
		restrictSearchToFields = [ca_object_labels.name, ca_entity_labels.displayname, ca_objects.object_dates.object_date, ca_occurrence_labels.name],
		
		dontShowChildren = 1,
		
		#baseCriteria = {
		#	deaccession_facet = [No]
		#},
		
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		sortBy = {
			Artist = ca_entity_labels.surname/artist;ca_entity_labels.forename/artist,
			Date-descending = ca_objects.creation_date,
			Date-ascending = ca_objects.creation_date,
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name_sort
		},
		sortDirection = {
			Date-descending = desc,
			Date-ascending = asc,
			Artist = asc,
			Identifier = asc,
			Title = asc,
		}
	},
	library = {
		displayName = _(Library),
		table = ca_objects,
		
		restrictToTypes = [book],
		facet_group = [library],
		availableFacets = [artists_facet, exh_facet, format_facet, author_facet, publisher_facet, status_facet, pub_facet],
		dontShowChildren = 1,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		sortBy = {
			Author = ca_entity_labels.surname;ca_entity_labels.forename/author,
			Title = ca_object_labels.name,
			Date-ascending = ca_objects.pub_year,
			Date-descending = ca_objects.pub_year,
		},
		sortDirection = {
			Date-descending = desc,
			Date-ascending = asc,
			Author = asc,
			Title = asc,
		}		
	},
	copy = {
		displayName = _(Library),
		table = ca_objects,
		
		restrictToTypes = [copy],
		facet_group = [copies],
		availableFacets = [artists_facet],
		#dontShowChildren = 1,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.pub_year,

		}
	}	
}

ca_objects = {
	name = _("Artworks"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			facet_groups = [archives],
			group_mode = none,
			
			label_singular = _("Type"),
			label_plural = _("Types")
		},	
		
        current_location = {
			type = location,
			restrict_to_types = [artworks],
			group_mode = none,
			facet_groups = [artworks],
			
			access = [1],
			roles = [supercurator,founder,admin,art_location_new],
			
			collapse = {
				ca_loans = On loan,
				ca_movements/conservation = In conservation,
				ca_movements/shipping = In transit,
				ca_movements/administrative = Consigned
			},
			
			display = {
				ca_storage_locations = {
					related = { template = ^ca_storage_locations.hierarchy.preferred_labels%delimiter=_âžœ_ (storage) }
				},
				ca_occurrences = {
					exhibition = { template = ^ca_occurrences.preferred_labels.name (exhibition) }
				},
			},
			
			include_none_option = No location specified,
			
			label_singular = _("Current location"),
			label_plural = _("Current locations")
		},				
		artists_facet = {
			type = authority,
			
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [artworks,archives],
			restrict_to_relationship_types = [artist],
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			facet_groups = [artworks,archives],
			
			label_singular = _("Artist"),
			label_plural = _("Artists")
		},
		author_facet = {
			type = authority,
			
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [author],
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			facet_groups = [],
			
			label_singular = _("Author"),
			label_plural = _("Authors")
		},
		publisher_facet = {
			type = authority,
			
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [publisher],
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			facet_groups = [],
			
			label_singular = _("Publisher"),
			label_plural = _("Publishers")
		},							
		category_facet = {
			type = attribute,
			
			element_code = category,
			
			group_mode = none,
			
			facet_groups = [],
			
			label_singular = _("Category"),
			label_plural = _("Categories")
		},	
		lcsh = {
			type = attribute,
			
			element_code = lcsh,
			
			group_mode = none,
			
			facet_groups = [archives],
			
			label_singular = _("Subject"),
			label_plural = _("Subjects")
		},		
		format_facet = {
			type = attribute,
			
			element_code = library_formats,
			
			group_mode = none,
			
			facet_groups = [],
			
			label_singular = _("Format"),
			label_plural = _("Formats")
		},			
		exh_facet = {
			type = authority,
			
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [exhibition],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			order_by_label_fields = [name],

			
			facet_groups = [artworks,archives],
			
			label_singular = _("Glenstone exhibition"),
			label_plural = _("Glenstone exhibitions")
		},	
		date_facet = {
			type = normalizedDates,
			element_code = creation_date,
			
			normalization = decades,
			group_mode = none,
			
			facet_groups = [artworks,archives],
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},
		pub_facet = {
			type = normalizedDates,
			element_code = pub_year,
			facet_groups = [library],
			normalization = decades,
			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},		
		deaccession_facet = {
			type = field,

			restrict_to_types = [artwork],
			field = is_deaccessioned,
			
			group_mode = none,
			facet_groups = [artworks],
			
			label_singular = _("Is Deaccessioned"),
			label_plural = _("Is Deaccessioned")
		},			
		dc_date_facet = {
			type = normalizedDates,
			element_code = dc_dates_value,
			facet_groups = [archives],
			normalization = decades,
			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Dates")
		},							
		collections = {
			type = authority,
			
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			restrict_to_relationship_types = [],
			
			group_mode = alphabetical,
			order_by_label_fields = [name],
			
			facet_groups = [archives_list],
			
			label_singular = _("Collection"),
			label_plural = _("Collection")
		},
#		storage_location = {
#			type = authority,
#			
#			table = ca_storage_locations,
#			relationship_table = ca_objects_x_storage_locations,
#			restrict_to_types = [book,copy],
#			restrict_to_relationship_types = [],
#			
#			group_mode = none,
#			
#			facet_groups = [copies],
#			
#			label_singular = _("Storage Location"),
#			label_plural = _("Storage Location")
#		},		
		status_facet = {
			type = attribute,
			
			element_code = purchase_status,
			
			group_mode = none,
			
			facet_groups = [],
			
			label_singular = _("Status"),
			label_plural = _("Status")
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}
