cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _("Objects"),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			"Kress number" = ca_objects.Object_CatalogNumberSort,
			#Artist = ca_objects.Object_ArtistExpression,
			Artist = ca_entity_labels.surname/artist,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			"Kress number" = asc,
			Artist = asc,
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			#selectMediaUsingRelationshipTypes = [relationshipType],
			#selectMediaUsingTypes = [objectType],
			imageResultTextTemplate = "<ifdef code='ca_objects.Object_KressCatalogNumber'><small>^ca_objects.Object_KressCatalogNumber</small><br/></ifdef><ifdef code='ca_objects.Object_ArtistExpression'>^ca_objects.Object_ArtistExpression<br/></ifdef><ifnotdef code='ca_objects.Object_ArtistExpression'><ifcount code='ca_entities' restrictToRelationshipTypes='artist' min='1'><unit relativeTo='ca_entities' restrictToRelationshipTypes='artist'><ifdef code='ca_entities.preferred_labels.forename'>^ca_entities.preferred_labels.forename </ifdef><ifdef code='ca_entities.preferred_labels.surname'>^ca_entities.preferred_labels.surname</ifdef><ifnotdef code='ca_entities.preferred_labels.surname,ca_entities.preferred_labels.forename'>^ca_entities.preferred_labels.displayname</ifnotdef><br/></unit></ifcount></ifnotdef><i>^ca_objects.preferred_labels.name</i>",
			listResultTextTemplate = "<ifdef code='ca_objects.Object_KressCatalogNumber'><small>^ca_objects.Object_KressCatalogNumber</small><br/></ifdef><ifdef code='ca_objects.Object_ArtistExpression'>^ca_objects.Object_ArtistExpression<br/></ifdef><ifnotdef code='ca_objects.Object_ArtistExpression'><ifcount code='ca_entities' restrictToRelationshipTypes='artist' min='1'><unit relativeTo='ca_entities' restrictToRelationshipTypes='artist'><ifdef code='ca_entities.preferred_labels.forename'>^ca_entities.preferred_labels.forename </ifdef><ifdef code='ca_entities.preferred_labels.surname'>^ca_entities.preferred_labels.surname</ifdef><ifnotdef code='ca_entities.preferred_labels.surname,ca_entities.preferred_labels.forename'>^ca_entities.preferred_labels.displayname</ifnotdef><br/></unit></ifcount></ifnotdef><i>^ca_objects.preferred_labels.name</i>",
			interstitialMovementTextTemplate = "<br/><br/><ifdef code='ca_movements_x_objects.AcqObjJoin_Type'><b>Type:</b> ^ca_movements_x_objects.AcqObjJoin_Type</ifdef><ifdef code='ca_movements_x_objects.AcqObjJoin_Attribution'><br><b>Attribution History:</b> ^ca_movements_x_objects.AcqObjJoin_Attribution</ifdef><ifdef code='ca_movements_x_objects.AcqObjJoin_PriceUSD'><br><b>Purchase Amount:</b> ^ca_movements_x_objects.AcqObjJoin_PriceUSD</ifdef><ifdef code='ca_movements_x_objects.AcqObjJoin_CreditUSD'><br><b>Credit Amount:</b> ^ca_movements_x_objects.AcqObjJoin_CreditUSD</ifdef><ifdef code='ca_movements_x_objects.AcqObjJoin_ReturnUSD'><br><b>Return Amount:</b> ^ca_movements_x_objects.AcqObjJoin_ReturnUSD</ifdef><ifdef code='ca_movements_x_objects.AcqObjJoin_InternalNote'><br><b>Note:</b> ^ca_movements_x_objects.AcqObjJoin_InternalNote</ifdef>"
		},
		excludeFieldsFromSearch = [ca_objects.Object_InternalNote, ca_objects.Object_NGATMSAccession, ca_objects.Object_NGATMSID, ca_objects.Object_URLArtstor]
	},
	archival = {
		displayName = _("Archival Item"),
		labelSingular = _("archival item"),
 		labelPlural = _("archival items"),
		table = ca_occurrences,
		restrictToTypes = [documentation],
		#showLetterBarFrom = ca_occurrence_labels.name,
		#showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		
		sortBy = {
			Description = ca_occurrence_labels.name,
			Date = ca_occurrences.Doc_DateFilter
			
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Description = asc,
			Date = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			imageResultTextTemplate = "^ca_occurrences.preferred_labels.name",
			listResultTextTemplate = "^ca_occurrences.preferred_labels.name",
		}
	},
	acquisitions = {
		displayName = _("Acquisitions"),
		labelSingular = _("acquisition"),
 		labelPlural = _("acquisitionss"),
		table = ca_movements,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		
		sortBy = {
			Seller = ca_entity_labels.surname,
			Date = ca_movements.Acquisition_Daterange
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Seller = asc,
			Date = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
			imageResultTextTemplate = "^ca_movements.preferred_labels.name",
			listResultTextTemplate = "^ca_movements.preferred_labels.name"
		},
		excludeFieldsFromSearch = [ca_movements.Acquisition_InternalNote]
	},
	distributions = {
		displayName = _("Distributions"),
		labelSingular = _("distribution"),
 		labelPlural = _("distributions"),
		table = ca_loans,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Date = ca_loans.Distribution_DateYearFilter,
			Institution = ca_entities.preferred_labels.displayname
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc,
			Institution = asc,
			
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
			listResultTextTemplate = "^ca_loans.preferred_labels.name"			
		}
	},
	artists = {
		displayName = _("Artists"),
		labelSingular = _("artist"),
 		labelPlural = _("artists"),
		table = ca_entities,
		restrictToTypes = [],
		baseCriteria = {
			category_facet = [artist],
		}
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.displayname
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
			listResultTextTemplate = "^ca_entities.preferred_labels.displayname"			
		},
		excludeFieldsFromSearch = [ca_entities.Name_InternalNote, ca_entities.Name_TMSID]
	},
	institutions = {
		displayName = _("Institutions"),
		labelSingular = _("institution"),
 		labelPlural = _("institutions"),
		table = ca_entities,
		restrictToTypes = [],
		baseCriteria = {
			category_facet = [inst],
		}
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.displayname
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
			listResultTextTemplate = "^ca_entities.preferred_labels.displayname"			
		},
		excludeFieldsFromSearch = [ca_entities.Name_InternalNote, ca_entities.Name_TMSID]
	},
	dealers = {
		displayName = _("Dealers & Collectors"),
		labelSingular = _("dealer & collector"),
 		labelPlural = _("dealers & collectors"),
		table = ca_entities,
		restrictToTypes = [],
		baseCriteria = {
			category_facet = [seller],
		}
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.surname
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
			listResultTextTemplate = "^ca_entities.preferred_labels.displayname"			
		},
		excludeFieldsFromSearch = [ca_entities.Name_InternalNote, ca_entities.Name_TMSID]
	},
	other_entities = {
		displayName = _("Historians & Conservators"),
		labelSingular = _("historian & conservator"),
 		labelPlural = _("historians & conservators"),
		table = ca_entities,
		restrictToTypes = [],
		baseCriteria = {
			category_facet = [other],
		}
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.displayname
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
			listResultTextTemplate = "^ca_entities.preferred_labels.displayname"			
		},
		excludeFieldsFromSearch = [ca_entities.Name_InternalNote, ca_entities.Name_TMSID]
	},
	entities = {
		displayName = _("People & Organizations"),
		labelSingular = _("people & organizations"),
 		labelPlural = _("people & organizations"),
		table = ca_entities,
		restrictToTypes = [],
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_entity_labels.surname;ca_entity_labels.forename;ca_entity_labels.displayname
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
			listResultTextTemplate = "^ca_entities.preferred_labels.displayname"			
		},
		excludeFieldsFromSearch = [ca_entities.Name_InternalNote, ca_entities.Name_TMSID]
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

# Configuration for object browse
ca_objects = {
	facets = {		
		classification_facet = {
			type = attribute,
			element_code = Object_Classification,
			
			group_mode = alphabetical,
			
			multiple = 1,
			columns = 1,
			
			label_singular = _("Type of Object"),
			label_plural = _("Types of Object")
		},
		nationality_facet = {
			type = attribute,
			element_code = Object_Nationality,
			
			group_mode = alphabetical,
			multiple = 1,
			columns = 1,
			
			label_singular = _("Nationality"),
			label_plural = _("Nationality")
		},
		centuries_facet = {
			type = normalizedDates,
			element_code = Object_Date_Filter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = centuries,
			sort = DESC,
			
			multiple = 1,
			columns = 1,
			
			group_mode = none,
			
			label_singular = _("Century"),
			label_plural = _("Century")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = Object_Date_Filter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = decades,
			sort = DESC,
			
			multiple = 1,
			columns = 1,
			
			group_mode = none,
			requires = [centuries_facet],
			
			label_singular = _("Decade"),
			label_plural = _("Decade")
		},
		artist_entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [artist],
			
			multiple = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Artist"),
			label_plural = _("Artist")
		},	
		authority_entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [location],
			
			multiple = 1,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Location"),
			label_plural = _("Location")
		},	
		movement_facet = {
			# acquisitions
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_movements,
			relationship_table = ca_objects_x_movements,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			requires = x,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Acquisition"),
			label_plural = _("Acquisitions")
		},	
		loan_facet = {
			# distributions
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_loans,
			relationship_table = ca_objects_x_loans,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			requires = x,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Distribution"),
			label_plural = _("Distribution")
		},	
		archival_facet = {
			# distributions
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			requires = x,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Archival Item"),
			label_plural = _("Archival Items")
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			requires = x,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Name Authority"),
			label_plural = _("Name Authorities")
		}

	}
}

# --------------------------------------------------------------------

# Configuration for movement browse
ca_movements = {
facets = {
		seller_entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [seller],
			individual_group_display = 0,
			
			multiple = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [surname],
			natural_sort = 0,
			
			indefinite_article = an,
			label_singular = _("Seller"),
			label_plural = _("Seller")
		},
		movement_decade_facet = {
			type = normalizedDates,
			element_code = Acquisition_Daterange,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = decades,
			
			multiple = 1,
			columns = 1,
			group_mode = none,
			sort = DESC,
			
			label_singular = _("Decade"),
			label_plural = _("Decade")
		},
		
		movement_year_facet = {
			type = normalizedDates,
			element_code = Acquisition_Daterange,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			requires = [movement_decade_facet],
			multiple = 1,
			columns = 1,
			group_mode = none,
			sort = DESC,
			
			label_singular = _("Year"),
			label_plural = _("Year")
		},
		movement_location_facet = {
			type =attribute,
			element_code = Acquisition_LocationFilter,
			
			group_mode = none,
			
			multiple = 1,
			exclude_values = [null],
			
			label_singular = _("Location"),
			label_plural = _("Location")
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			individual_group_display = 0,
			
			requires = x,
			
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("Person/Organization"),
			label_plural = _("People/Organizations")
		},
		
		
	}
}
# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	facets = {
	
		category_facet = {
			type = attribute,
			element_code = Name_Type,
			
			group_mode = none,
			
			multiple = 1,
			columns = 0,
			
			exclude_values = [null],
			
			label_singular = _("category"),
			label_plural = _("category")
		},
# - artists
		Name_LifeDateFilter = {
			type = normalizedDates,
			element_code = Name_LifeDateFilter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = centuries,
			requires = [category_facet],
			
			multiple = 1,
			columns = 1,
			group_mode = none,
			#single_value = 1950,
			
			label_singular = _("Life Dates"),
			label_plural = _("Life Dates")
		},
		nationality_facet = {
			type = attribute,
			element_code = Name_Nationality_filter,
			requires = [category_facet],
			
			group_mode = none,
			
			multiple = 1,
			columns = 1,
			
			exclude_values = [null],
			
			label_singular = _("nationality"),
			label_plural = _("nationality")
		},
# --- institutions
		sub_category_facet = {
			type = attribute,
			element_code = Name_KressInstitutionType,
			requires = [category_facet],
			
			group_mode = none,
			
			multiple = 1,
			
			exclude_values = [null],
			
			label_singular = _("type"),
			label_plural = _("type")
		},
		institution_status_facet = {
			type = attribute,
			element_code = Name_InstitutionStatus,
			requires = [category_facet],
			
			group_mode = none,
			
			multiple = 1,
			
			label_singular = _("status"),
			label_plural = _("status")
		},
# --- institutions and dealers
		location_facet = {
			type = attribute,
			element_code = Name_LocationFilter,
			requires = [category_facet],
			
			group_mode = none,
			
			multiple = 1,
			
			exclude_values = [null],
			
			label_singular = _("location"),
			label_plural = _("location")
		}
	}
}

# --------------------------------------------------------------------
# Configuration for occurrence browse
ca_occurrences = {
	facets = {
		type_facet = {
			type = attribute,
			element_code = Doc_Type,
			
			group_mode = none,
			
			multiple = 1,
			columns = 0,
			exclude_values = [null],
			
			label_singular = _("archival item type"),
			label_plural = _("archival item types")
		

		},
		
		decade_facet = {
			type = normalizedDates,
			element_code = Doc_DateFilter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = decades,
			sort = DESC,
			
			multiple = 1,
			columns = 1,
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades")
		},
		
		year_facet = {
			type = normalizedDates,
			element_code = Doc_DateFilter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			sort = DESC,
			
			multiple = 1,
			columns = 1,
			group_mode = none,
			requires = [decade_facet],
			
			label_singular = _("year"),
			label_plural = _("years")
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			multiple = 1,
			group_mode = alphabetical,
			
			order_by_label_fields = [name_sort],
			#natural_sort = 0,
			
			indefinite_article = a,
			label_singular = _("creator"),
			label_plural = _("creator")
		},
		citation_facet = {
			# ‘type’ can equal authority, attribute, fieldList, normalizedDates
			type = attribute,
			element_code = Doc_Source,
			multiple = 1,
			columns = 0,
			group_mode = alphabetical,
			indefinite_article = a,
			label_singular = _("Citation"),
			label_plural = _("Citations")
		},
		object_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_objects,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			requires = x,
			group_mode = alphabetical,
			
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("object"),
			label_plural = _("objects")
		},
#		artist_facet = {
#			# 'type' can equal authority, attribute, fieldList, normalizedDates
#			type = authority,		
#			table = ca_entities,
#			relative_to = ca_objects,
#			relationship_table = ca_objects_x_entities,
#			restrict_to_types = [],
#			restrict_to_relationship_types = [artist],
#			
#			group_mode = alphabetical,
#			
#			order_by_label_fields = [name_sort],
#			
#			indefinite_article = an,
#			label_singular = _("Artist"),
#			label_plural = _("Artists")
#		}
	
	}
}

# --------------------------------------------------------------------

# Configuration for loan browse
ca_loans = {
	facets = {
		loans_decade_facet = {
			type = normalizedDates,
			element_code = Distribution_DateYearFilter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = decades,
			
			multiple = 1,
			columns = 1,
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decade")
		},
		
		loans_year_facet = {
			type = normalizedDates,
			element_code = Distribution_DateYearFilter,
			# 'normalization' can be: days, months, years, decades, centuries
			normalization = years,
			
			requires = [loans_decade_facet],
			
			multiple = 1,
			columns = 1,
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Year")
		},
		institution_entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_loans_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			individual_group_display = 0,
			
			
			multiple = 1,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			#natural_sort = 0,
			
			indefinite_article = an,
			label_singular = _("Institution"),
			label_plural = _("Institution")
		},
		institution_entity_facet_state = {
			# ‘type’ can equal authority, attribute, fieldList, normalizedDates
			type = attribute,
			relative_to	= ca_entities,	
			element_code = Name_LocationFilter,
			restrict_to_types = [],
			individual_group_display = 0,
			multiple = 1,
			columns = 1,
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],
			#natural_sort = 0,
			indefinite_article = an,
			label_singular = _("Institution Location"),
			label_plural = _("Institution Location")
		}
		
	}
}