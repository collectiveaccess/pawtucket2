cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Heritage Items),
		labelSingular = _("heritage item"),
 		labelPlural = _("heritage items"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels</l>",
			}
		},
		sortBy = {
			Media = ca_object_representations.access,
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Media = desc
			Identifier = asc,
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [collection],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {
				result_caption = "<l>^ca_collections.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	collections_all = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}, 
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Name = ca_collection_labels.name
			
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	community_members = {
		displayName = _(Community Members),
		labelSingular = _("community member"),
 		labelPlural = _("community members"),
		table = ca_entities,
		restrictToTypes = [individual],
		showLetterBarFrom = ca_entity_labels.surname,
		showLetterBarSorts = [ca_entity_labels.surname;ca_entity_labels.forename],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<l>^ca_entities.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		},
		baseCriteria = {
			ind_type_facet = [yes]
		},
		showBaseCriteria = 0,
	},
	people = {
		displayName = _(People),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [individual,organization],
		showLetterBarFrom = ca_entity_labels.surname,
		showLetterBarSorts = [ca_entity_labels.surname;ca_entity_labels.forename],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<l>^ca_entities.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		}
		showBaseCriteria = 0,
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	name = _("Entities"),
	facets = {

		ind_type_facet = {
			type = attribute,
			element_code = ca_entities.ind_type.community_member,
			
			group_mode = none,
			
			label_singular = _("Community Member?"),
			label_plural = _("Community Member?"),
		},
		type_facet = {
			type = fieldList,
			element_code = ca_entities.type_id,
			
			group_mode = none,
			
			label_singular = _("Type"),
			label_plural = _("Type"),
		},
		community_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [community],
			
			individual_group_display = 1,
			
			#group_mode = hierarchical,
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			#show_hierarchy = 1,
			show_hierarchy = 0,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("community"),
			label_plural = _("communities")
		},
	}
}
ca_collections = {
	name = _("Collection"),
	facets = {
		repository_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_collections_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [repository],
			individual_group_display = 0,
			
			order_by_label_fields = [name_sort],
			
			indefinite_article = an,
			label_singular = _("repository"),
			label_plural = _("repositories")
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
			
			group_mode = alphabetical,
			
			label_singular = _("date"),
			label_plural = _("dates"),
			requires = decade_facet
		},
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			
			group_mode = alphabetical,
			
			label_singular = _("date"),
			label_plural = _("dates")
		},
		subjects_facet = {
			type = attribute,
			element_code = subjects,
			
			group_mode = none,
			multiple = 0,
			
			label_singular = _("Subject"),
			label_plural = _("Subjects")
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_collections_x_places,
			restrict_to_types = [community],
			
			individual_group_display = 1,
			
			#group_mode = hierarchical,
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			#show_hierarchy = 1,
			show_hierarchy = 0,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("community"),
			label_plural = _("communities")
		}
	}
}
ca_objects = {
	name = _("Heritage Items"),
	facets = {
		has_media_facet = {
			type = attribute,
			element_code = digitization,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Digitization Status"),
			label_plural = _("Digitization Statuses"),
		},
		type_facet = {
			type = attribute,
			element_code = type,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Type"),
			label_plural = _("Types"),
		},
		subjects_facet = {			
			type = attribute,
			element_code = subjects,
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 0,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 0,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			multiple = 0,
			
			label_singular = _("subject"),
			label_plural = _("subjects"),
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
			
			group_mode = alphabetical,
			
			label_singular = _("date"),
			label_plural = _("dates"),
			requires = decade_facet
		},
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			
			group_mode = alphabetical,
			
			label_singular = _("date"),
			label_plural = _("dates")
		},
		format_material_facet = {
			type = attribute,
			element_code = cformat_material,
			
			group_mode = none,
			multiple = 1,
			
			label_singular = _("Format/Material"),
			label_plural = _("Formats/Materials"),
		},
		#subjects_facet = {
		#	type = attribute,
		#	element_code = ca_objects.subjects,
			
		#	group_mode = none,
		#	multiple = 0,
			
		#	label_singular = _("Subject"),
		#	label_plural = _("Subjects")
		#},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [community],
			
			individual_group_display = 1,
			
			#group_mode = hierarchical,
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			#show_hierarchy = 1,
			show_hierarchy = 0,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("community"),
			label_plural = _("communities"),
			show_description_when_first_facet = ca_places.description
		},
		collection_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Related collections"),
			label_plural = _("Related collections"),
			requires = x
		},
		entities_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entitiess,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("Related entities"),
			label_plural = _("Related entities"),
			requires = x
		}
	}
}