cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
			timeline = {
				data = ca_objects.creation_date,
				display = {
					title_template = <l>^ca_objects.preferred_labels.name</l> (^ca_objects.idno),
					description_template = <p>^ca_objects.description</p>,
					credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_objects.caption</em>,
					image = ^ca_object_representations.media.small,
					icon = ^ca_object_representations.media.icon
				}
			}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
	# collections = {
	# 	displayName = _(Collections),
	# 	labelSingular = _("collection"),
 	# 	labelPlural = _("collections"),
	# 	table = ca_collections,
	# 	restrictToTypes = [],
		
	# 	# formats available for display of results
	# 	# possible values are: images, list, timeline, map
	# 	views = { 
	# 		images = {}, 
	# 		list = {}
	# 	},
		
	# 	sortBy = {
	# 		Relevance = _natural,
	# 		Identifier = ca_collections.idno,
	# 		Name = ca_collection_labels.name
	# 	},
	# 	# --- sortControlType = dropdown or list
	# 	sortControlType = dropdown
	# },
	# entities = {
	# 	displayName = _(People/Orgs),
	# 	labelSingular = _("person"),
 	# 	labelPlural = _("people"),
	# 	table = ca_entities,
	# 	restrictToTypes = [],
	# 	showLetterBarFrom = ca_entity_labels.surname,
	# 	showLetterBarSorts = [ca_entity_labels.surname;ca_entity_labels.forename],
		
	# 	# formats available for display of results
	# 	# possible values are: images, list, timeline, map
	# 	views = {
	# 		images = {}, 
	# 		list = {}
	# 	},
		
	# 	sortBy = {
	# 		Relevance = _natural,
	# 		Identifier = ca_entities.idno,
	# 		Name = ca_entity_labels.surname;ca_entity_labels.forename
	# 	},
	# 	# --- sortControlType = dropdown or list
	# 	sortControlType = dropdown
	# },
	# occurrences = {
	# 	displayName = _(Works),
	# 	labelSingular = _("work"),
 	# 	labelPlural = _("works"),
	# 	table = ca_occurrences,
	# 	restrictToTypes = [],
	# 	showLetterBarFrom = ca_occurrence_labels.name,
	# 	showLetterBarSorts = [ca_occurrence_labels.name],
		
	# 	# formats available for display of results
	# 	# possible values are: images, list, timeline, map
	# 	views = {
	# 		list = {}
	# 	},
		
	# 	sortBy = {
	# 		Relevance = _natural,
	# 		Identifier = ca_occurrences.idno,
	# 		Name = ca_occurrence_labels.name
	# 	},
	# 	# --- sortControlType = dropdown or list
	# 	sortControlType = dropdown
	# }
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =


ca_objects = {
	name = _("Objects"),
	facets = {
		type = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("Object Type"),
			label_plural = _("Object Types"),
		},	
		entity = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Person"),
			label_plural = _("People"),
			description = "",
		},
		century = {
			type = normalizedDates,
			element_code = ca_objects.date,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("Century"),
			label_plural = _("Centuries")
		},
		decade = {
			type = normalizedDates,
			element_code = ca_objects.date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
			requires = [century]
		},
		period = {
			type = attribute,
			element_code = ca_objects.period,
			
			group_mode = none,
			
			label_singular = _("Period"),
			label_plural = _("Periods")
		},
		category = {
			type = attribute,
			element_code = ca_objects.object_category,
			
			group_mode = none,
			
			label_singular = _("Category"),
			label_plural = _("Categories")
		},
		location = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("Location"),
			label_plural = _("Locations"),
			description = ""
		},
		subject = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("Subject"),
			label_plural = _("Subjects"),
			description = ""
		},


	}
}