# Browse cache TTL
cache_timeout = 0

# Highlight search terms in results?
do_highlighting = 0


# BrowseTypes keys to include in general search. 
# This also controls the order blocks of results appear in general search
generalSearchTargets = [objects]

# Available named browses
browseTypes = {
	objects = {
		displayName = _(Projects),
		labelSingular = _("project"),
 		labelPlural = _("projects"),
		table = ca_objects,
		restrictToTypes = [],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, map
		views = {
			images = {
				result_caption = "<div class='card-title mb-0'><div class='fw-semibold lh-sm fs-5'><l aria-label='go to detail page'>^ca_objects.preferred_labels</l></div></div><div class='lh-sm fs-5'><ifcount code='ca_entities' min='1'><unit relativeTo='ca_entities' delimiter=', '>^ca_entities.preferred_labels.displayname</unit><ifdef code='ca_objects.date_regular'>, </ifdef></ifcount><ifdef code='ca_objects.date_regular'>^ca_objects.date_regular</ifdef></div>",
				image_format = cover, # --- contain or cover - default is cover
			}
		},
		sortBy = {
			Title = ca_object_labels.name,
			Date = ca_objects.date_regular,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Date = desc,
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		generalSearchOptions = {
			result_caption = "<div class='card-title mb-0'><div class='fw-semibold lh-sm fs-5'><l aria-label='go to detail page'>^ca_objects.preferred_labels</l></div></div><div class='lh-sm fs-5'><ifcount code='ca_entities' min='1'><unit relativeTo='ca_entities' delimiter=', '>^ca_entities.preferred_labels.displayname</unit><ifdef code='ca_objects.date_regular'>, </ifdef></ifcount><ifdef code='ca_objects.date_regular'>^ca_objects.date_regular</ifdef></div>",
			searchView = general_image_results_html.php,
			imageFormat = cover, # --- contain or cover - default is cover
			numItemsToShow = 8,
			sortBy = _natural,
			sortDirection = asc,
		}
		
	}
}

views = {
	images = {
		icon = bi-grid-fill
	},
	list = {
		icon = bi-list-task
	},
	map = {
		icon = bi-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

ca_objects = {
	name = _("Objects"),
	facets = {
		semester_facet = {
			type = attribute,
			element_code = semester,
			
			group_mode = alphabetical,
			
			label_singular = _("Semester"),
			label_plural = _("Semesters"),
		},	
		course_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [course],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("course"),
			label_plural = _("courses"),
		},
		date_decade_facet = {
			type = normalizedDates,
			element_code = date_regular,
			normalization = decades,
			
			#minimum_date = 1700,
			# maximum_date = 2050,

			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Date")
		},
		date_year_facet = {
			type = normalizedDates,
			element_code = date_regular,
			normalization = years,
			
			#minimum_date = 1700,
			# maximum_date = 2050,

			group_mode = none,
			
			label_singular = _("Date"),
			label_plural = _("Date"),
			requires = date_decade_facet
		},	
		collection_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("collection"),
			label_plural = _("collections"),
			show_description_when_first_facet = ca_collections.descriptionSet.discriptionText,
			requires = x
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_relationship_types = [building],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;â¬…&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or hierarchy of place names.")
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Entity"),
			label_plural = _("Entities"),
			requires = x
		},
		work_type_facet = {
			type = attribute,
			element_code = work_type,
			
			group_mode = alphabetical,
			
			label_singular = _("work type"),
			label_plural = _("work types"),
			requires = x
		},


	}
}
ca_collections = {
	name = _("Collections"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("Collection Type"),
			label_plural = _("Collection Types"),
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = alphabetical,
			
			label_singular = _("subject"),
			label_plural = _("subjects"),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		}


	}
}
