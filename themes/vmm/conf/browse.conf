cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _("All Obejcts"),
		labelSingular = _("Object"),
 		labelPlural = _("Objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {},
			images = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = objects,
		excludeFieldsFromSearch = [ca_objects.archive_cataloguer.cataloguers_archive, ca_objects.archive_cataloguer.dates_catalogued_archive, ca_objects.archive_cataloguer.cataloguer_notes_archive, ca_objects.legal_status, ca_objects.disposal_archive, ca_objects.acquisition_source, ca_objects.custodial_history, ca_objects.accruals, ca_objects.usage_history, ca_objects.appraisal_info_charts.appraisal_date_chart, ca_objects.appraisal_info_charts.appraisal_value_chart, ca_objects.appraisal_info_charts.appraiser_name_chart, ca_objects.value, ca_objects.appraisal_note, ca_objects.archive_condition.condition, ca_objects.archive_condition.condition_description, ca_objects.current_condition.museum_condition, ca_objects.current_condition.condition_date, ca_objects.current_condition.condition_name, ca_objects.current_condition.museum_condition, ca_objects.current_condition.condition_date, ca_objects.current_condition.condition_name, ca_objects.conservation, ca_objects.conservation_note, ca_objects.treatment.treatment_notes, ca_objects.treatment.treatment_date, ca_objects.ca_objects_deaccession, ca_objects.archive_notes, ca_objects.museum_cataloguer.cataloguers_museum, ca_objects.museum_cataloguer.dates_catalogued, ca_objects.museum_cataloguer.cataloguer_notes, ca_objects.museum_cataloguer.catalog_card, ca_object_lots.disposal_notes.disposal_method, ca_object_lots.disposal_notes.disposal_reason, ca_objects.storage_note, ca_objects.internal_notes, ca_objects.FollowUp.follow_up, ca_objects.FollowUp.reason]

	},
	archival_items = {
		displayName = _("Archival Items"),
		labelSingular = _("Archival Item"),
 		labelPlural = _("Archival Items"),
		table = ca_objects,
		
		restrictToTypes = [archival_object],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {},
			images = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.archive_dates.archive_daterange
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc,
			Date = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = archival_items,
		excludeFieldsFromSearch = [ca_objects.archive_cataloguer.cataloguers_archive, ca_objects.archive_cataloguer.dates_catalogued_archive, ca_objects.archive_cataloguer.cataloguer_notes_archive, ca_objects.legal_status, ca_objects.disposal_archive, ca_objects.acquisition_source, ca_objects.custodial_history, ca_objects.accruals, ca_objects.usage_history, ca_objects.appraisal_info_charts.appraisal_date_chart, ca_objects.appraisal_info_charts.appraisal_value_chart, ca_objects.appraisal_info_charts.appraiser_name_chart, ca_objects.value, ca_objects.appraisal_note, ca_objects.archive_condition.condition, ca_objects.archive_condition.condition_description, ca_objects.current_condition.museum_condition, ca_objects.current_condition.condition_date, ca_objects.current_condition.condition_name, ca_objects.conservation, ca_objects.conservation_note, ca_objects.treatment.treatment_notes, ca_objects.treatment.treatment_date, ca_objects.ca_objects_deaccession, ca_objects.archive_notes, ca_objects.museum_cataloguer.cataloguers_museum, ca_objects.museum_cataloguer.dates_catalogued, ca_objects.museum_cataloguer.cataloguer_notes, ca_objects.museum_cataloguer.catalog_card, ca_object_lots.disposal_notes.disposal_method, ca_object_lots.disposal_notes.disposal_reason, ca_objects.storage_note, ca_objects.internal_notes, ca_objects.FollowUp.follow_up, ca_objects.FollowUp.reason]

	},
	artifacts = {
		displayName = _("Artifacts"),
		labelSingular = _("Artifact"),
 		labelPlural = _("Artifacts"),
		table = ca_objects,
		
		restrictToTypes = [collection_object],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {},
			images = {}
			
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = artifacts,
		excludeFieldsFromSearch = [ca_objects.archive_cataloguer.cataloguers_archive, ca_objects.archive_cataloguer.dates_catalogued_archive, ca_objects.archive_cataloguer.cataloguer_notes_archive, ca_objects.legal_status, ca_objects.disposal_archive, ca_objects.acquisition_source, ca_objects.custodial_history, ca_objects.accruals, ca_objects.usage_history, ca_objects.appraisal_info_charts.appraisal_date_chart, ca_objects.appraisal_info_charts.appraisal_value_chart, ca_objects.appraisal_info_charts.appraiser_name_chart, ca_objects.value, ca_objects.appraisal_note, ca_objects.archive_condition.condition, ca_objects.archive_condition.condition_description, ca_objects.current_condition.museum_condition, ca_objects.current_condition.condition_date, ca_objects.current_condition.condition_name, ca_objects.conservation, ca_objects.conservation_note, ca_objects.treatment.treatment_notes, ca_objects.treatment.treatment_date, ca_objects.ca_objects_deaccession, ca_objects.archive_notes, ca_objects.museum_cataloguer.cataloguers_museum, ca_objects.museum_cataloguer.dates_catalogued, ca_objects.museum_cataloguer.cataloguer_notes, ca_objects.museum_cataloguer.catalog_card, ca_object_lots.disposal_notes.disposal_method, ca_object_lots.disposal_notes.disposal_reason, ca_objects.storage_note, ca_objects.internal_notes, ca_objects.FollowUp.follow_up, ca_objects.FollowUp.reason]

	},
	vessels = {
		displayName = _("Vessels"),
		labelSingular = _("Vessel"),
 		labelPlural = _("Vessels"),
		table = ca_occurrences,
		
		restrictToTypes = [vessel],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		sortBy = {
			Title = ca_occurrence_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
			selectMediaUsingRelationshipTypes = [featured],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
		}
	},
	archives = {
		displayName = _("Archival Fonds and Collections"),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {},
			images = {} 
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		excludeFieldsFromSearch = [ca_collections.archive_cataloguer.cataloguers_archive, ca_collections.archive_cataloguer.dates_catalogued_archive, ca_collections.archive_cataloguer.cataloguer_notes_archive, ca_collections.legal_status, ca_collections.disposal_archive, ca_collections.acquisition_source, ca_collections.custodial_history, ca_collections.accruals, ca_collections.usage_history, ca_collections.value, ca_collections.archive_condition.condition, ca_collections.archive_condition.condition_description, ca_collections.conservation, ca_collections.archive_notes, ca_collections.storage_note, ca_collections.internal_notes]
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =


# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("object type"),
			label_plural = _("object types"),
			facet_groups = [archival_items, objects]
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("has media"),
			label_plural = _("has media"),
			description = _("Find objects that have associated media."),
			facet_groups = [archival_items, objects, artifacts]
		},
		category_facet = {
			type = attribute,
			element_code = ca_objects.categories.main_categories,
			label_singular = _("Category"),
			label_plural = _("Categories"),
			facet_groups = [objects, artifacts],
			suppress = ["option0"]
		},
		subcategory_facet = {
			type = attribute,
			element_code = ca_objects.categories.subcategories,
			label_singular = _("Sub-Category"),
			label_plural = _("Sub-Categories"),
			facet_groups = [objects, artifacts],
			requires = category_facet
		},
		gmd_facet = {
			type = attribute,
			element_code = GMD,
			label_singular = _("Material"),
			label_plural = _("Materials"),
			suppress = ["TD", "CM", "AT"],
			substitute_values = {459 = "images", 460 = "film"},
			facet_groups = [archival_items, objects]
		},
		century_facet = {
			type = normalizedDates,
			element_code = ca_objects.archive_dates.archive_daterange,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("century"),
			label_plural = _("centuries"),
			facet_groups = [archival_items, objects]
		},
		decade_facet = {
			type = normalizedDates,
			element_code = ca_objects.archive_dates.archive_daterange,
			normalization = decades,
			
			group_mode = none,
			requires = century_facet,
			label_singular = _("decade"),
			label_plural = _("decades"),
			facet_groups = [archival_items, objects]	
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_objects.archive_dates.archive_daterange,
			normalization = years,
			
			group_mode = none,
			
			requires = decade_facet,
			label_singular = _("year"),
			label_plural = _("years"),
			facet_groups = [archival_items, objects]	
		},	
		people_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [ind],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			facet_groups = [archival_items, objects, artifacts]
		},	
		org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [org],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organization"),
			label_plural = _("organizations"),
			facet_groups = [archival_items, objects, artifacts]
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [vessel],
			
			show_all_when_first_facet = 0,
			
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("vessel"),
			label_plural = _("vessels"),
			facet_groups = [archival_items, objects]
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			facet_groups = [archival_items, objects]
		},
		place_made_facet = {
			type = attribute,
			element_code = ca_objects.place_made,
			label_singular = _("Place Made"),
			label_plural = _("Place Made"),
			facet_groups = [objects, artifacts]
		},
		artifact_century_facet = {
			type = normalizedDates,
			element_code = ca_objects.date.dates_value,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("artifact century"),
			label_plural = _("artifact centuries"),
			facet_groups = [artifacts, objects]
		},
		artifact_decade_facet = {
			type = normalizedDates,
			element_code = ca_objects.date.dates_value,
			normalization = decades,
			
			group_mode = none,
			requires = artifact_century_facet,
			label_singular = _("artifact decade"),
			label_plural = _("artifact decades"),
			facet_groups = [artifacts, objects]	
		},
		artifact_year_facet = {
			type = normalizedDates,
			element_code = ca_objects.date.dates_value,
			normalization = years,
			
			group_mode = none,
			
			requires = artifacts_decade_facet,
			label_singular = _("artifact year"),
			label_plural = _("artifact years"),
			facet_groups = [artifacts, objects]	
		}
	}
}

ca_occurrences = {
	name = _("Vessels"),
	facets = {
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_occurrences_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("Vessel Type"),
			label_plural = _("Vessel Types")
		},
		century_facet = {
			type = normalizedDates,
			element_code = ca_occurrences.ship_date.ship_dates_value,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("century"),
			label_plural = _("centuries")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = ca_occurrences.ship_date.ship_dates_value,
			normalization = decades,
			
			group_mode = none,
			requires = century_facet,
			label_singular = _("decade"),
			label_plural = _("decades")	
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_occurrences.ship_date.ship_dates_value,
			normalization = years,
			
			group_mode = none,
			
			requires = decade_facet,
			label_singular = _("year"),
			label_plural = _("years")	
		},	
		builder_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [created],
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Builder"),
			label_plural = _("Builders")
		},	
		owner_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [own],
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("Owner"),
			label_plural = _("Owners")
		}
	}
}

ca_collections = {
	name = _("Archival Fonds and Collections"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("Level"),
			label_plural = _("Levels")
		},
		century_facet = {
			type = normalizedDates,
			element_code = ca_collections.archive_dates.archive_daterange,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("century"),
			label_plural = _("centuries")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = ca_collections.archive_dates.archive_daterange,
			normalization = decades,
			
			group_mode = none,
			requires = century_facet,
			label_singular = _("decade"),
			label_plural = _("decades")	
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_collections.archive_dates.archive_daterange,
			normalization = years,
			
			group_mode = none,
			
			requires = decade_facet,
			label_singular = _("year"),
			label_plural = _("years")	
		},
		gmd_facet = {
			type = attribute,
			element_code = GMD,
			label_singular = _("Material"),
			label_plural = _("Materials"),
			suppress = ["TD", "CM", "AT"]
		},
		occurrence_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_collections_x_occurrences,
			restrict_to_types = [vessel],
			
			show_all_when_first_facet = 0,
			
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("vessel"),
			label_plural = _("vessels")
		}
	}
}