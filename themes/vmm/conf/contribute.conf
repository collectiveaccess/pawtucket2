# --- contribute form configuration

enabled = 1

#admin_notification_email = {info@yourdomain.com}

formTypes = {
	artworks = {
		# table of created record
		table = ca_objects,
		
		formTitle = Contribute your own artwork photos!,
		
		# type of created record
		type = art_component,
		
		access = 0,
		status = 0,
		
		# template for idno; use "%" as placeholder for serial numbers
		idno = CONT.2014.%.1.1,
		
		# view to use to render form
		form_view = Contribute/form_html.php,
		
		errorFormat = <div class='error' style='color: #cc0000; font-weight: bold;'>^ERRORS</div>,
		
		# require user to be logged in?
		require_login = 0,
		
		# Set to 1 if you want on-screen SPAM prevention (in the form of a simple/quick math question)
		spam_protection = 1,
		
		# Set to 1 if you want an on-screen click-through agreement on the form
		terms_and_conditions = 1,
		
		representation_type = front,
		representation_status = 0,
		representation_access = 1,
		
		# Where we put the user after a successful form submission
		# Values are:
		#		front = 	redirect to Pawtucket front page
		#		url = 		redirect to Pawtucket url specified in post_submission_destination_url directive
		#		page = 		use view specified by post_submission_view to format direct response (no redirect).
		#						The view should be in the theme's views/contribute directory.
		post_submission_destination = front,
		
		# Name of view to use for post submission message. Should be full file name of view with .php extension; assumed to be in theme views/contribute directory
		post_submission_view = Contribute/results_html.php,
		
		# Module/controller/action settings to generate url for page to show post-submission
		post_submission_destination_url = { module =, controller = Browse, action = Index },
		
		set_post_submission_notification = 1,
		post_submission_notification_message = _(Thank you for your submission!),
		post_submission_notification_message_with_media = _(Thank you for your submission! Your media has been successfully uploaded to the archive for review.),
	
		# related
		related = {
			ca_entities = {
				idno = %,
				access = 0,
				status = 0
			}
		},
		# references -> links to table that are embeded in form/ not created by the user
		# this is useful for cases where the contribute form is linked to from another record and you want to create a link to that record
		# key is table name and value is relationship to link record with
		# should be put in form as hidden inputs named ref_table and ref_row_id
		#references = {
		#	ca_entities = related,
		#	ca_places = related,
		#	ca_occurrences = related,
		#	ca_objects = related
		#}
	}
}


#
# Name of plugin class to use for id number field in objects, object lots
# and authorities that support id numbering (entities, places, collections and occurrences)
#
ca_objects_id_numbering_plugin = MultipartIDNumber
ca_object_lots_id_numbering_plugin = MultipartIDNumber
ca_entities_id_numbering_plugin = MultipartIDNumber
ca_places_id_numbering_plugin = MultipartIDNumber
ca_collections_id_numbering_plugin = MultipartIDNumber
ca_occurrences_id_numbering_plugin = MultipartIDNumber
ca_list_items_id_numbering_plugin = MultipartIDNumber
ca_loans_id_numbering_plugin = MultipartIDNumber
ca_movements_id_numbering_plugin = MultipartIDNumber
ca_tours_id_numbering_plugin = MultipartIDNumber
ca_tour_stops_id_numbering_plugin = MultipartIDNumber
ca_object_representations_id_numbering_plugin = MultipartIDNumber
ca_storage_locations_id_numbering_plugin = MultipartIDNumber