

# Allow download of representation on object detail page?
# accepted values include: anyone, logged_in, logged_in_privileged
allow_ca_objects_representation_download = anyone

# attribute of description text to use in share function - emailing record
share_ca_objects_description_attribute = none


#
# Details supported in this theme
#
detailTypes = {
	objects = {
		displayName = _(Objects),
		table = ca_objects,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			representationViewerPrimaryOnly = 0,
			representationViewerDontShowPlaceholder = 0,
			#representationViewerCaptionTemplate = <div class='small'>^ca_object_representations.preferred_labels.name</div>,
			map_attribute = ca_objects.georeference,
			map_width = 100%,
			map_height = 200,
			
			# annotations
			
			# display annotations? Valid values are: viewer (in viewer), div (in external div with class #detailAnnotations), none (no display) [Default is none]
			displayAnnotations = div,
			# template used to format annotation in list; evaluated relative to the annotation
			displayAnnotationTemplate = "<ifdef code='ca_representation_annotations.clip_identifier'>^ca_representation_annotations.clip_identifier | </ifdef>^ca_representation_annotations.preferred_labels.name<ifdef code='ca_representation_annotations.clip_date'> | ^ca_representation_annotations.clip_date</ifdef><span class='annotation_description'><ifdef code='ca_representation_annotations.annotationDescription'>^ca_representation_annotations.annotationDescription<br/></ifdef><ifdef code='ca_representation_annotations.locname'><br/><unit relativeTo='ca_representation_annotations.locname' delimiter='<br/>'>^ca_representation_annotations.locname</unit></ifdef><ifcount code='ca_entities' min='1'><br/><unit relativeTo='ca_entities' delimiter='<br/>'>^ca_entities.preferred_labels.displayname</unit></ifcount></span>",
			
			representationViewerShowOnlyMediaTypesWhenPresent = [audio]
		},
		# --- aliases to this detail page - these map to browses that return this type of detail, only need to be defined if the key of this array differs from the browses that find this record type
		#aliases = []
	},
	entities = {
		displayName = _(People),
		table = ca_entities,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0,
			map_attribute = ca_places.georeference,
			map_width = 350,
			map_height = 200
		}
	},
	occurrences = {
		displayName = _(Works),
		table = ca_occurrences,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0
		}
	},
	places = {
		displayName = _(Places),
		table = ca_places,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0
		}
	},
	collections = {
		displayName = _(Collections),
		table = ca_collections,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0
		}
	},
	annotations = {
		displayName = _(Annotations),
		table = ca_representation_annotations,
		restrictToTypes = [],
		options = {
			nextLink = <i class='fa fa-angle-right'></i><div class='small'>Next</div>,
			previousLink = <i class='fa fa-angle-left'></i><div class='small'>Prev</div>,
			resultsLink = <i class='fa fa-angle-double-left'></i><div class='small'>Back</div>,
			enableComments = 0
		}
	}
}
