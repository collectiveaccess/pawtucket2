cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			#extendedInformationTemplate = <ifcount code="ca_occurrences" min="1"><unit relativeTo="ca_occurrences">^ca_occurrences.preferred_labels</unit></ifcount>
		}
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}, 
			list = {}
		
		},
		
		sortBy = {
			Relevance = _natural,
			Name = ca_collections.preferred_labels
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
		options = {
			extendedInformationTemplate = ^ca_collections.collectionScopeContent
		}
	}
#	entities = {
#		displayName = _(People/Orgs),
#		labelSingular = _("person"),
#		labelPlural = _("people"),
#		table = ca_entities,
#		restrictToTypes = [],
#		
#		# formats available for display of results
#		# possible values are: images, list, timeline, map
#		views = {
#			images = {}, 
#			list = {}
#		},
#		
#		sortBy = {
#			Relevance = _natural,
#			Identifier = ca_entities.idno,
#			Name = ca_entity_labels.surname;ca_entity_labels.forename
#		},
#		# --- sortControlType = dropdown or list
#		sortControlType = dropdown
#	},
#	occurrences = {
#		displayName = _(Works),
#		labelSingular = _("work"),
#		labelPlural = _("works"),
#		table = ca_occurrences,
#		restrictToTypes = [],
#		
#		# formats available for display of results
#		# possible values are: images, list, timeline, map
#		views = {
#			list = {}
#		},
#		
#		sortBy = {
#			Relevance = _natural,
#			Identifier = ca_occurrences.idno,
#			Name = ca_occurrence_labels.name
#		},
#		# --- sortControlType = dropdown or list
#		sortControlType = dropdown
#	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class = col-sm-8 col-md-9 col-lg-9

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class = col-sm-4 col-md-3 col-lg-3



# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	name = _("Collections"),
	facets = {
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_collections_x_vocabulary_terms,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			label_singular = _("term"),
			label_plural = _("terms")
		},
		collection_area = {
			type = attribute,
			element_code = collectionArea,
			
			group_mode = alphabetical,
			
			label_singular = _("collection area"),
			label_plural = _("collection areas")
		},
		date = {
			type = normalizedDates,
			element_code = collectionDate,
			normalization = decades,
			
			label_singular = _("date"),
			label_plural = _("dates")
		},
		genre = {
			type = attribute,
			element_code = pbcoreGenre,
			
			group_mode = alphabetical,
			
			label_singular = _("genre"),
			label_plural = _("genres")
		}
#		subject = {
#			type = attribute,
#			element_code = pbcoreSubject,
#			
#			group_mode = alphabetical,
#			
#			label_singular = _("subject"),
#			label_plural = _("subjects")
#		}
	}
}

ca_objects = {
	name = _("Objects"),
	facets = {
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Digital Online Access"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("Digital Online Access"),
			label_plural = _("Digital Online Access"),
		},
		media_type = {
			type = attribute,
			element_code = instantiationMediaType,
			
			group_mode = alphabetical,
			
			label_singular = _("media type"),
			label_plural = _("media type")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},
		format_facet = {
			type = attribute,
			element_code = instantiationPhysical,

			group_mode = alphabetical,

			label_singular = _("Format"),
			label_plural = _("Format")
#		},
#		occurrence_facet = {
#			type = authority,
#			table = ca_occurrences,
#			generate_facets_for_types = 1,
#			relationship_table = ca_objects_x_occurrences,
#			restrict_to_types = [],
#			
#			individual_group_display = 1,
#			
#			show_all_when_first_facet = 0,
#			
#			groupings = {
#				label = _("Name"), 
#				ca_attribute_dates_value:years = _("Years")
#			},
#			
#			group_mode = alphabetical,
#			
#			label_singular = _("occurrence"),
#			label_plural = _("occurrences"),
#			description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		}
	}
}
