# Browse cache TTL
cache_timeout = 0

# BrowseTypes keys to include in general search. 
# This also controls the order blocks of results appear in general search
generalSearchTargets = [collections, projects, objects]

# Available named browses
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		restrictToTypes = [],
		dontShowInBrowseMenu = 0, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, map
		views = {
			images = {
				result_caption = "<div class='card-title'><small class='text-body-secondary'>^ca_objects.type_id</small><div class='fw-medium lh-sm fs-5'><l>^ca_objects.preferred_labels</l></div></div>",
				image_format = cover, # --- contain or cover - default is cover
			},
			list = {
				result_caption = "<div class='card-title'><small class='text-body-secondary'>^ca_objects.type_id</small><div class='fw-medium lh-sm fs-5'><l>^ca_objects.preferred_labels</l></div></div><ifdef code='ca_objects.description_w_type.description'><p class='card-text small lh-sm text-truncate'>^ca_objects.description_w_type.description%truncate=100%ellipsis</p></ifdef><ifcount code='ca_collections' min='1'><unit unique='1' relativeTo='ca_collections'><l>^ca_collections.preferred_labels.name</l></unit></ifcount>",
				image_format = contain, # --- contain or cover - default is cover
				list_format = image, # --- image or text where text is a simple grid of cards with no media
			},
#			map = {
#				mapAttributes = [ca_places.georeference],
#				width = 100%,
#				height = 600px,
#				minZoomLevel = 2,
#				maxZoomLevel = 18,
#				mapItemInfoTemplate =  "<l><div class='fw-bold'>^ca_objects.preferred_labels.name</div></l></ifdef>"
#			}
		},
		sortBy = {
			Title = ca_object_labels.name,
			Date = ca_objects.dates_value,
			"Media Type" = ca_objects.media_type,
			"Physical Format" = ca_objects.av_format_Hierarchical
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Date = desc,
			"Media Type" = asc,
			"Physical Format" = asc,
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		generalSearchOptions = {
			resultCaption = "<div class='card-title'><small class='text-body-secondary'>^ca_objects.type_id</small><div class='fw-medium lh-sm fs-5'><l>^ca_objects.preferred_labels</l></div></div>",
			searchView = general_image_results_html.php,
			imageFormat = cover, # --- contain or cover - default is cover
			numItemsToShow = 8,
			sortBy = _natural,
			sortDirection = asc,
		}
		
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		dontShowInBrowseMenu = 1, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br><l>^ca_collections.preferred_labels</l>",
			}, 
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br><l>^ca_collections.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Name = ca_collection_labels.name
		},
		generalSearchOptions = {
			resultCaption = "<l class='pt-3 pb-4 px-3 d-flex align-items-center justify-content-center bg-body-tertiary h-100 w-100 text-black'>^ca_collections.preferred_labels</l>",
			searchView = general_list_results_html.php,
			numItemsToShow = 7,
			sortBy = _natural,
			sortDirection = asc,
		}
	},
	projects = {
		displayName = _(Projects),
		labelSingular = _("project"),
 		labelPlural = _("projects"),
		table = ca_occurrences,
		restrictToTypes = [project],
		dontShowInBrowseMenu = 1, # --- set to true or 1 to hide in main site navigation leave empty or 0 to display in menu
		#showLetterBarFrom = ca_occurrence_labels.name,
		#showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<div class='card-title'><div class='fw-medium lh-sm fs-5'><l>^ca_occurrences.preferred_labels</l></div></div>",
				image_format = cover, # --- contain or cover - default is cover
			},
			list = {
				result_caption = "<l>^ca_occurrences.preferred_labels</l>",
			}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrence_labels.name
		},
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
#		},
		generalSearchOptions = {
			resultCaption = "<l class='pt-3 pb-4 px-3 d-flex align-items-center justify-content-center bg-body-tertiary h-100 w-100 text-black'>^ca_occurrences.preferred_labels</l>",
			searchView = general_list_results_html.php,
			numItemsToShow = 7,
			sortBy = _natural,
			sortDirection = asc
		}
		
	}
}

views = {
	images = {
		icon = bi-grid-fill
	},
	list = {
		icon = bi-list-task
	},
	map = {
		icon = bi-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

ca_objects = {
	name = _("Objects"),
	facets = {
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = alphabetical,
			order_by_label_fields = [name_sort],

			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 0,
			
			label_singular = _("subject"),
			label_plural = _("subjects"),
			description = _("Browse keywords in our collections.")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("No media"),
			
						# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			single_value = 1,
			
			label_singular = _("has media"),
			label_plural = _("has media"),
			description = _("Find records with attached media that you can view or listen to. You’ll be able to further refine the results using our filter."),
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("item type"),
			label_plural = _("item types"),
			description = _("Browse by audiovisual, photographic, or paper & object items.")
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename, displayname],
			
			indefinite_article = an,
			label_singular = _("people and organizations"),
			label_plural = _("people and organizations"),
			description = _("Find items relating to individuals and organizations in our collections. You can browse by name, role, or type (person or organization)."),
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Browse by decade."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = dates_value,
			normalization = years,
			
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Browse by year."),			
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = ["collection"],
			
			group_mode = alphabetical,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("See an alphabetized list of collections."),
		},
		project_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = ["project", "project_cat"],
			
			group_mode = alphabetical,

			label_singular = _("project"),
			label_plural = _("projects"),
			description = _("See an alphabetized list of projects."),
		}
	}
}
ca_occurrences = {
	name = _("Occurrences"),
	facets = {
		theme_facet = {
			type = attribute,
			element_code = proj_theme,
			
			group_mode = alphabetical
			
			label_singular = _("Theme"),
			label_plural = _("Themes")
		}
	}
}