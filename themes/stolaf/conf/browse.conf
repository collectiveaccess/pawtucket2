cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Archival Items),
		labelSingular = _("archival item"),
 		labelPlural = _("archival items"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
		},
		sortBy = {
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
	},
	archival_collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [collection],
		dontExpandTypesHierarchically = true,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {}
		},
		
		sortBy = {
			Title = ca_collection_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		facetGroup = archival_collections
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		dontExpandTypesHierarchically = true,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			list = {}
		},
		
		sortBy = {
			Identifier = ca_collections.idno,
			Title = ca_collection_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		material_facet = {
			type = attribute,
			element_code = material_type,
			
			group_mode = none,

			label_singular = _("Material Type"),
			label_plural = _("Material Type")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = dacs_date_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
		},
		year_facet = {
			type = normalizedDates,
			element_code = dacs_date_value,
			normalization = years,
			requires = decade,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			
			group_mode = none,

			label_singular = _("Collection"),
			label_plural = _("Collections")
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;â¬…&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places")
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("Entity"),
			label_plural = _("Entities"),
		},
		LcshGenre_facet = {
			type = attribute,
			element_code = LcshGenre,
			
			group_mode = none,

			label_singular = _("Genre (LOC)"),
			label_plural = _("Genres (LOC)")
		},
		attGenre_facet = {
			type = attribute,
			element_code = aat,
			
			group_mode = none,

			label_singular = _("Genre (AAT)"),
			label_plural = _("Genres (AAT)")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has images"),
			label_no = _("Does not have images"),
			
			single_value = 1,
			
			label_singular = _("Only items with images"),
			label_plural = _("Only items with images")
		}
		
	}
}

ca_collections = {
	name = _("Collections"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			order_by_label_fields = [name_plural],

			label_singular = _("type"),
			label_plural = _("types"),
			facet_groups = [allcollections]
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("Entity"),
			label_plural = _("Entities"),
			facet_groups = [allcollections, archival_collections]
		},
		decade_facet = {
			type = normalizedDates,
			element_code = dacs_date_value,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("Decade"),
			label_plural = _("Decades"),
			facet_groups = [allcollections, archival_collections]
		},
		year_facet = {
			type = normalizedDates,
			element_code = dacs_date_value,
			normalization = years,
			requires = decade,
			
			group_mode = none,
			
			label_singular = _("Year"),
			label_plural = _("Years"),
			facet_groups = [allcollections, archival_collections]
		},
		material_facet = {
			type = attribute,
			element_code = material_type,
			
			group_mode = none,

			label_singular = _("Material Type"),
			label_plural = _("Material Type"),
			facet_groups = [allcollections, archival_collections]
		},
		LcshSubjects_facet = {
			type = attribute,
			element_code = LcshSubjects,
			
			group_mode = none,

			label_singular = _("Subject"),
			label_plural = _("Subjects"),
			facet_groups = [allcollections, archival_collections]
		},
		LcshGenre_facet = {
			type = attribute,
			element_code = LcshGenre,
			
			group_mode = none,

			label_singular = _("Genre (LOC)"),
			label_plural = _("Genres (LOC)"),
			facet_groups = [allcollections, archival_collections]
		},
		attGenre_facet = {
			type = attribute,
			element_code = aat,
			
			group_mode = none,

			label_singular = _("Genre (AAT)"),
			label_plural = _("Genres (AAT)"),
			facet_groups = [allcollections, archival_collections]
		}
	}
}