cache_timeout = 0

#
# 
#
browseTypes = {

	artworks = {
		displayName = _(Artworks),
		labelSingular = _("artwork"),
 		labelPlural = _("artworks"),
		table = ca_objects,
		
		restrictToTypes = ["artworks"],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels%truncate=50%ellipsis, ^ca_objects.date.dates_value</l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels%truncate=50%ellipsis, ^ca_objects.date.dates_value</l>",
			},
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_objects.preferred_labels
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,

		facetGroup = artworks
	},

	archival_objects = {
		displayName = _(Archival Objects),
		labelSingular = _("archival object"),
 		labelPlural = _("archival objects"),
		table = ca_objects,
		
		restrictToTypes = ["archivalObjects"],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels%truncate=50%ellipsis, ^ca_objects.date.dates_value</l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l>^ca_objects.preferred_labels%truncate=50%ellipsis, ^ca_objects.date.dates_value</l>",
			},
		},

		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_objects.preferred_labels
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,

		facetGroup = archivalObjects
	},

	bibliography = {
		displayName = _(Bibliographies),
		labelSingular = _("bibliography"),
 		labelPlural = _("bibliographies"),
		table = ca_occurrences,
		restrictToTypes = ["bibliography"],
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		
		views = {
			images = {
				result_caption = "<small><l>^ca_occurrences.idno</l></small><br/><l>^ca_occurrences.preferred_labels%truncate=50%ellipsis</l>",
			},
			list = {
				result_caption = "<small><l>^ca_occurrences.idno</l></small><br/><l>^ca_occurrences.preferred_labels%truncate=50%ellipsis</l>",
			},
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrences.preferred_labels
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,

		facetGroup = bibliography
	},

	exhibition = {
		displayName = _(Exhibitions),
		labelSingular = _("exhibition"),
 		labelPlural = _("exhibitions"),
		table = ca_occurrences,
		restrictToTypes = ["exhibition"],
		showLetterBarFrom = ca_occurrence_labels.name,
		showLetterBarSorts = [ca_occurrence_labels.name],
		
		views = {
			images = {
				result_caption = "<small><l>^ca_occurrences.idno</l></small><br/><l>^ca_occurrences.preferred_labels%truncate=50%ellipsis</l><br/>^ca_occurrences.PrimaryVenue.venueName",
			},
			list = {
				result_caption = "<small><l>^ca_occurrences.idno</l></small><br/><l>^ca_occurrences.preferred_labels%truncate=50%ellipsis</l><br/>^ca_occurrences.PrimaryVenue.venueName",
			},
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Name = ca_occurrences.preferred_labels
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,

		facetGroup = exhibition
	},
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =


# --------------------------------------------------------------------
# Configuration for Occurrences browse
ca_occurrences = {
	name = _("Occurrences"),

	facets = {

		exhibition_type = {
			type = attribute,
			element_code = ca_occurrences.exhibitionType,

			multiple = 1,
			group_mode = none,
		
			description = _("Find exhibition by type."),
			label_singular = _("Type"),
			label_plural = _("Types"),
			facet_groups = [exhibition]
		},

		exhibition_year = {
			type = normalizedDates,
			element_code = ca_occurrences.occurenceYear,
			normalization = years,
		
			multiple = 1,
			group_mode = none,
		
			description = _("Find object by year."),
		
			label_singular = _("Year"),
			label_plural = _("Years"),
			facet_groups = [exhibition, bibliography]
		},

		bibliographic_type = {
			type = attribute,
			element_code = ca_occurrences.bib_types,

			multiple = 1,
			group_mode = none,
		
			description = _("Find bibliography by type."),
			label_singular = _("Type"),
			label_plural = _("Types"),
			facet_groups = [bibliography]
		},

		contributor = {
			type = attribute,
			element_code = ca_occurrences.author,

			multiple = 1,
			group_mode = none,
		
			description = _("Find bibliography by contributor."),
			label_singular = _("Contributor"),
			label_plural = _("Contributors"),
			facet_groups = [bibliography]
		},

		primary_venue = {
			type = attribute,
			element_code = ca_occurrences.PrimaryVenue.venueName,

			multiple = 1,
			group_mode = none,
		
			label_singular = _("Primary Venue"),
			label_plural = _("Primary Venue"),
			facet_groups = [exhibition]
		},

		transcript_available = {
			type = has,
			
			table = ca_occurrences,
			element_code = ca_occurrences.description.descriptText,
			
			label_yes = _("yes"),
			label_no = _("no"),
			
			single_value = 1,
			
			label_singular = _("transcript available"),
			label_plural = _("transcript available"),
			facet_groups = [bibliography]
		},
	}
}

ca_objects = {
	name = _("Objects"),

 	facets = {

		object_source = {
			type = attribute,
			element_code = ca_objects.source,

			multiple = 1,
			group_mode = none,
		
			description = _("Find object by source."),
			label_singular = _("Collection"),
			label_plural = _("Collections"),
			facet_groups = [artworks, archivalObjects]
		},

		object_decade = {
			type = normalizedDates,
			element_code = ca_objects.date.dates_value,
			normalization = decades,
		
			multiple = 1,
			group_mode = none,
		
			description = _("Find object by decade."),
		
			label_singular = _("Decade"),
			label_plural = _("Decades"),
			facet_groups = [artworks, archivalObjects]
		},

		object_year = {
			type = normalizedDates,
			element_code = ca_objects.date.dates_value,
			normalization = years,
		
			multiple = 1,
			group_mode = none,
		
			description = _("Find object by year."),
		
			label_singular = _("Year"),
			label_plural = _("Years"),
			facet_groups = [artworks, archivalObjects]
		},

		object_classification = {
			type = attribute,
			element_code = ca_objects.classification,
		
			multiple = 1,
			group_mode = none,
		
			description = _("Find object by classification."),
			label_singular = _("Classification"),
			label_plural = _("Classifications"),
			facet_groups = [artworks]
		},

		object_series = {
			type = attribute,
			element_code = ca_objects.series,

			multiple = 1,
			group_mode = none,

			description = _("Find object by series."),
			label_singular = _("Series"),
			label_plural = _("Series"),
			facet_groups = [artworks]
		},

		object_keywords = {
			type = attribute,
			element_code = ca_objects.keywords,

			multiple = 1,
			group_mode = none,
		
			description = _("Find object by keyword."),
			label_singular = _("Keyword"),
			label_plural = _("Keywords"),
			facet_groups = [artworks]
		},

		object_type = {
			type = fieldList,
			field = type_id,
			
			multiple = 1,
			group_mode = none,

			label_singular = _("type"),
			label_plural = _("types"),
			description = _("Find objects according to the Types defined."),
			facet_groups = [archivalObjects]
		},

		transcript_available = {
			type = has,
			
			table = ca_objects,
			element_code = ca_objects.transcription,
			
			label_yes = _("yes"),
			label_no = _("no"),
			
			single_value = 1,
			
			label_singular = _("transcribed"),
			label_plural = _("transcribed"),
			facet_groups = [archivalObjects]
		},
	}
}