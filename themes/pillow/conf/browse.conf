cache_timeout = 0

menubarFacetGroup = panel 

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
 		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		facetGroup = filter,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {		
			Date = ca_objects.date,		
			Relevance = _natural,	
			Title = ca_object_labels.name_sort,	
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = desc,
			Relevance = asc,
			Title = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	entities = {
		displayName = _(People or Company),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [],
		facetGroup = entity,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_entities.idno,
			Name = ca_entity_labels.surname;ca_entity_labels.forename
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	productions = {
		displayName = _(Performances at the Pillow),
		labelSingular = _("production"),
 		labelPlural = _("productions"),
		table = ca_occurrences,
		restrictToTypes = [production],
		facetGroup = production,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_occurrences.idno,
			Title = ca_occurrence_labels.name_sort,
			Date = ca_occurrences.productionDate
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [],
		facetGroup = collection,
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		
		sortBy = {
			Relevance = _natural,
			Identifier = ca_collections.idno,
			Title = ca_collection_labels.name_sort,
			Date = ca_collections.unitdate.date_value
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	}	
}

ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			facet_groups = [panel, filter],

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			facet_groups = [panel, filter],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person/company"),
			label_plural = _("people/companies"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},			
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			
			group_mode = none,
			facet_groups = [panel, filter],
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		production_facet = {
			type = authority,
			table = ca_occurrences,
			generate_facets_for_types = 0,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [production],
			
			individual_group_display = 1,
			facet_groups = [filter],
			
			show_all_when_first_facet = 0,
			
			 order_by_label_fields = [name_sort],
			
			groupings = {
				label = _("Name"), 
				ca_attribute_dates_value:years = _("Years")
			},
			
			group_mode = alphabetical,
			
			label_singular = _("production"),
			label_plural = _("productions"),
			description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		},		
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			facet_groups = [panel],
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;â¬…&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("topic"),
			label_plural = _("topics"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},
		subject_facet = {
			type = attribute,
			element_code = 	lcsh_terms,
			facet_groups = [filter],
			
			group_mode = none,
			
			label_singular = _("subject"),
			label_plural = _("subjects")
		},		
		event_facet = {
			type = attribute,
			element_code = event_type,
			relative_to = ca_occurrences,
			facet_groups = [panel],
			
			group_mode = none,
			
			label_singular = _("event type"),
			label_plural = _("event types")
		},						
		#has_media_facet = {
		#	type = has,
		#	
		#	table = ca_object_representations,
		#	relationship_table = ca_objects_x_object_representations,
		#	restrict_to_types = [],
		#	restrict_to_relationship_types = [],
		#	
		#	label_yes = _("Has media"),
		#	label_no = _("Does not have media"),
			
		#	single_value = 1,
			
		#	label_singular = _("has media"),
		#	label_plural = _("has media"),
		#	description = _("Find objects that have associated media."),
		#},		
		#year_facet = {
		#	type = normalizedDates,
		#	element_code = date,
		#	normalization = years,
			
		#	group_mode = none,
			
		#	label_singular = _("year"),
		#	label_plural = _("years"),
		#	description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		#},
		#work_facet = {
		#	type = authority,
		#	table = ca_occurrences,
		#	generate_facets_for_types = 0,
		#	relationship_table = ca_objects_x_occurrences,
		#	restrict_to_types = [work],
			
		#	individual_group_display = 1,
			
		#	show_all_when_first_facet = 0,
			
		#	groupings = {
		#		label = _("Name"), 
		#		ca_attribute_dates_value:years = _("Years")
		#	},
			
		#	group_mode = alphabetical,
			
		#	label_singular = _("work"),
		#	label_plural = _("works"),
		#	description = _("Find objects by Occurrences associated with your records&#44; such as historical events&#44; productions&#44; and other record types in your collection."),
		#},	
					
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			facet_groups = [filter],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},
	}
}

ca_occurrences = {
	name = _("Performances at the Pillow"),
	facets = {
		name_label = {
			type = label,
			
			group_mode = alphabetical,
			facet_groups = [panel],
			
			individual_group_display = 1,
			order_by_label_fields = [name_sort],

			label_singular = _("title"),
			label_plural = _("titles"),
			description = _(""),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = productionDate,
			normalization = decades,
			facet_groups = [panel],
			
			group_mode = alphabetical,
			
			label_singular = _("decade"),
			label_plural = _("decades")
		},
		venue_facet = {
			type = attribute,
			element_code = venue,

			facet_groups = [production],
			
			group_mode = none,
			
			label_singular = _("venue"),
			label_plural = _("venues")
		},					
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			facet_groups = [production],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person/company"),
			label_plural = _("people/companies")
		},
#		object_facet = {
#			type = authority,
#			table = ca_objects,
#			relationship_table = ca_objects_x_occurrences,
#			restrict_to_types = [],
			
#			group_mode = alphabetical,
			
#			label_singular = _("object"),
#			label_plural = _("objects")
#		},
#		term_facet = {
#			type = authority,
#			table = ca_list_items,
#			relationship_table = ca_occurrences_x_vocabulary_terms,
#			restrict_to_types = [],
			
#			group_mode = alphabetical,
			
#			label_singular = _("term"),
#			label_plural = _("terms")
#		},		
#		year_facet = {
#			type = normalizedDates,
#			element_code = productionDate,
#			normalization = years,
			
#			group_mode = alphabetical,
			
#			label_singular = _("year"),
#			label_plural = _("years")
#		},
#		work_decade_facet = {
#			type = normalizedDates,
#			element_code = creationDate,
#			normalization = decades,
			
#			group_mode = alphabetical,
			
#			label_singular = _("decade"),
#			label_plural = _("decades")
#		},		
#		work_year_facet = {
#			type = normalizedDates,
#			element_code = creationDate,
#			normalization = years,
			
#			group_mode = alphabetical,
			
#			label_singular = _("year"),
#			label_plural = _("years")
#		},		
	}
}
ca_entities = {
	name = _("Entities"),
	facets = {
		manu_label = {
			type = label,
			
			group_mode = alphabetical,
			facet_groups = [panel],
			
			individual_group_display = 1,
			order_by_label_fields = [surname, forename, middlename],

			label_singular = _("name"),
			label_plural = _("names"),
			description = _(""),
		},				
#		place_facet = {
#			type = authority,
#			table = ca_places,
#			relationship_table = ca_entities_x_places,
#			restrict_to_types = [],
#			
#			group_mode = alphabetical,
			
#			label_singular = _("place"),
#			label_plural = _("places")
#		},
#		occurrence_facet = {
#			type = authority,
#			table = ca_occurrences,
#			generate_facets_for_types = 1,
#			relationship_table = ca_entities_x_occurrences,
#			restrict_to_types = [],
			
#			group_mode = alphabetical,
			
#			indefinite_article = an,
#			label_singular = _("occurrence"),
#			label_plural = _("occurrences")
#		},
#		collection_facet = {
#			type = authority,
#			table = ca_collections,
#			relationship_table = ca_entities_x_collections,
#			restrict_to_types = [],
			
#			group_mode = alphabetical,
			
#			label_singular = _("collection"),
#			label_plural = _("collections")
#		},
#		term_facet = {
#			type = authority,
#			table = ca_list_items,
#			relationship_table = ca_entities_x_vocabulary_terms,
#			restrict_to_types = [],
			
#			group_mode = alphabetical,
			
#			label_singular = _("term"),
#			label_plural = _("terms")
#		},
		type_facet = {
			type = fieldList,
			field = type_id,
			facet_groups = [panel],
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class = col-xs-9 col-sm-9 col-md-9 col-lg-9

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class = col-xs-3 col-sm-3 col-md-3  col-lg-3 