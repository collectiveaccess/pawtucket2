# Set this to disabled the "lightbox" feature
disable_lightbox = 0
# Set this to disabled the "classroom" feature
disable_classroom = 1
# Default value for "access" level of newly created lightboxes
lightbox_default_access = 1

# ligthbox
user_set_type = palette
project_set_type = project


#
# Set this if you want urls that refer to specified items to use the identifier 
# rather than CollectiveAccess internal ID. The former is more descriptive but will
# not work if you have duplicate identifiers in your catalogue!
#
use_identifiers_in_urls = 0

dont_enforce_access_settings = 0

#
# Front page set code
#
front_page_set_code = frontPage

#
# Allow PHP code in content-managed site pages
#
# By default only value tags in the form {{{tag-name}}} are allowed in Pawtucket site page templates. 
# If you need the flexibility and power afforded by direct embedding of PHP code in your templates
# set this option to a non-zero value. Note that enabling this option will allow execution of ANY
# code embedded in the template on EVERY page load. Depending upon your point of view this is either a
# feature or a security hole. It doesn't have to be a problem, but keep it in mind...
#
allow_php_in_site_page_templates = 0


#
# Configuration for Excel (xlsx) and PowerPoint (pptx) export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
export_formats = {
	ca_objects = {
		field_chart = {
			name = Field Chart,
			type = xlsx,
			columns = {
				_(Botanical Name) = {
					template = "<i>^ca_objects.genus<ifdef code='ca_objects.species'> ^ca_objects.species</ifdef><ifdef code='ca_objects.variety'> '^ca_objects.variety'</ifdef></i>"
				},
				_(Plant Type) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.plant_type</unit>"
				},
				_(Height) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.height</unit>"
				},
				_(Width) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.width</unit>"
				},
				_(Spacing) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.spacing</unit>"
				},
				_(Light) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.light_needs</unit>"
				},
				_(Water Use) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.water_use</unit>"
				},
				_(Soil Moisture) = {
					template = "<unit relativeTo='ca_objects' delimiter=', '>^ca_objects.soil_moisture</unit>"
				},
				_(Soil Type) = {
					template = "<ifdef code='ca_objects.soil_type_best'><unit relativeTo='ca_objects' delimiter=', '>^ca_objects.soil_type_best</unit> (best)</ifdef><ifdef code='ca_objects.soil_type_best|ca_objects.soil_type_tolerates'>; </ifdef><ifdef code='ca_objects.soil_type_tolerates'><unit relativeTo='ca_objects' delimiter=', '>^ca_objects.soil_type_tolerates</unit> (tolerates);</ifdef>"
				}
			}
		},
#		basic_ppt = {
#			name = PowerPoint (basic information),
#			type = pptx,
#			columns = {
#				Image = {
#					template = ^ca_object_representations.media.large,
#					width = 4in,
#					height = 3.5in,
#					x = 0.5in,
#					y = 1.5in
#				},
#				Object = {
#					template = ^ca_objects.preferred_labels.name (^ca_objects.idno),
#					width = 10in,
#					height = 1in,
#					x = 0in,
#					y = 0.25in,
#					size = 20px,
#					bold = 1,
#					color = 000000,
#					align = center
#				},
#				Description = {
#					template = ^ca_objects.description,
#					width = 3in,
#					height = 5in,
#					x = 6.5in,
#					y = 1.5in,
#					size = 12px,
#					color = 000000,
#					align = left
#				},
#				Date = {
#					template = ^ca_objects.creation_date,
#					width = 1.5in,
#					height = 15px,
#					x = 8.5in,
#					y = 7.1in,
#					size = 12px,
#					color = 000000
#				}
#			}
#		}
	}
}


#
# Display template used to format information text at bottom of media overlay. Template is evaluated relative to the item with which the media is
# associated. If left blank preferred label + identifier of the item associated with the media is displayed.
#
media_overlay_titlebar_template =

#
# Representation versions to provide download option for in media viewer. If omitted then no download control is displayed
# (Uncomment the directive below to enable downloads)
#
#ca_object_representation_download_versions = [original]

#
# Configuration for image comparison interface. Set first key to table name (for now only ca_objects are supported)
# and second level keys to option names with values. 
# 
compare_images = {
	ca_objects = {
		# template to use when displaying object name within compare interface
		title_template = ^ca_objects.preferred_labels.name
	}
}

# 
# Configuration for registration security method
# This can either be set to sum_equation (for basic arithmetic challenge question: 4+7=?) or captcha, which implements a Google reCaptcha
# If you select reCaptcha, you will have to register the application and provide two API keys to allow google to process the captcha
# You can do so at https://www.google.com/recaptcha
#

registration_security = sum_equation
google_recaptcha_sitekey = 
google_recaptcha_secretkey = 

report_img = brambleLogoTeal.png



allow_duplicate_id_number_for_ca_occurrences = 1