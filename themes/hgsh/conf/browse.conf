# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browse_menu_format = list

cache_timeout = 0
#
# 
#
browseTypes = {
	organisations = {
		displayName = _("Organisations"),
		labelSingular = _("organisation"),
 		labelPlural = _("organisations"),
		table = ca_entities,
		restrictToTypes = [externalOrg, localOrg],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [cover]
		},
		
		sortBy = {
			Name = ca_entity_labels.displayname,
			Relevance = _natural,
			Identifier = ca_entities.idno
		}
	},
	people = {
		displayName = _(People),
		labelSingular = _("person"),
 		labelPlural = _("people"),
		table = ca_entities,
		restrictToTypes = [ind],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [cover]
		},
		
		sortBy = {
			Name = ca_entity_labels.displayname,
			Relevance = _natural,
			Identifier = ca_entities.idno
		}
	},
	places = {
		displayName = _(Places),
		labelSingular = _("place"),
 		labelPlural = _("places"),
		table = ca_places,
		restrictToTypes = [placeGroup],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}
		},
		
		
		options = {
			selectMediaUsingRelationshipTypes = [depicts]
		},
		
		sortBy = {
			Name = ca_place_labels.displayname,
			Relevance = _natural,
			Identifier = ca_places.idno
		}
	},
	objects = {
		displayName = _(Objects),
		labelSingular = _("object"),
		labelPlural = _("objects"),
		table = ca_objects,
		
		restrictToTypes = [],
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}
		},
		sortBy = {
			Title = ca_object_labels.displayname,
			Identifier = ca_objects.idno
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc
		}
	},
#	newspapers = {
#		displayName = _(News),
#		labelSingular = _("News"),
#		labelPlural = _("News"),
#		table = ca_objects,
		
#		restrictToTypes = [newspaper],
#		availableFacets = [],
#		dontExpandTypesHierarchically = 1,
	
		# formats available for display of results
		# possible values are: images, list, timeline, map
#		views = {
#			images = {}
#		},
#		sortBy = {
#			Title = ca_object_labels.displayname,
#			Identifier = ca_objects.idno
#		},
		# --- default sort direction for the sortBy options
#		sortDirection = {
#			Identifier = asc,
#			Title = desc
#		}
#	},
	collections = {
		displayName = _(Collections),
		labelSingular = _("collection"),
 		labelPlural = _("collections"),
		table = ca_collections,
		restrictToTypes = [collection],
		
		baseCriteria = {
			show_homepage = [yes] 
		},
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			images = {}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [cover]
		},
		
		sortBy = {
			Name = ca_collection_labels.displayname,
			Relevance = _natural,
			Identifier = ca_collections.idno
		}
	},
	events = {
		displayName = _(Events),
		labelSingular = _("event"),
 		labelPlural = _("events"),
		table = ca_occurrences,
		restrictToTypes = [event],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = { 
			timeline = {
				data = ca_occurrences.event_date,
				display = {
					title_template = <l>^ca_occurrences.preferred_labels.name</l>,
					description_template = <p>^ca_occurrences.brief_description</p>,
					credit_template =,
					caption_template =,
					image = "<ifdef code='ca_object_representations.media.small'>^ca_object_representations.media.small</ifdef><ifnotdef code='ca_object_representations.media.small'><unit relativeTo='ca_objects' restrictToRelationships='cover' length='1'>^ca_object_representations.media.small</unit></ifnotdef>",
					icon = "<unit relativeTo='ca_objects' restrictToRelationships='cover' length='1'>^ca_object_representations.media.icon</unit>"
				}
			}
		},
		
		options = {
			selectMediaUsingRelationshipTypes = [cover]
		},
		
		sortBy = {
			Date = ca_occurrence_labels.event_date
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

placeholder_media_icon = <i class='fa fa-picture-o fa-2x'></i>



# ------------------------------------------------------------------
# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("object type"),
			label_plural = _("object types"),
			description = _("Find objects according to the Types defined in your collection profile."),
		},	
		entity_org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [externalOrg, localOrg],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organisation"),
			label_plural = _("organisations"),
			description = _("Find objects according to the organisation associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [ind],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or heirarchy of place names.")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		},
		event_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrencess,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("event"),
			label_plural = _("events"),
			description = _("Find objects according to the Events they belong to."),
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = alphabetical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			label_singular = _("term"),
			label_plural = _("terms"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},
		century_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = centuries,
			
			group_mode = none,
			
			label_singular = _("century"),
			label_plural = _("centuries"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = creation_date,
			normalization = years,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years"),
			description = _("Find objects according to associated dates.  You can normalize these dates by year&#44; decade or century."),			
		}
	}
}

# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	name = _("Entities"),
	facets = {
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or heirarchy of place names.")
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		}
	}
}
# --------------------------------------------------------------------
# Configuration for collection browse
ca_collections = {
	name = _("Collections"),
	facets = {
		entity_org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [externalOrg, localOrg],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organisation"),
			label_plural = _("organisations"),
			description = _("Find objects according to the organisation associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [ind],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
			description = _("Find objects according to the place relationships in your collection.  You can choose to view the available places as a list or heirarchy of place names.")
		},
		show_homepage = {
			type = attribute,
			element_code = show_homepage,
			
			group_mode = alphabetical,
			
			label_singular = _("homepage"),
			label_plural = _("homepage")
		},		
	}
}

# --------------------------------------------------------------------
# Configuration for place browse
ca_places = {
	name = _("Places"),
	facets = {
		entity_org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [externalOrg, localOrg],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organisation"),
			label_plural = _("organisations"),
			description = _("Find objects according to the organisation associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [ind],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_places_x_collections,
			restrict_to_types = [],
			
			group_mode = none,

			label_singular = _("collection"),
			label_plural = _("collections"),
			description = _("Find objects according to the Collections they belong to."),
		}
	}
}
# ------------------------------------------------------------------
# Configuration for events browse
ca_occurrences = {
	name = _("Events"),
	facets = {
		entity_org_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [externalOrg, localOrg],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("organisation"),
			label_plural = _("organisations"),
			description = _("Find events according to the organisation associated with your records."),
		}
	}
}