cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _("Browse All"),
		labelSingular = _("Object"),
 		labelPlural = _("Objects"),
		table = ca_objects,
		
		restrictToTypes = [oral_history, archival_item, cultural_item, library_item, academic_work],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.display_date'><br/>^ca_objects.display_date%delimiter=,_</ifdef><ifnotdef code='ca_objects.display_date'><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef></ifnotdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.display_date'><br/>^ca_objects.display_date%delimiter=,_</ifdef><ifnotdef code='ca_objects.display_date'><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef></ifnotdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			}
		},
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Date = ca_objects.date,
			Identifier = ca_objects.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		dontShowInBrowseMenu = 0,
		facetGroup = all
	},
	archives = {
		displayName = _("Archives & Oral History"),
		labelSingular = _("Archives & Oral History"),
 		labelPlural = _("Archives & Oral History"),
		table = ca_objects,
		
		restrictToTypes = [oral_history, archival_item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.display_date'><br/>^ca_objects.display_date%delimiter=,_</ifdef><ifnotdef code='ca_objects.display_date'><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef></ifnotdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.display_date'><br/>^ca_objects.display_date%delimiter=,_</ifdef><ifnotdef code='ca_objects.display_date'><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef></ifnotdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			}
		},
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Date = ca_objects.date,
			Identifier = ca_objects.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = desc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		dontShowInBrowseMenu = 1,
		facetGroup = archives
	},
	cultural = {
		displayName = _("Cultural Collection"),
		labelSingular = _("Cultural Collection"),
 		labelPlural = _("Cultural Collection"),
		table = ca_objects,
		
		restrictToTypes = [cultural_item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			}
		},
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Date = ca_objects.date,
			Identifier = ca_objects.idno,
			
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = desc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = cultural
	},
	library = {
		displayName = _("Library"),
		labelSingular = _("Library"),
 		labelPlural = _("Library"),
		table = ca_objects,
		
		restrictToTypes = [library_item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			}
		},
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Date = ca_objects.date,
			Identifier = ca_objects.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = desc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = library
	},
	academic = {
		displayName = _("Academic Works"),
		labelSingular = _("Academic Work"),
 		labelPlural = _("Academic Work"),
		table = ca_objects,
		
		restrictToTypes = [academic_work],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef><ifcount code='ca_entities' restrictToRelationshipTypes='creator' min='1'><br/><unit relativeTo='ca_entities' restrictToRelationshipTypes='creator' delimiter=', '>^ca_entities.preferred_labels.displayname</unit></ifcount></l>",
			}
		},
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Date = ca_objects.date,
			Identifier = ca_objects.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = desc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = academic
	},
	curriculum = {
		displayName = _("Curriculum"),
		labelSingular = _("Curriculum Item"),
 		labelPlural = _("Curriculum Items"),
		table = ca_objects,
		
		restrictToTypes = [curriculum_item],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef></l>",
			},
			list = {
				result_caption = "<small><l>^ca_objects.idno</l></small><br/><l><span class='underline'>^ca_objects.preferred_labels</span><ifdef code='ca_objects.date'><br/>^ca_objects.date%delimiter=,_</ifdef></l>",
			}
		},
		sortBy = {
			Title = ca_objects.preferred_labels.name,
			Date = ca_objects.date,
			Identifier = ca_objects.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = desc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = curriculum,
		dontShowInBrowseMenu = 1,
	},
	collection = {
		displayName = _("Archival Collections"),
		labelSingular = _("Archival Collection"),
 		labelPlural = _("Archival Collections"),
		table = ca_collections,
		
		restrictToTypes = [collection],
		dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		sortBy = {
			Title = ca_collection_labels.name,
			Identifier = ca_collections.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Identifier = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		dontShowInBrowseMenu = 1
	},
	collection_series = {
		displayName = _("Archival Series"),
		labelSingular = _("Archival Series"),
 		labelPlural = _("Archival Series"),
		table = ca_collections,
		
		restrictToTypes = [series],
		dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		sortBy = {
			Title = ca_collection_labels.name,
			Identifier = ca_collections.idno,
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Date = desc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		dontShowInBrowseMenu = 1
	},
	collection_subseries = {
		displayName = _("Archival Subseries"),
		labelSingular = _("Archival Subseries"),
 		labelPlural = _("Archival Subseries"),
		table = ca_collections,
		
		restrictToTypes = [Subseries],
		dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		sortBy = {
			Title = ca_collection_labels.name,
			Identifier = ca_collections.idno
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Identifier = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		dontShowInBrowseMenu = 1
	},
	collection_file = {
		displayName = _("Archival File"),
		labelSingular = _("Archival Files"),
 		labelPlural = _("Archival Files"),
		table = ca_collections,
		
		restrictToTypes = [file],
		dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {
				result_caption = "<small><l>^ca_collections.idno</l></small><br/><l>^ca_collections.preferred_labels</l>",
			}
		},
		sortBy = {
			Title = ca_collection_labels.name,
			Identifier = ca_collections.idno,
			
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Identifier = asc,
		},
		# --- sortControlType = dropdown or list
		sortControlType = list,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		dontShowInBrowseMenu = 1
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = Browse Collections

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =


# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("Object Type"),
			label_plural = _("Object Types"),
			facet_groups = [all, archives]
		},
		object_type_facet = {
			type = attribute,
			element_code = object_type,
			
			group_mode = none,

			label_singular = _("Item Type"),
			label_plural = _("Item Types"),
			facet_groups = [all, cultural],
		},	
		record_type_facet = {
			type = attribute,
			element_code = record_type,
			
			group_mode = none,

			label_singular = _("Record type"),
			label_plural = _("Record types"),
			facet_groups = [all, archives],
		},	
		material_facet = {
			type = attribute,
			element_code = materials,
			
			group_mode = none,

			label_singular = _("Material"),
			label_plural = _("Materials"),
			facet_groups = [all, archives, cultural, library, academic],
		},	
		gdm_facet = {
			type = attribute,
			element_code = GMD,
			
			group_mode = none,

			label_singular = _("General Material Designation"),
			label_plural = _("General Material Designations"),
			facet_groups = [all, archives, cultural, library, academic],
		},
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			
			group_mode = none,
			include_unknown = 1,
			
			label_singular = _("date"),
			label_plural = _("dates"),
			facet_groups = [all, archives, cultural, library, academic]			
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
			
			group_mode = none,
			include_unknown = 1,
			requires = decade_facet,
			
			label_singular = _("date"),
			label_plural = _("dates"),
			facet_groups = [all, archives, cultural, library, academic]			
		},
		learning_level_facet = {
			type = attribute,
			element_code = learning_level,
			
			group_mode = none,

			label_singular = _("Learning Level"),
			label_plural = _("Learning Levels"),
			facet_groups = [curriculum],
		},
		lesson_plan_type_facet = {
			type = attribute,
			element_code = lesson_plan_type,
			
			group_mode = none,

			label_singular = _("Lesson Plan Type"),
			label_plural = _("Lesson Plan Types"),
			facet_groups = [curriculum],
		},	
		learning_objectives_facet = {
			type = attribute,
			element_code = learning_objectives,
			
			group_mode = none,

			label_singular = _("Learning Objective"),
			label_plural = _("Learning Objectives"),
			facet_groups = [curriculum],
		},	
		theme_facet = {
			type = attribute,
			element_code = theme,
			
			group_mode = none,

			label_singular = _("Theme"),
			label_plural = _("Themes"),
			facet_groups = [all, archives, cultural, library, academic, curriculum],
		},	
#		subjects_academic_facet = {
#			type = attribute,
#			element_code = subjects_academic,
			
#			group_mode = none,

#			label_singular = _("Subject"),
#			label_plural = _("Subjects"),
#		},	
#		subjects_facet = {
#			type = attribute,
#			element_code = subjects,
			
#			group_mode = none,

#			label_singular = _("Subject"),
#			label_plural = _("Subjects"),
#		},
		genre_facet = {
			type = attribute,
			element_code = genre,
			
			group_mode = none,

			label_singular = _("Genre"),
			label_plural = _("Genres"),
			facet_groups = [all, archives, cultural, library, academic],
		},	
		language_facet = {
			type = attribute,
			element_code = language,
			
			group_mode = none,

			label_singular = _("Language"),
			label_plural = _("Languages"),
			facet_groups = [all, archives, cultural, library, academic, curriculum],
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			exclude_relationship_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [all, archives, cultural, library, academic, curriculum],
			
			indefinite_article = an,
			label_singular = _("Related person / organization"),
			label_plural = _("Related people & organizations"),
			description = _("Find objects according to the people associated with your records.  You can browse by name&#44; role&#44; or entity type according to your configuration."),
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			facet_groups = [all, archives, cultural, library, academic],
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
		},
		term_facet = {
			type = authority,
			table = ca_list_items,
			relationship_table = ca_objects_x_vocabulary_terms,
			restrict_to_types = [],
			
			individual_group_display = 0,
			
			group_mode = hierarchical,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter =  &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = ,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			facet_groups = [all, archives, cultural, library, academic],
			
			label_singular = _("term"),
			label_plural = _("terms"),
			description = _("Browse keywords and vocabulary terms you have associated with your records.  You can displays your keywords as a list or hierarchy of terms.")
		},	
		occurrence_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Related event"),
			label_plural = _("Related events"),
			requires = x
		},
		collection_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			indefinite_article = an,
			label_singular = _("Related collections"),
			label_plural = _("Related collections"),
			requires = x
		}


	}
}
ca_collections = {
	name = _("Collections"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("type"),
			label_plural = _("types")
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_collections,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("entity"),
			label_plural = _("entities")
		},
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			
			group_mode = none,
			include_unknown = 1,
			
			label_singular = _("date"),
			label_plural = _("dates")			
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
			
			group_mode = none,
			include_unknown = 1,
			requires = decade_facet,
			
			label_singular = _("date"),
			label_plural = _("dates")			
		}
	}
}