# Set this to disable the "classroom" feature
disable_classroom = 1

#
# Set this if you want urls that refer to specified items to use the identifier 
# rather than CollectiveAccess internal ID. The former is more descriptive but will
# not work if you have duplicate identifiers in your catalogue!
#
use_identifiers_in_urls = 0

dont_enforce_access_settings = 0

# users must be logged in to access site
pawtucket_requires_login = 1

# -------------------
# Registered user features
# -------------------
dont_allow_registration_and_login = 0
dont_approve_logins_on_registration = 1
email_notification_for_new_registrations = 0
dont_moderate_comments = 1
dont_email_notification_for_new_comments = 1
enable_bookmarks = 1

#
# Front page set code
#
front_page_set_code = frontPage

#
# Allow PHP code in content-managed site pages
#
# By default only value tags in the form {{{tag-name}}} are allowed in Pawtucket site page templates. 
# If you need the flexibility and power afforded by direct embedding of PHP code in your templates
# set this option to a non-zero value. Note that enabling this option will allow execution of ANY
# code embedded in the template on EVERY page load. Depending upon your point of view this is either a
# feature or a security hole. It doesn't have to be a problem, but keep it in mind...
#
allow_php_in_site_page_templates = 0

report_img = HFF_logo@2x.png
#
# Configuration for Excel (xlsx) and PowerPoint (pptx) export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
export_formats = {
	ca_objects = {
		basic_excel = {
			name = Excel (basic information),
			type = xlsx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.small
				},
				Type = {
					template = ^ca_objects.type_id
				},
				Identifier = {
					template = ^ca_objects.idno
				},
				Title = {
					template = ^ca_objects.preferred_labels
				},
				Date = {				
					template = "<ifdef code='ca_objects.unitdate.dacs_date_text'>^ca_objects.unitdate.dacs_date_text</ifdef><ifdef code='ca_objects.common_date'>^ca_objects.common_date</ifdef>"

				}	
			}
		},
		artwork_excel = {
		#Identifier, Type, Artist, Title, Date, Medium, Dimensions, and Current Collection
			name = Excel (artwork),
			type = xlsx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.small
				},
				Identifier = {
					template = ^ca_objects.idno
				},
				Type = {
					template = ^ca_objects.type_id
				},
				Artist = {
					template = "<unit relativeTo='ca_entities' restrictToRelationshipTypes='artist' delimiter=', '>^ca_entities.preferred_labels</unit>"
				},
				Title = {
					template = ^ca_objects.preferred_labels
				},
				Date = {				
					template = ^ca_objects.common_date

				},
				Medium = {				
					template = ^ca_objects.medium_notes.medium_notes_text

				},
				Dimensions = {				
					template = ^ca_objects.dimensions.display_dimensions

				},
				"Current Collection" = {				
					template = "<unit relativeTo='ca_objects_x_occurrences'><if rule='^ca_objects_x_occurrences.current_collection =~ /no/'>^ca_occurrences.preferred_labels</if></unit>"

				}	
			}
		},
		digital_item_excel = {
			name = Excel (digital items),
			type = xlsx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.small
				},
				Title = {
					template = ^ca_objects.preferred_labels
				},
				Date = {				
					template = ^ca_objects.unitdate.dacs_date_text

				},
				Identifier = {
					template = ^ca_objects.idno
				},
				"Extent & Medium" ={
					template = "<unit relativeTo='ca_objects.extentDACS' delimiter='<br/>'><ifdef code='ca_objects.extentDACS.extent_number'>^ca_objects.extentDACS.extent_number </ifdef><ifdef code='ca_objects.extentDACS.extent_type'>^ca_objects.extentDACS.extent_type: </ifdef><ifdef code='ca_objects.extentDACS.physical_details'>^ca_objects.extentDACS.physical_details</ifdef><ifdef code='ca_objects.extentDACS.physical_details,ca_objects.extentDACS.extent_dimensions'>; </ifdef><ifdef code='ca_objects.extentDACS.extent_dimensions'>^ca_objects.extentDACS.extent_dimensions </ifdef></unit>"
				},
				Caption = {
					template = ^ca_object_representations.caption
				},
				Rights = {
					template = ^ca_object_representations.copyright_statement
				},
				Location = {
					template = "<unit relativeTo='ca_collections' delimiter=' > '>^ca_collections.hierarchy.preferred_labels</unit>"
				}
			}
		},
		library_excel = {
			name = Excel (library),
			type = xlsx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.small
				},
				Identifier = {
					template = ^ca_objects.idno
				},
				Type = {
					template = ^ca_objects.type_id
				},
				Title = {
					template = ^ca_objects.preferred_labels
				},
				Author = {
					template = ^ca_objects.author.author_name
				},
				Publisher = {
					template = "<unit relativeTo='ca_entities' restrictToRelationshipTypes='publisher' delimiter=', '>^ca_entities.preferred_labels</unit><ifcount code='ca_entities' restrictToRelationshipTypes='publisher' max='0'><ifdef code='ca_objects.publisher'>^ca_objects.publisher</ifdef></ifcount>"
				},
				Date = {				
					template = ^ca_objects.common_date

				},
				Library = {
					template = ^ca_objects.library
				},
				"Call Number" = {
					template = ^ca_objects.call_number
				},
				Tags = {
					template = ^ca_objects.artwork_status
				},
				Notes = {
					template = ^ca_objects.remarks
				}
			}
		}
	}
}


#
# Display template used to format information text at bottom of media overlay. Template is evaluated relative to the item with which the media is
# associated. If left blank preferred label + identifier of the item associated with the media is displayed.
#
media_overlay_titlebar_template =

#
# Representation versions to provide download option for in media viewer. If omitted then no download control is displayed
# (Uncomment the directive below to enable downloads)
#
#ca_object_representation_download_versions = [original]

#
# Configuration for image comparison interface. Set first key to table name (for now only ca_objects are supported)
# and second level keys to option names with values. 
# 
compare_images = {
	ca_objects = {
		# template to use when displaying object name within compare interface
		title_template = ^ca_objects.preferred_labels.name
	}
}

# 
# Configuration for registration security method
# This can either be set to sum_equation (for basic arithmetic challenge question: 4+7=?) or captcha, which implements a Google reCaptcha
# If you select reCaptcha, you will have to register the application and provide two API keys to allow google to process the captcha
# You can do so at https://www.google.com/recaptcha
#

registration_security = sum_equation
google_recaptcha_sitekey = 
google_recaptcha_secretkey = 

#global_template_values = {
#	home_page_tagline = {
#		name = Home Page Tag Line,
#		description = Sentence to appear on home page,
#		width = 700px,
#		height = 50px,
#		usewysiwygeditor = 0
#	}
#}
