cache_timeout = 0

#
# 
#
browseTypes = {
	objects = {
		displayName = _(Objects),
		labelSingular = _("Object"),
 		labelPlural = _("Objects"),
		table = ca_objects,
		
		restrictToTypes = [artwork, archival],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Rank = ca_objects.rank
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = desc,
			Rank = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = artwork_archive
	},
	artworks = {
		displayName = _(Artworks),
		labelSingular = _("Artwork"),
 		labelPlural = _("Artworks"),
		table = ca_objects,
		
		restrictToTypes = [artwork],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.common_date
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = asc,
			Date = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = artwork
	},
	artworks_hff = {
		displayName = _("HFF Artworks"),
		labelSingular = _("HFF Artwork"),
 		labelPlural = _("HFF Artworks"),
		table = ca_objects,
		
		restrictToTypes = [art_HFF, edition_HFF],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.common_date
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = asc,
			Date = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = artwork
	},
	artworks_nonhff = {
		displayName = _("Non HFF Artworks"),
		labelSingular = _("Non HFF Artwork"),
 		labelPlural = _("Non HFF Artworks"),
		table = ca_objects,
		
		restrictToTypes = [art_nonHFF, edition_nonHFF],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			Identifier = ca_objects.idno,
			Title = ca_object_labels.name,
			Date = ca_objects.common_date
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Identifier = asc,
			Title = asc,
			Date = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = artwork
	},
	library = {
		displayName = _("Library"),
		labelSingular = _("Library Item"),
 		labelPlural = _("Library Items"),
		table = ca_objects,
		
		restrictToTypes = [library],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		sortBy = {
			Author = ca_objects.author.author_name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Author = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = library
	},
	digital_items = {
		displayName = _("Digital Items"),
		labelSingular = _("Digital Item"),
 		labelPlural = _("Digital Items"),
		table = ca_objects,
		
		restrictToTypes = [archival],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {}
		},
		sortBy = {
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		}
		facetGroup = archive
	},
	exhibitions = {
		displayName = _("Exhibitions"),
		labelSingular = _("Exhibition"),
 		labelPlural = _("Exhibitions"),
		table = ca_occurrences,
		
		restrictToTypes = [exhibition],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {},
			images = {}
		},
		sortBy = {
			Date = ca_occurrences.common_date,
			Title = ca_occurrences.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc,
			Title = desc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
			selectMediaUsingRelationshipTypes = [featured, featured_simple],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
		},
		facetGroup = exhibition
	},
	references = {
		displayName = _("References"),
		labelSingular = _("Reference"),
 		labelPlural = _("References"),
		table = ca_occurrences,
		
		restrictToTypes = [literature],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		sortBy = {
			Author = ca_occurrences.lit_citation
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Author = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
#		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
#		},
		facetGroup = reference
	},
	chronology = {
		displayName = _("Chronology"),
		labelSingular = _("Chronology Entry"),
 		labelPlural = _("Chronology Entries"),
		table = ca_occurrences,
		
		restrictToTypes = [chronology],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			timeline = {
				data = ca_occurrences.common_date,
				display = {
					title_template = <l>^ca_occurrences.preferred_labels.name</l>,
					description_template = <unit relativeTo='ca_occurrences.chronology' delimiter=' ' limit='3'><p><b><ifdef code='ca_occurrences.chronology.chronology_date_display'>^ca_occurrences.chronology.chronology_date_display</ifdef><ifnotdef code='ca_occurrences.chronology.chronology_date_display'>^ca_occurrences.chronology.chronology_date</ifnotdef></b><br/>^ca_occurrences.chronology.chronology_text</p></unit>,
					credit_template = ^ca_occurrences.rightsStatement.rightsStatement_text,
					caption_template = <em>^ca_occurrences.caption</em>,
					image = <unit relativeTo='ca_objects' restrictToRelationshipTypes='featured_simple' length='1'>^ca_object_representations.media.small</unit>,
					icon = <unit relativeTo='ca_objects' restrictToRelationshipTypes='featured_simple' length='1'>^ca_object_representations.media.thumbnail</unit>
					#image = ^ca_object_representations.media.small%limit=1,
					#icon = ^ca_object_representations.media.thumbnail%limit=1
				}
			}
		},
		sortBy = {
			Date = ca_occurrences.common_date
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
			selectMediaUsingRelationshipTypes = [featured_simple],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description
		},
		facetGroup = chronology
	},
	collections = {
		displayName = _("Archival Collections"),
		labelSingular = _("Archival Collection"),
 		labelPlural = _("Archival Collections"),
		table = ca_collections,
		restrictToTypes = [],
		expandResultsHierarchically = 1,
		views = {
			list = {}
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		sortBy = {
			Title = ca_collection_labels.name
		},
		sortDirection = {
			Title = asc
		}
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat =

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		artist_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [artist],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [artwork, artwork_archive],
			
			indefinite_article = an,
			label_singular = _("Artist"),
			label_plural = _("Artists")
		},
		library_facet = {
			type = attribute,
			element_code = library,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [library],
			
			label_singular = _("Library"),
			label_plural = _("Library"),
		},
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,
			facet_groups = [artwork, artwork_archive],

			label_singular = _("Type"),
			label_plural = _("Types")
		},
		classification_facet = {
			type = attribute,
			element_code = classification,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [artwork, artwork_archive],
			
			label_singular = _("Classification"),
			label_plural = _("Classification"),
		},
		decade_facet_artwork = {
			type = normalizedDates,
			element_code = common_date,
			normalization = decades,
			
			group_mode = none,
			facet_groups = [artwork, artwork_archive, library],
			
			sort = ASC,
			
			label_singular = _("Decade"),
			label_plural = _("Decades")			
		},
		year_facet_artwork = {
			type = normalizedDates,
			element_code = common_date,
			normalization = years,
			
			group_mode = none,
			
			requires = decade_facet_artwork,
			facet_groups = [artwork, artwork_archive, library],
			
			label_singular = _("Year"),
			label_plural = _("Years")			
		},
		decade_facet_archive = {
			type = normalizedDates,
			element_code = dacs_date_value,
			normalization = decades,
			
			group_mode = none,
			facet_groups = [archive, artwork_archive],
			
			label_singular = _("Decade"),
			label_plural = _("Decades")			
		},
		year_facet_archive = {
			type = normalizedDates,
			element_code = dacs_date_value,
			normalization = years,
			
			group_mode = none,
			facet_groups = [archive, artwork_archive],
			
			requires = decade_facet_archive,
			
			label_singular = _("Year"),
			label_plural = _("Years")			
		},		
		collection_facet = {
			type = authority,
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_types = [collection],
			
			group_mode = none,
			facet_groups = [archive, artwork_archive],

			label_singular = _("Collection"),
			label_plural = _("Collections"),
		},
		media_types_facet = {
			type = attribute,
			element_code = media_types,
			relative_to = ca_object_representations,
			
			group_mode = alphabetical,
			facet_groups = [archive, artwork_archive],
			
			label_singular = _("Media Type"),
			label_plural = _("Media Types"),
		},
		agents_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [creator],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [archive, artwork_archive],
			
			indefinite_article = an,
			label_singular = _("Agent"),
			label_plural = _("Agents")
		},
		author_facet = {
			type = attribute,
			element_code = author.author_name,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [library],
			
			label_singular = _("Authors"),
			label_plural = _("Author"),
		},
		publisher_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			restrict_to_relationship_types = [publisher],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [library],
			
			indefinite_article = an,
			label_singular = _("Publisher"),
			label_plural = _("Publishers")
		}, 
		category_facet = {
			type = attribute,
			element_code = book_category,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [library],
			
			label_singular = _("Media Types"),
			label_plural = _("Media Types"),
		},
		lcsh_facet = {
			type = attribute,
			element_code = lcsh,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [library],
			
			label_singular = _("Subject"),
			label_plural = _("Subjects"),
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			facet_groups = [artwork, artwork_archive, archive],
			
			label_singular = _("Has media"),
			label_plural = _("Has media"),
			description = _("Find objects that have associated media."),
		},		
		exhibitions_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [exhibition],
			facet_groups = [artwork],
			
			requires = "xxx",
			
			group_mode = none,

			label_singular = _("Exhibitions"),
			label_plural = _("Exhibitions"),
		},		
		reference_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [reference],
			
			requires = xxx,
			
			group_mode = none,

			label_singular = _("Literature"),
			label_plural = _("Literature"),
		},		
		library_related_artwork_facet = {
			type = authority,
			table = ca_objects,
			relationship_table = ca_objects_x_objects,
			#restrict_to_relationship_types = [references],
			
			requires = xxx,
			
			group_mode = none,

			label_singular = _("Referenced"),
			label_plural = _("Referenced"),
		}
	}
}
ca_occurrences = {
	name = _("Other authorities"),
	facets = {
		type_facet = {
			type = attribute,
			element_code = solo_group,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [exhibition],
			
			label_singular = _("Type"),
			label_plural = _("Types"),
		}, 
		ref_type_facet = {
			type = attribute,
			element_code = pubType,
			
			group_mode = alphabetical,
			facet_groups = [reference],
			
			label_singular = _("Literature Type"),
			label_plural = _("Literature Type"),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = common_date,
			normalization = decades,
			
			group_mode = none,
			facet_groups = [exhibition, chronology, reference],
			
			dont_use_show_more = 1,
			label_singular = _("Decade"),
			label_plural = _("Decades")			
		},
		year_facet = {
			type = normalizedDates,
			element_code = common_date,
			normalization = years,
			
			group_mode = none,
			facet_groups = [exhibition, chronology, reference],
			
			requires = decade_facet,
			
			label_singular = _("Year"),
			label_plural = _("Years")			
		},
		venue_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			restrictToRelationshipTypes = [originator],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [exhibition],
			
			indefinite_article = an,
			label_singular = _("Organizing Venues"),
			label_plural = _("Organizing Venue")
		}, 
		traveling_facet = {
			type = attribute,
			element_code = traveling_yn,
			
			group_mode = alphabetical,
			order_by_label_fields = [label],
			facet_groups = [exhibition],
			
			label_singular = _("Traveling"),
			label_plural = _("Traveling"),
		},
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [chronology, reference],
			
			sort_by_result_count = 1,
			
			indefinite_article = an,
			label_singular = _("Individual/Organization"),
			label_plural = _("Individuals/Organizations")
		},
		home_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [home],
			
			group_mode = alphabetical,
			
			order_by_label_fields = [name],
			facet_groups = [chronology],
			
			sort_by_result_count = 1,
			dont_expand_hierarchically = 1,
			show_hierarchy = 0,
			indefinite_article = an,
			label_singular = _("Location, Home"),
			label_plural = _("Locations, Home")
		},
		studio_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [studio],
			sort_by_result_count = 1,
			group_mode = alphabetical,
			order_by_label_fields = [name],
			facet_groups = [chronology],
			dont_expand_hierarchically = 1,
			sort_by_result_count = 1,
			
			show_hierarchy = 0,
			indefinite_article = an,
			label_singular = _("Location, Studio"),
			label_plural = _("Locations, Studio")
		},
		travel_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			restrict_to_relationship_types = [travel],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			facet_groups = [chronology],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("Location, Travel"),
			label_plural = _("Locations, Travel")
		}
	}
}
ca_collections = {
	name = _("Archival Collections"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = alphabetical,
			
			label_singular = _("Type"),
			label_plural = _("Types")
		}
	},
	agents_facet = {
		# 'type' can equal authority, attribute, fieldList, normalizedDates
		type = authority,		
		table = ca_entities,
		relationship_table = ca_entities_x_collections,
		restrict_to_types = [],
		restrict_to_relationship_types = [],
		
		group_mode = alphabetical,
		
		order_by_label_fields = [surname, forename, middlename],
		
		indefinite_article = an,
		label_singular = _("Agent"),
		label_plural = _("Agents")
	}
}
