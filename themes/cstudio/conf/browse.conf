cache_timeout = 0

#
# 
#
browseTypes = {
	artwork = {
		displayName = _(Artwork),
		labelSingular = _("artwork"),
 		labelPlural = _("artworks"),
		table = ca_objects,
		
		restrictToTypes = [artwork],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}
		},
		sortBy = {
			Date = ca_objects.art_date,
			Title = ca_object_labels.name
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Date = desc,
			Title = asc			
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType],
#			extendedInformationTemplate = ^ca_objects.description,
			imageResultTextTemplate = "<l><ifdef code='ca_objects.preferred_labels.name'><i>^ca_objects.preferred_labels.name</i></ifdef><ifdef code='ca_objects.art_date_container'><unit relativeTo='ca_objects.art_date_container'><if rule='^ca_objects.art_date_container.art_date_type =~ /Created/'><ifdef code='ca_objects.art_date_container.art_date'>, ^ca_objects.art_date_container.art_date</ifdef></if></unit></ifdef><br/><ifdef code='ca_objects.medium'>^ca_objects.medium, </ifdef><ifdef code='ca_objects.dim.dim_edition_display'>^ca_objects.dim.dim_edition_display</ifdef><ifnotdef code='ca_objects.dim.dim_edition_display'><ifdef code='ca_objects.dim.dim_edition_note'>^ca_objects.dim.dim_edition_note</ifdef></ifnotdef></l>",
		}
	},
	bibliography = {
		displayName = _(Bibliography),
		labelSingular = _("bibliography"),
 		labelPlural = _("bibliographies"),
		table = ca_occurrences,
		restrictToTypes = [bibliography],
		#showLetterBarFrom = ca_occurrence_labels.name,
		#showLetterBarSorts = [ca_occurrence_labels.name],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Title = ca_occurrence_labels.name,
			Author = ca_entities.surname%author
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Author = asc,
			
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
			listResultTextTemplate = "<l><ifdef code='ca_occurrences.lit_citation'>^ca_occurrences.lit_citation</ifdef><ifnotdef code='ca_occurrences.lit_citation'>^ca_occurrences.preferred_labels.name</ifnotdef></l>",
		},
		facetGroup = bibliography
	},
	exhibitions = {
		displayName = _(Exhibitions & Projects),
		labelSingular = _("exhibition & project"),
 		labelPlural = _("Exhibitions & Projects"),
		table = ca_occurrences,
		restrictToTypes = [exhibition_project],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			list = {}
		},
		
		sortBy = {
			Name = ca_occurrence_labels.name,
			Date = ca_occurrences.date
		},
		sortDirection = {
			Name = asc,
			Date = desc,
			
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,
		options = {
#			selectMediaUsingRelationshipTypes = [relationshipType],
#			selectMediaUsingTypes = [objectType]
			listResultTextTemplate = "<l>^ca_occurrences.preferred_labels.name<ifdef code='ca_occurrences.date'>, ^ca_occurrences.date</ifdef></l>",
		},
		facetGroup = exhibition
	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = 

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =

ca_objects = {
	name = _("Objects"),
	facets = {
		decade_facet = {
			type = normalizedDates,
			element_code = art_date,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades")
		},
		year_facet = {
			type = normalizedDates,
			element_code = art_date,
			normalization = years,
			requires = decade_facet,
			
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years")
		},
		category_facet = {
			type = attribute,
			element_code = art_type_list,
			
			group_mode = hierarchical,
			natural_sort = 0,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = ,
			
			order_by_label_fields = [name],
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			
			label_singular = _("Type/Category"),
			label_plural = _("Types/Categories")
		},
		theme_motif_facet = {
			type = attribute,
			element_code = theme_motif,
			
			group_mode = hierarchical,
			natural_sort = 0,
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = ,
			
			order_by_label_fields = [name],
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			
			label_singular = _("Theme/Motif"),
			label_plural = _("Themes/Motifs")
		},
		exhibition_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [exhibition_project],
			
			order_by_label_fields = [name],
			
			group_mode = alphabetical,
			requires = x,
			
			label_singular = _("Exhibition/Project/Event"),
			label_plural = _("Exhibitions/Projects/Events"),
		},
		bibliography_facet = {
			type = authority,
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [bibliography],
			
			order_by_label_fields = [name],
			
			group_mode = alphabetical,
			requires = x,
			
			label_singular = _("bibliography"),
			label_plural = _("bibliography"),
		}
	}
}

ca_occurrences = {
	name = _("Occurrences"),
	facets = {
		decade_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = decades,
			facet_groups = [exhibition,bibliography],
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades")
		},
		year_facet = {
			type = normalizedDates,
			element_code = date,
			normalization = years,
			requires = decade_facet,
			facet_groups = [exhibition,bibliography],
			group_mode = none,
			
			label_singular = _("year"),
			label_plural = _("years")
		},
		exhibition_type_facet = {
			type = attribute,
			element_code = exh_type_list,
			facet_groups = [exhibition],
			group_mode = alphabetical,
			natural_sort = 0,
			
			label_singular = _("Type"),
			label_plural = _("Types")
		},
		pub_type_facet = {
			type = attribute,
			element_code = pubType,
			
			group_mode = alphabetical,
			natural_sort = 0,
			facet_groups = [bibliography],
			label_singular = _("Type"),
			label_plural = _("Types")
		},
		venue_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,,
			restrict_to_relationship_types = [venue]
			restrict_to_relationship_types = [],
			facet_groups = [exhibition],
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("venue"),
			label_plural = _("venues"),
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_occurrences_x_places,
			restrict_to_types = [],
			
			
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 0,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = 3,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			facet_groups = [exhibition],
			
			indefinite_article = a,
			label_singular = _("location"),
			label_plural = _("locations"),
		},	
		entity_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_relationship_types = [author,editor],
			
			individual_group_display = 1,
			
			groupings = {
				label = _("Name"), 
				relationship_types = _("Role"),
				type = _("Type")
			},
			group_mode = alphabetical,
			natural_sort = 0,
			order_by_label_fields = [surname, forename, middlename],
			facet_groups = [bibliography],
			
			indefinite_article = an,
			label_singular = _("Editor/Author"),
			label_plural = _("Editors/Authors"),
		}
	}
}