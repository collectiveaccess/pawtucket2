# Set this to disable the "classroom" feature
disable_classroom = 1

menu_color = ffffff
footer_color = ffffff

branding = {
	report = {
		src = themes/amnhedu/assets/pawtucket/graphics/amnh-logo-black.svg,
		width = 200px,
		height = 50px,
		style = "margin-top: 20px;",
		alt = _(AMNH logo)
	}
}


registration_default_roles = [borrower]

#
# Set this if you want urls that refer to specified items to use the identifier 
# rather than CollectiveAccess internal ID. The former is more descriptive but will
# not work if you have duplicate identifiers in your catalogue!
#
use_identifiers_in_urls = 0

dont_enforce_access_settings = 0

#
# Front page set code
#
front_page_set_code = frontPage

#
# Allow PHP code in content-managed site pages
#
# By default only value tags in the form {{{tag-name}}} are allowed in Pawtucket site page templates. 
# If you need the flexibility and power afforded by direct embedding of PHP code in your templates
# set this option to a non-zero value. Note that enabling this option will allow execution of ANY
# code embedded in the template on EVERY page load. Depending upon your point of view this is either a
# feature or a security hole. It doesn't have to be a problem, but keep it in mind...
#
allow_php_in_site_page_templates = 0


#
# Configuration for Excel (xlsx) and PowerPoint (pptx) export formats
# PDF formats are configured using templates in app/printTemplates
# (See http://docs.collectiveaccess.org/wiki/PDF_Output)
#
export_formats = {
	ca_objects = {
		basic_excel = {
			name = Excel (basic information),
			type = xlsx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.large
				},
				Object = {
					template = ^ca_objects.preferred_labels.name (^ca_objects.idno)
				},
				Description = {
					template = ^ca_objects.description
				},
				Date = {
					template = ^ca_objects.creation_date
				}
			}
		},
		basic_ppt = {
			name = PowerPoint (basic information),
			type = pptx,
			columns = {
				Image = {
					template = ^ca_object_representations.media.large,
					width = 4in,
					height = 3.5in,
					x = 0.5in,
					y = 1.5in
				},
				Object = {
					template = ^ca_objects.preferred_labels.name (^ca_objects.idno),
					width = 10in,
					height = 1in,
					x = 0in,
					y = 0.25in,
					size = 20px,
					bold = 1,
					color = 000000,
					align = center
				},
				Description = {
					template = ^ca_objects.description,
					width = 3in,
					height = 5in,
					x = 6.5in,
					y = 1.5in,
					size = 12px,
					color = 000000,
					align = left
				},
				Date = {
					template = ^ca_objects.creation_date,
					width = 1.5in,
					height = 15px,
					x = 8.5in,
					y = 7.1in,
					size = 12px,
					color = 000000
				}
			}
		}
	}
}


#
# Display template used to format information text at bottom of media overlay. Template is evaluated relative to the item with which the media is
# associated. If left blank preferred label + identifier of the item associated with the media is displayed.
#
media_overlay_titlebar_template =

#
# Representation versions to provide download option for in media viewer. If omitted then no download control is displayed
# (Uncomment the directive below to enable downloads)
#
#ca_object_representation_download_versions = [original]

#
# Configuration for image comparison interface. Set first key to table name (for now only ca_objects are supported)
# and second level keys to option names with values. 
# 
compare_images = {
	ca_objects = {
		# template to use when displaying object name within compare interface
		title_template = ^ca_objects.preferred_labels.name
	}
}

# 
# Configuration for registration security method
# This can either be set to sum_equation (for basic arithmetic challenge question: 4+7=?) or captcha, which implements a Google reCaptcha
# If you select reCaptcha, you will have to register the application and provide two API keys to allow google to process the captcha
# You can do so at https://www.google.com/recaptcha
#

registration_security = sum_equation
google_recaptcha_sitekey = 
google_recaptcha_secretkey = 

global_template_values = {
	homepage = {
		name = Home Page,
		description = home page,
		width = 600px,
		height = 50px,
		usewysiwygeditor = 0 
	}
	aboutcol = {
		name = About Column One,
		description = about col one,
		width = 600px,
		height = 50px,
		usewysiwygeditor = 1 
	}
	aboutcol2 = {
		name = About Column Two,
		description = about col 2,
		width = 600px,
		height = 50px,
		usewysiwygeditor = 1 
	}
}


history_tracking_policies = {
    defaults = { 
        ca_objects = current_location
    },
    policies = {
        current_location = {
            name = _(Current location),
            table = ca_objects,
            mode = workflow, # movements or workflow
            elements = {
                ca_storage_locations = {
                    __default__ = {
                        restrictToRelationshipTypes = [related], 
                        setInterstitialElementsOnAdd = [effective_date],
                        template = <l>^ca_storage_locations.hierarchy.preferred_labels.name%delimiter=_âžœ_</l>,
                        trackingRelationshipType = related
                    }
                }
            }
        }
    }
}

#
# Control which history tracking current value (if any) is displayed in editor inspectors
#
inspector_tracking_displays = {
    ca_objects = {
        __default__ = {
            policy = current_location,
            label = _(Current location)
        }
    }
}

# -----------------------------------
# Library-style check-out of objects
# -----------------------------------
enable_library_services = 1
enable_object_checkout = 1