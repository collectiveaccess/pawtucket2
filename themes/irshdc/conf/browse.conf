cache_timeout = 0

#
# 
#
browseTypes = {
	schools = {
		displayName = _(Schools),
		labelSingular = _("school"),
 		labelPlural = _("schools"),
		table = ca_entities,
		restrictToTypes = [school],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {}, 
			list = {},
			map = {
				data = ca_places.georeference,
				display = {
					labelTemplate = ,
					contentTemplate = <p><unit relativeTo='ca_objects' length='1' restrictToRelationshipTypes='featured'><ifdef code='ca_object_representations.media.icon'><div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div></unit><l>^ca_entities.preferred_labels.displayname</l><br/>^ca_entities.description</p>
				}
			}
		},
		options = {
			selectMediaUsingRelationshipTypes = [featured]
		}
		sortBy = {
			Name = ca_entities.preferred_labels.name_sort
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Name = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown
	},
	objects = {
		displayName = _(Records),
		labelSingular = _("record"),
 		labelPlural = _("records"),
		table = ca_objects,
		
		restrictToTypes = [archival,library,work,resource,file,survivor],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
#			map = {
#				data = ca_places.georeference,
#				display = {
#					labelTemplate = ,
#					contentTemplate = <p><ifcount code='ca_object_representations.media.icon'><div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div></ifcount><l>^ca_objects.preferred_labels.name</l><br/>^ca_objects.description</p>
#				}
#			},
#			timeline = {
#				data = ca_objects.indexingDatesSet,
#				display = {
#					title_template = <l>^ca_objects.preferred_labels.name</l>,
#					description_template = <p><case><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Library/'>^ca_objects.description_new.description_new_txt</if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /RG10/'><ifdef code='ca_objects.record_group_id|ca_objects.file_series'>^ca_objects.record_group_id: ^ca_objects.file_series. The School Files Series from RG-10 (Record Group 10) contains records relating to the administration of Indian residential schools and education in Canada between 1879 and 1953.</ifdef></if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Archival/'>^ca_objects.scope_new.scope_new_text</if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Museum/'>^ca_objects.curatorial_description.curatorial_desc_value</if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Statement/'>^ca_objects.description_new.description_new_txt</if></case></p>,
#					#credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
#					#caption_template = <em>^ca_objects.caption</em>,
#					image = ^ca_object_representations.media.small,
#					icon = ^ca_object_representations.media.icon
#				}
#			}
		},
		sortBy = {
			Title = ca_object_labels.name,
			Date = ca_objects.indexingDatesSet,
			Type = ca_objects.type_id
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Date = asc,
			Type = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,		
		excludeFieldsFromSearch = [ca_object_representations.media_content, ca_objects.administrative_notes, objects.access_rights, ca_objects.MARC_accompanying, ca_objects.additional_form, ca_objects.administrative_notes, ca_objects.RAD_admin_hist, ca_objects.alt_id, ca_objects.aspect_ratio, ca_objects.audio_bit_depth, ca_objects.audio_codec_ID, ca_objects.audio_format, ca_objects.audio_bit_rate, ca_objects.audio_sampling, ca_objects.bibliography, ca_objects.call_number, ca_objects.RAD_caption, ca_objects.capture_device, ca_objects.capture_software_version, ca_objects.deaccession_upload, ca_objects.checksum_creation_date, ca_objects.chroma_subsampling, ca_objects.classification, ca_objects.related_collection_list, ca_objects.community_rights, ca_objects.computer, ca_objects.condition_status.current_condition_date, ca_objects.condition_status.current_condition_remarks, ca_objects.historical_note.historical_note_value, ca_objects.historical_note.historical_note_source, ca_objects.creation_date, ca_objects.production_note, ca_objects.deaccession_details, ca_objects.deck, ca_objects.digital_preservation_toggle, ca_objects.digitization_facility, ca_objects.digitization_supervisor, ca_objects.dissertation_note, ca_objects.digital_file_duration, ca_objects.MARC_edition, ca_objects.electronic_specified, ca_objects.electronic_URL, ca_objects.exhibition_note, ca_objects.RAD_availability.RAD_availability_text, ca_objects.RAD_availability.RAD_availability_Url, ca_objects.RAD_originals.RAD_originals_text, ca_objects.RAD_originals.RAD_originals_Url, ca_objects.file_name, ca_objects.file_size, ca_objects.filenames, ca_objects.findingaid_catalogues, ca_objects.library_idno, ca_objects.image_bit_depth, ca_objects.image_colour_profile, ca_objects.image_colourspace, ca_objects.image_height, ca_objects.image_version, ca_objects.image_width, ca_objects.ISADG_transfer, ca_objects.interview_dates, ca_objects.MARC_issn, ca_objects.issuing_body, ca_objects.keywords, ca_objects.dc_license, ca_objects.local_note, ca_objects.LTO_No, ca_objects.md5_checksum, ca_objects.medium, ca_objects.modified_date, ca_objects.NCTR_container_ID, ca_objects.source_container_id, ca_objects.source_container_description, ca_objects.NCTR_document_ID, ca_objects.nctr_site_id, ca_objects.recording_place_notes, ca_objects.testimony_project_notes, ca_objects.RAD_accompanying, ca_objects.public_notes, ca_objects.archival_history.archival_history_text, ca_objects.archival_history.archival_history_URL, ca_objects.other_holding, ca_objects.MARC_physical_access, ca_objects.MARC_physical, ca_objects.RAD_pubPlace, ca_objects.place_interview.place_of_interview, ca_objects.place_interview.specific_place_of_interview, ca_objects.preservation_event, ca_objects.preservation_event_date, ca_objects.preservation_notes, ca_objects.RAD_pubDesc, ca_objects.rcap_type, ca_objects.RAD_material.RAD_material_text, ca_objects.RAD_material.RAD_material_Url, ca_objects.relationship, ca_objects.relationship_type, ca_objects.RAD_repository, ca_objects.reproducing_device, ca_objects.alternate_text.alternate_administrative_note, ca_objects.rightsResource, ca_objects.dc_rights, ca_objects.scanner, ca_objects.file_series_full, ca_objects.RAD_scopecontent, ca_objects.MARC_volume, ca_objects.series_uniform, ca_objects.video_format, ca_objects.rg_source, ca_objects.RAD_statement, ca_objects.subjects, ca_objects.MARC_summary, ca_objects.system_note, ca_objects.testimony_project, ca_objects.traditional_knowledge.knowledge_value, ca_objects.traditional_knowledge.knowledge_reference, ca_objects.RAD_useRepro, ca_objects.RAD_usePub, ca_objects.video_bit_rate, ca_objects.video_codec_ID, ca_objects.video_colourspace, ca_objects.video_wrapper, ca_objects.video_frame_rate, ca_objects.video_height, ca_objects.video_standard, ca_objects.video_width]
	},
	all_objects = {
		displayName = _(Records),
		labelSingular = _("record"),
 		labelPlural = _("records"),
		table = ca_objects,
		
		restrictToTypes = [],
		#dontExpandTypesHierarchically = true,
		availableFacets = [],
		
		# formats available for display of results
		# possible values are: images, list, timeline, map
		views = {
			images = {},
			list = {},
#			map = {
#				data = ca_places.georeference,
#				display = {
#					labelTemplate = ,
#					contentTemplate = <p><ifcount code='ca_object_representations.media.icon'><div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div></ifcount><l>^ca_objects.preferred_labels.name</l><br/>^ca_objects.description</p>
#				}
#			},
#			timeline = {
#				data = ca_objects.indexingDatesSet,
#				display = {
#					title_template = <l>^ca_objects.preferred_labels.name</l>,
#					description_template = <p><case><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Library/'>^ca_objects.description_new.description_new_txt</if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /RG10/'><ifdef code='ca_objects.record_group_id|ca_objects.file_series'>^ca_objects.record_group_id: ^ca_objects.file_series. The School Files Series from RG-10 (Record Group 10) contains records relating to the administration of Indian residential schools and education in Canada between 1879 and 1953.</ifdef></if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Archival/'>^ca_objects.scope_new.scope_new_text</if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Museum/'>^ca_objects.curatorial_description.curatorial_desc_value</if><if rule='^ca_objects.type_id%convertCodesToDisplayText=1 =~ /Statement/'>^ca_objects.description_new.description_new_txt</if></case></p>,
#					#credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
#					#caption_template = <em>^ca_objects.caption</em>,
#					image = ^ca_object_representations.media.small,
#					icon = ^ca_object_representations.media.icon
#				}
#			}
		},
		sortBy = {
			Title = ca_object_labels.name,
			Date = ca_objects.indexingDatesSet,
			Type = ca_objects.type_id
		},
		# --- default sort direction for the sortBy options
		sortDirection = {
			Title = asc,
			Date = asc,
			Type = asc
		},
		# --- sortControlType = dropdown or list
		sortControlType = dropdown,		
		excludeFieldsFromSearch = [ca_object_representations.media_content, ca_objects.administrative_notes, objects.access_rights, ca_objects.MARC_accompanying, ca_objects.additional_form, ca_objects.administrative_notes, ca_objects.RAD_admin_hist, ca_objects.alt_id, ca_objects.aspect_ratio, ca_objects.audio_bit_depth, ca_objects.audio_codec_ID, ca_objects.audio_format, ca_objects.audio_bit_rate, ca_objects.audio_sampling, ca_objects.bibliography, ca_objects.call_number, ca_objects.RAD_caption, ca_objects.capture_device, ca_objects.capture_software_version, ca_objects.deaccession_upload, ca_objects.checksum_creation_date, ca_objects.chroma_subsampling, ca_objects.classification, ca_objects.related_collection_list, ca_objects.community_rights, ca_objects.computer, ca_objects.condition_status.current_condition_date, ca_objects.condition_status.current_condition_remarks, ca_objects.historical_note.historical_note_value, ca_objects.historical_note.historical_note_source, ca_objects.creation_date, ca_objects.production_note, ca_objects.deaccession_details, ca_objects.deck, ca_objects.digital_preservation_toggle, ca_objects.digitization_facility, ca_objects.digitization_supervisor, ca_objects.dissertation_note, ca_objects.digital_file_duration, ca_objects.MARC_edition, ca_objects.electronic_specified, ca_objects.electronic_URL, ca_objects.exhibition_note, ca_objects.RAD_availability.RAD_availability_text, ca_objects.RAD_availability.RAD_availability_Url, ca_objects.RAD_originals.RAD_originals_text, ca_objects.RAD_originals.RAD_originals_Url, ca_objects.file_name, ca_objects.file_size, ca_objects.filenames, ca_objects.findingaid_catalogues, ca_objects.library_idno, ca_objects.image_bit_depth, ca_objects.image_colour_profile, ca_objects.image_colourspace, ca_objects.image_height, ca_objects.image_version, ca_objects.image_width, ca_objects.ISADG_transfer, ca_objects.interview_dates, ca_objects.MARC_issn, ca_objects.issuing_body, ca_objects.keywords, ca_objects.dc_license, ca_objects.local_note, ca_objects.LTO_No, ca_objects.md5_checksum, ca_objects.medium, ca_objects.modified_date, ca_objects.NCTR_container_ID, ca_objects.source_container_id, ca_objects.source_container_description, ca_objects.NCTR_document_ID, ca_objects.nctr_site_id, ca_objects.recording_place_notes, ca_objects.testimony_project_notes, ca_objects.RAD_accompanying, ca_objects.public_notes, ca_objects.archival_history.archival_history_text, ca_objects.archival_history.archival_history_URL, ca_objects.other_holding, ca_objects.MARC_physical_access, ca_objects.MARC_physical, ca_objects.RAD_pubPlace, ca_objects.place_interview.place_of_interview, ca_objects.place_interview.specific_place_of_interview, ca_objects.preservation_event, ca_objects.preservation_event_date, ca_objects.preservation_notes, ca_objects.RAD_pubDesc, ca_objects.rcap_type, ca_objects.RAD_material.RAD_material_text, ca_objects.RAD_material.RAD_material_Url, ca_objects.relationship, ca_objects.relationship_type, ca_objects.RAD_repository, ca_objects.reproducing_device, ca_objects.alternate_text.alternate_administrative_note, ca_objects.rightsResource, ca_objects.dc_rights, ca_objects.scanner, ca_objects.file_series_full, ca_objects.RAD_scopecontent, ca_objects.MARC_volume, ca_objects.series_uniform, ca_objects.video_format, ca_objects.rg_source, ca_objects.RAD_statement, ca_objects.subjects, ca_objects.MARC_summary, ca_objects.system_note, ca_objects.testimony_project, ca_objects.traditional_knowledge.knowledge_value, ca_objects.traditional_knowledge.knowledge_reference, ca_objects.RAD_useRepro, ca_objects.RAD_usePub, ca_objects.video_bit_rate, ca_objects.video_codec_ID, ca_objects.video_colourspace, ca_objects.video_wrapper, ca_objects.video_frame_rate, ca_objects.video_height, ca_objects.video_standard, ca_objects.video_width]
	},
#	occ = {
#		displayName = _("Events & Exhibitions"),
#		labelSingular = _("event/exhibition"),
 #		labelPlural = _("events/exhibitions"),
#		table = ca_occurrences,
#		restrictToTypes = [],
#		baseCriteria = {
#			exclude = [no],
#		},
		# formats available for display of results
		# possible values are: images, list, timeline, map
#		views = {
#			images = {}, 
#			list = {},
#			map = {
#				data = ca_places.georeference,
#				display = {
#					labelTemplate = <l>^ca_occurrences.preferred_labels.name</l>,
#					contentTemplate = "<case><ifdef code='ca_object_representations.media.icon'><unit relativeTo='ca_occurrences' length='1'><div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div></unit></ifdef><ifcount code='ca_objects.related' min='1'><unit relativeTo='ca_objects.related' length='1'><div style='float:left; margin:0px 10px 10px 0px;'>^ca_object_representations.media.icon</div></unit></ifcount></case><p>^ca_occurrences.description_new.description_new_txt</p>"
#				}
#			},
#			timeline = {
#				data = ca_occurrences.occurrence_dates,
#				display = {
#					title_template = <l>^ca_occurrences.preferred_labels.name</l>,
#					description_template = <p>^ca_occurrences.description_new.description_new_txt</p>,
					#credit_template = ^ca_objects.rightsStatement.rightsStatement_text,
					#caption_template = <em>^ca_objects.caption</em>,
#					image = "<case><ifdef code='ca_object_representations.media.small'><unit relativeTo='ca_occurrences' length='1'>^ca_object_representations.media.small</unit></ifdef><ifcount code='ca_objects.related' min='1'><unit relativeTo='ca_objects.related' length='1'>^ca_object_representations.media.small</unit></ifcount></case>",
#					icon = "<case><ifdef code='ca_object_representations.media.icon'><unit relativeTo='ca_occurrences' length='1'>^ca_object_representations.media.icon</unit></ifdef><ifcount code='ca_objects.related' min='1'><unit relativeTo='ca_objects.related' length='1'>^ca_object_representations.media.icon</unit></ifcount></case>"
#				}
#			}
#		},
#		options = {
#			selectMediaUsingRelationshipTypes = [featured]
#		},		
#		sortBy = {
#			Name = ca_occurrences.preferred_labels.name_sort
#		},
		# --- default sort direction for the sortBy options
#		sortDirection = {
#			Name = asc
#		},
		# --- sortControlType = dropdown or list
#		sortControlType = dropdown
#	}
}

views = {
	images = {
		icon = glyphicon-th
	},
	list = {
		icon = glyphicon-list
	},
	timeline = {
		icon = glyphicon-time
	},
	map = {
		icon = glyphicon-globe
	}
}

# --- text for Browse menu item, default is "Browse" 
browse_menu_button_text = <span>Find</span>

# --- default number of results per page/ajax load
defaultHitsPerBlock = 36

# --- set to list to show dropdown with links to each configured browse or a single Browse nav link when one browse is configured
browseMenuFormat = list

# --- set if you don't want the browse menu to be preloaded with facets for the first browse type on open
dontPreloadBrowseMenu = 1

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-8 col-md-8 col-lg-8
result_col_class =

# --- refine_col_class -> boostrap col class to assign to refine col - defaults to: col-sm-4 col-md-3 col-md-offset-1 col-lg-3 col-lg-offset-1
refine_col_class =
# --------------------------------------------------------------------
# Configuration for entity browse
ca_entities = {
	name = _("Entities"),
	facets = {
		theme_facet = {
			type = attribute,
			element_code = ca_entities.themes,
			
			group_mode = alphabetical,
			label_singular = _("theme"),
			label_plural = _("themes")
		},
#		narrative_threads_facet = {
#			type = attribute,
#			element_code = ca_entities.narrative_thread,
#			group_mode = alphabetical,
#			
#			label_singular = _("narrative thread"),
#			label_plural = _("narrative threads")
#		},
		denomination_facet = {
			type = attribute,
			element_code = denomination,
			group_mode = alphabetical,
			
			label_singular = _("denomination"),
			label_plural = _("denominations")
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_entities_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 1,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = ,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = ca_entities.indexingDatesSet,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),			
		},
		community_facet = {
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_entities,
			restrict_to_types = [community],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = a,
			label_singular = _("community"),
			label_plural = _("communities"),
		},
		repository_facet = {
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_entities,
			restrict_to_types = [repository],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = a,
			label_singular = _("repository"),
			label_plural = _("repositories"),
		}

	}
}
# ---------------------------------------------------
# Configuration for object browse
ca_objects = {
	name = _("Objects"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("type"),
			label_plural = _("types")
		},
		resource_type_facet = {
			type = attribute,
			element_code = resource_type,
			group_mode = alphabetical,
			suppress = ["null"],
			
			label_singular = _("Resource Type"),
			label_plural = _("Resource Type")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_objects_x_object_representations,
			restrict_to_types = ["media", "transcript"],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("has media"),
			label_plural = _("has media")
		},
		school_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [school],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = a,
			label_singular = _("school"),
			label_plural = _("schools"),
		},
		theme_facet = {
			type = attribute,
			element_code = themes,
			group_mode = alphabetical,
			
			label_singular = _("theme"),
			label_plural = _("themes")
		},
#		narrative_threads_facet = {
#			type = attribute,
#			element_code = narrative_thread,
#			group_mode = alphabetical,
			
#			label_singular = _("narrative thread"),
#			label_plural = _("narrative threads")
#		},
		decade_facet = {
			type = normalizedDates,
			element_code = ca_objects.indexingDatesSet,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_objects.indexingDatesSet,
			normalization = years,
			
			group_mode = none,
			requires = decade_facet,
			
			label_singular = _("year"),
			label_plural = _("years"),			
		},
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 1,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = ,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place"),
			label_plural = _("places"),
		},
		partner_facet = {
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_relationship_types = [source],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = a,
			label_singular = _("partner"),
			label_plural = _("partners"),
		},
		repository_facet = {
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_relationship_types = [repository],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = a,
			label_singular = _("repository"),
			label_plural = _("repositories"),
		},
		community_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [community],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("community"),
			label_plural = _("communities"),
		},
		trc_facet = {
			type = attribute,
			element_code = trc,
			group_mode = alphabetical,
			
			label_singular = _("TRC document"),
			label_plural = _("TRC document")
		},
		detail_entity = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_objects_x_entities,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			requires = x,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("detail entity"),
			label_plural = _("detail entity")
		},
		detail_occurrence = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			requires = x,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("detail occ"),
			label_plural = _("detail occ")
		},
		detail_occurrence_dig_exhibition = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_occurrences,
			relationship_table = ca_objects_x_occurrences,
			restrict_to_relationship_types = [referenced],
			
			individual_group_display = 1,
			
			requires = x,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("detail occ"),
			label_plural = _("detail occ")
		},
		detail_place = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_objects_x_places,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			requires = x,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("detail place"),
			label_plural = _("detail place")
		},
		detail_collection_edu_res = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_collections,
			relationship_table = ca_objects_x_collections,
			restrict_to_relationship_types = [part_of],
			restrict_to_types = [ed_collection],
			
			individual_group_display = 1,
			
			requires = x,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("detail edu resource colleciton"),
			label_plural = _("detail edu resource colleciton")
		},
		genre_facet = {
			type = attribute,
			element_code = genre,
			group_mode = alphabetical,
			requires = x,
			label_singular = _("genre"),
			label_plural = _("genres")
		}
	}
}
ca_occurrences = {
	name = _("Occurrences"),
	facets = {
		type_facet = {
			type = fieldList,
			field = type_id,
			
			group_mode = none,

			label_singular = _("type"),
			label_plural = _("types")
		},
		has_media_facet = {
			type = has,
			
			table = ca_object_representations,
			relationship_table = ca_occurrences_x_object_representations,
			restrict_to_types = [],
			restrict_to_relationship_types = [],
			
			label_yes = _("Has media"),
			label_no = _("Does not have media"),
			
			single_value = 1,
			
			label_singular = _("has media"),
			label_plural = _("has media")
		},
		organization_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [org],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = an,
			label_singular = _("organization"),
			label_plural = _("organizations")
		},		
		place_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_places,
			relationship_table = ca_places_x_occurrences,
			restrict_to_types = [],
			
			individual_group_display = 1,
			
			group_mode = hierarchical,
			order_by_label_fields = [name],
			
			# Set to non-zero value to display hierarchy on items in this facet
			show_hierarchy = 1,
			
			# Character(s) to place between elements of the hierarchy
			hierarchical_delimiter = &nbsp;⬅&nbsp;,
			
			# Number of items to trim off the top (leave blank or set to 0 to trim nothing)
			remove_first_items = 1,
			
			# Maximum length of hierarchy to display (leave blank to return hierarchy unabridged)
			hierarchy_limit = ,
			
			# can be ASC or DESC (default is DESC)
			hierarchy_order  = DESC,
			
			indefinite_article = a,
			label_singular = _("place hierarchy"),
			label_plural = _("places hierarchy"),
		},
		decade_facet = {
			type = normalizedDates,
			element_code = ca_occurrences.occurrence_dates,
			normalization = decades,
			
			group_mode = none,
			
			label_singular = _("decade"),
			label_plural = _("decades"),			
		},
		year_facet = {
			type = normalizedDates,
			element_code = ca_occurrences.occurrence_dates,
			normalization = years,
			
			group_mode = none,
			requires = decade_facet,
			
			label_singular = _("year"),
			label_plural = _("years"),			
		},
		repository_facet = {
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [repository],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [displayname],
			
			indefinite_article = a,
			label_singular = _("repository"),
			label_plural = _("repositories"),
		},
		people_facet = {
			# 'type' can equal authority, attribute, fieldList, normalizedDates
			type = authority,		
			table = ca_entities,
			relationship_table = ca_entities_x_occurrences,
			restrict_to_types = [ind],
			
			individual_group_display = 1,
			
			group_mode = alphabetical,
			order_by_label_fields = [surname, forename, middlename],
			
			indefinite_article = an,
			label_singular = _("person"),
			label_plural = _("people")
		},
		exclude = {
			type = attribute,
			element_code = occ_exclude_search_browse,
			
			group_mode = none,
			requires = x,
			
			label_singular = _("Exclude"),
			label_plural = _("Exclude")
		}

	}
}